openapi: 3.0.2
info:
  description: An OpenAPI specifications for unit-sdk clients
  title: Unit OpenAPI specifications
  version: 0.0.2
servers:
- url: https://api.s.unit.sh
security:
- bearerAuth: []
paths:
  /applications/{applicationId}:
    get:
      description: 'Get an Application from API '
      operationId: execute
      parameters:
      - description: ID of the application to get
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApplicationResponseWithIncluded'
          description: Successful Response
      summary: Get Application by Id
      tags:
      - Get Application
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Application via API '
      operationId: execute
      parameters:
      - description: ID of the application to update
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_application'
        description: Update Application Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApplicationResponseWithIncluded'
          description: Successful Response
      summary: Update Application
      tags:
      - Update Application
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/cancel:
    post:
      description: 'Cancel a Application via API '
      operationId: execute
      parameters:
      - description: ID of the application to get
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CancelApplicationRequest'
        description: Cancel Application Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCancelApplicationResponse'
          description: Successful Response
      summary: Cancel Application by Id
      tags:
      - Cancel Application
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /applications:
    get:
      description: 'Get List Applications from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitListApplicationsResponse'
          description: Successful Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get List Application
      tags:
      - Get List Applications
      x-accepts: application/json
    post:
      description: 'Create an Application via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createApplication'
        description: Create Application Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCreateApplicationResponse'
          description: Successful Response
      summary: Create Application
      tags:
      - Create Application
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /application-forms:
    get:
      description: 'Get List Application Forms from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_1'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApplicationFormsListResponse'
          description: Successful Response
      summary: Get List Application Forms
      tags:
      - Get List Application Forms
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Application Form via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createApplicationForm'
        description: Create Application Form Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitApplicationFormResponse'
          description: Successful Response
      summary: Create Application Form
      tags:
      - Create ApplicationForm
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /applications/{applicationId}/documents/{documentId}:
    put:
      description: 'Upload a PDF file via API '
      operationId: execute
      parameters:
      - description: ID of the application to upload a file to
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to upload a file for
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/pdf:
            schema:
              type: object
        description: Upload PDF File
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Upload a PDF document
      tags:
      - Upload a PDF Document for an Application
      x-content-type: application/pdf
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/:
    put:
      description: 'Upload a PNG file via API '
      operationId: execute
      parameters:
      - description: ID of the application to upload a file to
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to upload a file for
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          image/png:
            schema:
              type: object
        description: Upload PNG File
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Upload a PNG document
      tags:
      - Upload a PNG Document for an Application
      x-content-type: image/png
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/?:
    put:
      description: 'Upload a JPEG file via API '
      operationId: execute
      parameters:
      - description: ID of the application to upload a file to
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to upload a file for
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          image/jpeg:
            schema:
              type: object
        description: Upload JPEG File
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Upload a JPEG document
      tags:
      - Upload a JPEG Document for an Application
      x-content-type: image/jpeg
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/back:
    put:
      description: Upload a PDF file via API - Back Side
      operationId: execute
      parameters:
      - description: ID of the application to upload a file to
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to upload a file for
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/pdf:
            schema:
              type: object
        description: Upload PDF File - Back Side
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Upload a PDF document - Back Side
      tags:
      - Upload a PDF Document for an Application - Back Side
      x-content-type: application/pdf
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/back/:
    put:
      description: Upload a PNG file via API - Back Side
      operationId: execute
      parameters:
      - description: ID of the application to upload a file to
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to upload a file for
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          image/png:
            schema:
              type: object
        description: Upload PNG File - Back Side
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Upload a PNG document - Back Side
      tags:
      - Upload a PNG Document for an Application - Back Side
      x-content-type: image/png
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/back/?:
    put:
      description: Upload a JPEG file via API - Back Side
      operationId: execute
      parameters:
      - description: ID of the application to upload a file to
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to upload a file for
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          image/jpeg:
            schema:
              type: object
        description: Upload JPEG File - Back Side
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Upload a JPEG document - Back Side
      tags:
      - Upload a JPEG Document for an Application - Back Side
      x-content-type: image/jpeg
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents:
    get:
      description: 'Get List of Documents via API '
      operationId: execute
      parameters:
      - description: ID of the application to get documents for
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitListDocumentsResponse'
          description: Successful Response
      summary: Get List of Documents
      tags:
      - Get List of Documents
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a document via API '
      operationId: execute
      parameters:
      - description: ID of the application to create a file for
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Create a document
      tags:
      - Create a Document for an Application
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/verify:
    put:
      description: 'Verify a document via API '
      operationId: execute
      parameters:
      - description: ID of the application to verify a file for
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to verify
        in: path
        name: documentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyDocument'
        description: Verify Document
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Verify a document
      tags:
      - Verify a Document for an Application
      x-content-type: application/json
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/download:
    get:
      description: 'Download a Document via API '
      operationId: execute
      parameters:
      - description: ID of the application
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to download
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Download a Document
      tags:
      - Download a Document
      x-accepts: application/octet-stream
  /applications/{applicationId}/documents/{documentId}/download/back:
    get:
      description: Download a Document - Back Side via API
      operationId: execute
      parameters:
      - description: ID of the application
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: ID of the document to download
        in: path
        name: documentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Download a Document - Back Side
      tags:
      - Download a Document - Back Side
      x-accepts: application/octet-stream
  /application-forms/{applicationFormId}:
    get:
      description: 'Get an Application Form from API '
      operationId: execute
      parameters:
      - description: ID of the application form to get
        in: path
        name: applicationFormId
        required: true
        schema:
          type: string
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApplicationFormResponseWithIncluded'
          description: Successful Response
      summary: Get ApplicationForm by Id
      tags:
      - Get Application Form
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts:
    get:
      description: 'Get List Accounts from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_2'
        style: deepObject
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountsListResponse'
          description: Successful Response
        "401": {}
      summary: Get List Accounts
      tags:
      - Get List Accounts
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create Account via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createAccount'
        description: Create Account Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Create Account
      tags:
      - Create Account
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}:
    get:
      description: 'Get an Account from API '
      operationId: execute
      parameters:
      - description: ID of the account to get
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponseWithIncluded'
          description: Successful Response
      summary: Get Account by Id
      tags:
      - Get Account
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Account via API '
      operationId: execute
      parameters:
      - description: ID of the account to update
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/patch_account'
        description: Update Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Update Account
      tags:
      - Update Account
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /accounts/{accountId}/limits:
    get:
      description: 'Get Account Limits from API '
      operationId: execute
      parameters:
      - description: ID of the account to get
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitGetAccountLimitsResponse'
          description: Successful Response
      summary: Get Account Limits by Id
      tags:
      - Get Account Limits
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/unfreeze:
    post:
      description: 'Unfreeze an Account via API '
      operationId: execute
      parameters:
      - description: ID of the account to get
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Unfreeze Account by Id
      tags:
      - Unfreeze Account
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/freeze:
    post:
      description: 'Freeze Account via API '
      operationId: execute
      parameters:
      - description: ID of the account to freeze
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FreezeAccountRequest'
        description: Freeze Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Freeze Account by Id
      tags:
      - Freeze an Account
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/close:
    post:
      description: 'Close an Account via API '
      operationId: execute
      parameters:
      - description: ID of the account to close
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CloseAccountRequest'
        description: Close Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Close an Account by Id
      tags:
      - Close an Account
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/reopen:
    post:
      description: 'Reopen an Account via API '
      operationId: execute
      parameters:
      - description: ID of the account to close
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Reopen an Account by Id
      tags:
      - Reopen an Account
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/enter-daca:
    post:
      description: 'Enter Control Agreement for Account via API '
      operationId: execute
      parameters:
      - description: ID of the account
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Enter Account Control Agreement by Id
      tags:
      - Enter Control Agreement for Account
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/activate-daca:
    post:
      description: 'Activate Control Agreement for Account via API '
      operationId: execute
      parameters:
      - description: ID of the account
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default: {}
      summary: Activate Account Control Agreement by Id
      tags:
      - Activate Control Agreement for Account
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/deactivate-daca:
    post:
      description: Deactivate Control Agreement for Account via API
      operationId: execute
      parameters:
      - description: ID of the account
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        "404": {}
      summary: Deactivate Account Control Agreement by Id
      tags:
      - Deactivate Control Agreement for Account
      x-accepts: application/vnd.api+json; charset=utf-8
  /account-end-of-day:
    get:
      description: 'Get AccountEndOfDay List from API '
      operationId: execute
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitGetAccountEndOfDayListResponse'
          description: Successful Response
        default: {}
      summary: Get AccountEndOfDay List
      tags:
      - Get list account end-of-day balances history
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}:
    get:
      description: 'Get a Customer from API '
      operationId: execute
      parameters:
      - description: ID of the customer to get
        in: path
        name: customerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomerResponse'
          description: Successful Response
      summary: Get Customer by Id
      tags:
      - Get Customer
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Customer via API '
      operationId: execute
      parameters:
      - description: ID of the customer to update
        in: path
        name: customerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_customer'
        description: Update Customer Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCustomerResponse'
          description: Successful Response
      summary: Update Customer
      tags:
      - Update Customer
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /customers:
    get:
      description: 'Get Customers List from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_3'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomersListResponse'
          description: Successful Response
      summary: Get Customers List
      tags:
      - Get List Customers
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}/archive:
    post:
      description: 'Archive a Customer via API '
      operationId: execute
      parameters:
      - description: ID of the customer to archive
        in: path
        name: customerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ArchiveCustomerRequest'
        description: Archive Customer Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomerResponse'
          description: Successful Response
      summary: Archive Customer by Id
      tags:
      - Archive Customer
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /payments:
    get:
      description: 'Get List Payments from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_4'
        style: deepObject
      - in: query
        name: include
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPaymentsListResponse'
          description: Successful Response
      summary: Get List Payments
      tags:
      - Get List Payments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Payment via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createPayment'
        description: Create Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponse'
          description: Successful Response
      summary: Create a Payment
      tags:
      - Create a Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /payments/{paymentId}:
    get:
      description: 'Get a Payment from API '
      operationId: execute
      parameters:
      - description: ID of the payment to get
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponseWithIncluded'
          description: Successful Response
      summary: Get Payment by Id
      tags:
      - Get Payment
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Payment via API '
      operationId: execute
      parameters:
      - description: ID of the payment to update
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_payment'
        description: Update Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponse'
          description: Successful Response
      summary: Update Payment
      tags:
      - Update Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /payments/{paymentId}/cancel:
    post:
      description: 'Cancel a Payment via API '
      operationId: execute
      parameters:
      - description: ID of the payment to cancel
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponse'
          description: Successful Response
      summary: Cancel a Payment by Id
      tags:
      - Cancel Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /received-payments:
    get:
      description: 'Get Received Payments from API '
      operationId: execute
      parameters:
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitReceivedPaymentListResponse'
          description: Successful Response
      summary: Get Received Payments List
      tags:
      - Get Received Payments List
      x-accepts: application/vnd.api+json; charset=utf-8
  /received-payments/{paymentId}:
    get:
      description: 'Get a Received Payment from API '
      operationId: execute
      parameters:
      - description: ID of the payment to get
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitReceivedPaymentResponseWithIncluded'
          description: Successful Response
      summary: Get Received Payment by Id
      tags:
      - Get Received Payment
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Received Payment via API '
      operationId: execute
      parameters:
      - description: ID of the payment to update
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_received_payment'
        description: Update Received Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitReceivedPaymentResponse'
          description: Successful Response
      summary: Update Received Payment
      tags:
      - Update Received Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /received-payments/{paymentId}/advance:
    post:
      description: 'Advance a Received Payment via API '
      operationId: execute
      parameters:
      - description: ID of the payment to advance
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitReceivedPaymentResponse'
          description: Successful Response
      summary: Advance Received Payment by Id
      tags:
      - Advance Received Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /counterparties:
    get:
      description: 'Get Counterparties List from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_5'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCounterpartiesListResponse'
          description: Successful Response
      summary: Get Counterparties List
      tags:
      - Get List Counterparties
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a counterparty via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createCounterparty'
        description: Create Counterparty Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCounterpartyResponse'
          description: Successful Response
      summary: Create Counterparty
      tags:
      - Create Counterparty
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /counterparties/{counterpartyId}:
    delete:
      description: 'Delete Counterparty via API '
      operationId: execute
      parameters:
      - description: ID of the counterparty to delete
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Successful Response
      summary: Delete Counterparty by Id
      tags:
      - Delete Counterparty
      x-accepts: application/json
    get:
      description: 'Get a Counterparty from API '
      operationId: execute
      parameters:
      - description: ID of the counterparty to get
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCounterpartyResponse'
          description: Successful Response
      summary: Get Counterparty by Id
      tags:
      - Get Counterparty
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Counterparty via API '
      operationId: execute
      parameters:
      - description: ID of the counterparty to update
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_counterparty'
        description: Update Counterparty Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCounterpartyResponse'
          description: Successful Response
      summary: Update Counterparty
      tags:
      - Update Counterparty
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /counterparties/{counterpartyId}/balance:
    get:
      description: 'Get Recurring Payment from API '
      operationId: execute
      parameters:
      - description: ID of the counterparty to get
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCounterpartyResponse_1'
          description: Successful Response
      summary: Get Counterparty Balance
      tags:
      - Get Counterparty Balance
      x-accepts: application/vnd.api+json; charset=utf-8
  /recurring-payments:
    get:
      description: 'Get Recurring Payments List from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_6'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentListResponse'
          description: Successful Response
      summary: Get Recurring Payments List
      tags:
      - Get List Recurring Payments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Recurring Payment via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createRecurringPayment'
        description: Create Recurring Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Create Recurring Payment
      tags:
      - Create Recurring Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /recurring-payments/{paymentId}:
    get:
      description: 'Get Recurring Payment from API '
      operationId: execute
      parameters:
      - description: ID of the payment to get
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Get Recurring Payment
      tags:
      - Get Recurring Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /recurring-payments/{paymentId}/disable:
    post:
      description: 'Disable Recurring Payment via API '
      operationId: execute
      parameters:
      - description: ID of the payment to disable
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Disable Recurring Payment
      tags:
      - Disable Recurring Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /recurring-payments/{paymentId}/enable:
    post:
      description: 'Enable Recurring Payment via API '
      operationId: execute
      parameters:
      - description: ID of the payment to enable
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Enable Recurring Payment
      tags:
      - Enable Recurring Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards:
    get:
      description: 'Get List of Cards from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_7'
        style: deepObject
      - in: query
        name: include
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponseCardsList'
          description: Successful Response
      summary: Get List of Cards
      tags:
      - Get List of Cards
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Card via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createCard'
        description: Create Card Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Create a Card
      tags:
      - Create a Card
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}:
    get:
      description: 'Get a Card from API '
      operationId: execute
      parameters:
      - description: ID of the card to get
        in: path
        name: cardId
        required: true
        schema:
          type: string
      - in: query
        name: included
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse_1'
          description: Successful Response
      summary: Get Card by Id
      tags:
      - Get Card
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Card via API '
      operationId: execute
      parameters:
      - description: ID of the card to update
        in: path
        name: cardId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_card'
        description: Update Card Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Update Card
      tags:
      - Update Card
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /cards/{cardId}/secure-data/pin/status:
    get:
      description: 'Get Card PIN Status via API '
      operationId: execute
      parameters:
      - description: ID of the card to get PIN status
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse_2'
          description: Successful Response
      summary: Get Card PIN Status
      tags:
      - Get Card PIN Status
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/report-stolen:
    post:
      description: 'Report card as stolen via API '
      operationId: execute
      parameters:
      - description: ID of the card
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Report card as stolen
      tags:
      - Report Card as Stolen
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/report-lost:
    post:
      description: 'Report lost as stolen via API '
      operationId: execute
      parameters:
      - description: ID of the card
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Report lost as stolen
      tags:
      - Report Card as Lost
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/close:
    post:
      description: 'Close a Card via API '
      operationId: execute
      parameters:
      - description: ID of the card to close
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Close a Card
      tags:
      - Close a Card
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/freeze:
    post:
      description: 'Freeze a Card via API '
      operationId: execute
      parameters:
      - description: ID of the card to freeze
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Freeze a Card
      tags:
      - Freeze a Card
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/unfreeze:
    post:
      description: 'Unfreeze a Card via API '
      operationId: execute
      parameters:
      - description: ID of the card to unfreeze
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse'
          description: Successful Response
      summary: Unfreeze a Card
      tags:
      - Unfreeze a Card
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/limits:
    get:
      description: 'Get a Card Limits from API '
      operationId: execute
      parameters:
      - description: ID of the card to get
        in: path
        name: cardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCardResponse_3'
          description: Successful Response
      summary: Get Card Limit by Id
      tags:
      - Get Card Limits
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorizations:
    get:
      description: 'Get List Authorizations from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_8'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitListAuthorizationsResponse'
          description: Successful Response
      summary: Get List authorizations
      tags:
      - Get List Authorizations
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorizations/{authorizationId}:
    get:
      description: 'Get a Authorization from API '
      operationId: execute
      parameters:
      - description: ID of the authorization to get
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
      - in: query
        name: includeNoneAuthorized
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAuthorizationResponse'
          description: Successful Response
      summary: Get Authorization by Id
      tags:
      - Get Authorization
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests:
    get:
      description: 'Get List Authorization Requests from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_9'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitListAuthorizationRequestsResponse'
          description: Successful Response
      summary: Get List Authorization Requests
      tags:
      - Get List Authorization Requests
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}:
    get:
      description: 'Get a Authorization Request from API '
      operationId: execute
      parameters:
      - description: ID of the authorization request to get
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAuthorizationRequestsResponse'
          description: Successful Response
      summary: Get Authorization Request by Id
      tags:
      - Get Authorization Request
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}/approve:
    post:
      description: 'Approve a Authorization Request via API '
      operationId: execute
      parameters:
      - description: ID of the authorization request to approve
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ApproveAuthorizationRequest'
        description: Approve Authorization Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAuthorizationRequestResponse'
          description: Successful Response
      summary: Approve Authorization Request by Id
      tags:
      - Approve Authorization Request
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}/decline:
    post:
      description: 'Decline Authorization Request via API '
      operationId: execute
      parameters:
      - description: ID of the authorization request to decline
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeclineAuthorizationRequest'
        description: Decline Authorization Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAuthorizationRequestResponse'
          description: Successful Response
      summary: Decline Authorization Request
      tags:
      - Decline Authorization Request
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /statements:
    get:
      description: 'Get List Statements from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_10'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitStatementsResponse'
          description: Successful Response
      summary: Get List Statements
      tags:
      - Get List Statements
      x-accepts: application/vnd.api+json; charset=utf-8
  /statements/{statementId}/html:
    get:
      description: 'Get a HTML Statement from API '
      operationId: execute
      parameters:
      - description: ID of the statement to get
        in: path
        name: statementId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Successful Response
      summary: Get HTML Statement by Id
      tags:
      - Get Statement HTML
      x-accepts: text/html
  /statements/{statementId}/pdf:
    get:
      description: 'Get a PDF Statement from API '
      operationId: execute
      parameters:
      - description: ID of the statement to get
        in: path
        name: statementId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get PDF Statement by Id
      tags:
      - Get Statement PDF
      x-accepts: application/pdf
  /statements/{accountId}/bank/pdf:
    get:
      description: 'Get Get Bank verification PDF from API '
      operationId: execute
      parameters:
      - description: ID of the account to get
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get Bank verification PDF
      tags:
      - Get Bank verification PDF
      x-accepts: application/pdf
  /rewards:
    get:
      description: 'Get Rewards List from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_11'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRewardsListResponse'
          description: Successful Response
      summary: Get Rewards List
      tags:
      - Get List Rewards
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Reward via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createReward'
        description: Create Reward Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitRewardResponse'
          description: Successful Response
      summary: Create Reward
      tags:
      - Create Reward
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /rewards/{rewardId}:
    get:
      description: 'Get a Reward from API '
      operationId: execute
      parameters:
      - description: ID of the reward to get
        in: path
        name: rewardId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRewardResponse'
          description: Successful Response
      summary: Get Reward by Id
      tags:
      - Get Reward
      x-accepts: application/vnd.api+json; charset=utf-8
  /events:
    get:
      description: 'Get Events List from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_12'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitEventListResponse'
          description: Successful Response
      summary: Get Events List
      tags:
      - Get List Events
      x-accepts: application/vnd.api+json; charset=utf-8
  /events/{eventId}:
    get:
      description: 'Get an Event from API '
      operationId: execute
      parameters:
      - description: ID of the event to get
        in: path
        name: eventId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitEventResponse_1'
          description: Successful Response
      summary: Get Event by Id
      tags:
      - Get Event
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Fire an Event via API '
      operationId: execute
      parameters:
      - description: ID of the event to fire
        in: path
        name: eventId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitEventResponse'
          description: Successful Response
      summary: Fire Event by Id
      tags:
      - Fire Event
      x-accepts: application/vnd.api+json; charset=utf-8
  /institutions/{routingNumber}:
    get:
      description: 'Get an Institution from API '
      operationId: execute
      parameters:
      - description: routingNumber of the institution to get
        in: path
        name: routingNumber
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitInstitutionResponse'
          description: Successful Response
      summary: Get Institution by Routing Number
      tags:
      - Get Institution
      x-accepts: application/vnd.api+json; charset=utf-8
  /fees:
    post:
      description: 'Create a Fee via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createFee'
        description: Create Fee Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitFeeResponse'
          description: Successful Response
      summary: Create Fee
      tags:
      - Create Fee
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-deposits:
    get:
      description: 'Get List Check Deposits from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_13'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitListCheckDepositsResponse'
          description: Successful Response
      summary: Get List Check Deposits
      tags:
      - Get List Check Deposits
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Check Deposit via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createCheckDeposit'
        description: Create Check Deposit Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCheckDepositResponse'
          description: Successful Response
      summary: Create Check Deposit
      tags:
      - Create Check Deposit
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-deposits/{checkDepositId}:
    get:
      description: 'Get a Check Deposit from API '
      operationId: execute
      parameters:
      - description: ID of the check deposit to get
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckDepositResponse'
          description: Successful Response
      summary: Get Check Deposit by Id
      tags:
      - Get Check Deposit
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Check Deposit via API '
      operationId: execute
      parameters:
      - description: ID of the check deposit to update
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_check_deposit'
        description: Update Check Deposit Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCheckDepositResponse'
          description: Successful Response
      summary: Update Check Deposit
      tags:
      - Update Check Deposit
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-deposits/{checkDepositId}/confirm:
    post:
      description: 'Confirm a Check Deposit from API '
      operationId: execute
      parameters:
      - description: ID of the check deposit to confirm
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckDepositResponse'
          description: Successful Response
      summary: Confirm by Id
      tags:
      - Confirm Check Deposit
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-deposits/{checkDepositId}/front:
    get:
      description: 'Get Front Check Deposit Image from API '
      operationId: execute
      parameters:
      - description: ID of the check deposit to get
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckDepositResponse_1'
          description: Successful Response
      summary: Get Front Check Deposit Image by Id
      tags:
      - Get Check Deposit Front Image
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-deposits/{checkDepositId}/back:
    get:
      description: 'Get Back Check Deposit Image from API '
      operationId: execute
      parameters:
      - description: ID of the check deposit to get
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckDepositResponse_1'
          description: Successful Response
      summary: Get Back Check Deposit Image by Id
      tags:
      - Get Check Deposit Back Image
      x-accepts: application/vnd.api+json; charset=utf-8
  /users/{userId}/api-tokens:
    get:
      description: 'Get List Org API Tokens from API '
      operationId: execute
      parameters:
      - description: ID of the user to revoke token
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitOrgApiTokensListResponse'
          description: Successful Response
      summary: Get List Org API Tokens
      tags:
      - Get List Org API Tokens
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Org API Token via API '
      operationId: execute
      parameters:
      - description: ID of the user to create token for
        in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createApiToken'
        description: Create Org API Token Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitApiTokenResponse'
          description: Successful Response
      summary: Create Org API Token
      tags:
      - Create Org Api Token
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /users/{userId}/api-tokens/{tokenId}:
    delete:
      description: 'Get a Reward from API '
      operationId: execute
      parameters:
      - description: ID of the user to revoke token
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: ID of the token to revoke
        in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApiTokenResponse'
          description: Successful Response
      summary: Get Reward by Id
      tags:
      - Revoke Org API Token
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}/token:
    post:
      description: 'Create a Customer Token via API '
      operationId: execute
      parameters:
      - description: ID of the customer to create token for
        in: path
        name: customerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createCustomerToken'
        description: Create Customer Token Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomerTokenResponse'
          description: Successful Response
      summary: Create Customer Token
      tags:
      - Create Customer Token
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}/token/verification:
    post:
      description: 'Create a Customer Token Verification via API '
      operationId: execute
      parameters:
      - description: ID of the customer to create token for
        in: path
        name: customerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createCustomerTokenVerification'
        description: Create Customer Token Verification Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomerTokenVerificationResponse'
          description: Successful Response
      summary: Create Customer Token Verification
      tags:
      - Create Customer Token Verification
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /webhooks:
    get:
      description: 'Get List Webhooks from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_14'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitWebhooksListResponse'
          description: Successful Response
      summary: Get List Webhooks
      tags:
      - Get List Webhooks
      x-accepts: application/vnd.api+json
    post:
      description: 'Create a Webhook via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createWebhook'
        description: Create Webhook Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitWebhookResponse'
          description: Successful Response
      summary: Create Webhook
      tags:
      - Create Webhook
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /webhooks/{webhookId}:
    get:
      description: 'Get a Webhook from API '
      operationId: execute
      parameters:
      - description: ID of the webhook to get
        in: path
        name: webhookId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitWebhookResponse'
          description: Successful Response
      summary: Get Webhook Id
      tags:
      - Get Webhook
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Webhook via API '
      operationId: execute
      parameters:
      - description: ID of the Webhook to update
        in: path
        name: webhookId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateUnitRequest'
        description: Update Webhook Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitWebhookResponse'
          description: Successful Response
      summary: Update Webhook
      tags:
      - Update Webhook
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /webhooks/{webhookId}/enable:
    post:
      description: 'Enable a Webhook via API '
      operationId: execute
      parameters:
      - description: ID of the webhook to enable
        in: path
        name: webhookId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitWebhookResponse'
          description: Successful Response
      summary: Enable Webhook
      tags:
      - Enable Webhook
      x-accepts: application/vnd.api+json; charset=utf-8
  /webhooks/{webhookId}/disable:
    post:
      description: 'Disable a Webhook via API '
      operationId: execute
      parameters:
      - description: ID of the webhook to disable
        in: path
        name: webhookId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitWebhookResponse'
          description: Successful Response
      summary: Disable a Webhook
      tags:
      - Disable Webhook
      x-accepts: application/vnd.api+json; charset=utf-8
  /atm-locations:
    get:
      description: 'Get List ATM Locations from API '
      operationId: execute
      parameters:
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_15'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/atm_location'
                title: UnitAtmLocationsListResponse
                type: array
          description: Successful Response
      summary: Get List ATM Locations
      tags:
      - Get ATM Locations List
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      description: 'Get a Transaction from API '
      operationId: execute
      parameters:
      - description: ID of the account to get transaction from
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitTransactionResponse'
          description: Successful Response
      summary: Get Transaction by Id
      tags:
      - Get Transaction
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Transaction via API '
      operationId: execute
      parameters:
      - description: ID of the account to update transaction from
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: ID of the transaction to update
        in: path
        name: transactionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/update_transaction'
        description: Update Transaction Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitTransactionResponse_1'
          description: Successful Response
      summary: Update Transaction
      tags:
      - Update Transaction
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /transactions:
    get:
      description: 'Get List Transactions from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_16'
        style: deepObject
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitTransactionsListResponse'
          description: Successful Response
      summary: Get List Transactions
      tags:
      - Get List Transactions
      x-accepts: application/vnd.api+json
  /disputes:
    get:
      description: 'Get List Disputes from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_17'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/dispute'
                title: UnitDisputesListResponse
                type: array
          description: Successful Response
      summary: Get List Disputes
      tags:
      - Get List Disputes
      x-accepts: application/vnd.api+json; charset=utf-8
  /disputes/{disputeId}:
    get:
      description: 'Get a Dispute from API '
      operationId: execute
      parameters:
      - description: ID of the dispute to get
        in: path
        name: disputeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDisputeResponse'
          description: Successful Response
      summary: Get Dispute by Id
      tags:
      - Get Dispute
      x-accepts: application/vnd.api+json; charset=utf-8
  /repayments:
    get:
      description: 'Get List Repayments from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - allowReserved: true
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_18'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRepaymentsListResponse'
          description: Successful Response
        "401": {}
      summary: Get List Repayments
      tags:
      - Get List Repayments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Repayment via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createRepayment'
        description: Create a Repayment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRepaymentResponse'
          description: Successful Response
        default: {}
      summary: Create a Repayment
      tags:
      - Create a Repayment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /repayments/{repaymentId}:
    get:
      description: 'Get an Repayment from API '
      operationId: execute
      parameters:
      - description: ID of the repayment to get
        in: path
        name: repaymentId
        required: true
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRepaymentResponse'
          description: Successful Response
      summary: Get Repayment by Id
      tags:
      - Get Repayment
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments:
    get:
      description: 'Get List Check Payments from API '
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_19'
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitListCheckPaymentsResponse'
          description: Successful Response
      summary: Get List Check Payments
      tags:
      - Get List Check Payments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create Check Payment via API '
      operationId: execute
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createCheckPayment'
        description: Create Check Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Create Check Payment
      tags:
      - Create Check Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-payments/{checkPaymentId}:
    get:
      description: 'Get a Check Payment from API '
      operationId: execute
      parameters:
      - description: ID of the check payment to get
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Get Check Payment by Id
      tags:
      - Get Check Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/approve:
    post:
      description: 'Approve a Check Payment via API '
      operationId: execute
      parameters:
      - description: ID of the check payment to approve
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ApproveCheckPaymentRequest'
        description: Approve Check Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Approve Check Payment by Id
      tags:
      - Approve Check Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/cancel:
    post:
      description: 'Cancel a Check Payment via API '
      operationId: execute
      parameters:
      - description: ID of the check payment to cancel
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Cancel Check Payment by Id
      tags:
      - Cancel Check Payment
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/return:
    post:
      description: 'Return a Check Payment via API '
      operationId: execute
      parameters:
      - description: ID of the check payment to return
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReturnCheckPaymentRequest'
        description: Return Check Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Return Check Payment by Id
      tags:
      - Return Check Payment
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/front:
    get:
      description: 'Get front image via API '
      operationId: execute
      parameters:
      - description: ID of the check payment
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get front image
      tags:
      - Get a front image
      x-accepts: image/png
  /check-payments/{checkPaymentId}/back:
    get:
      description: 'Get back image via API '
      operationId: execute
      parameters:
      - description: ID of the check payment
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get back image
      tags:
      - Get a back image
      x-accepts: image/png
  /stop-payments:
    get:
      operationId: execute
      parameters:
      - in: query
        name: page
        schema:
          $ref: '#/components/schemas/listPageParametersObject'
      - in: query
        name: filter
        schema:
          $ref: '#/components/schemas/execute_filter_parameter_20'
      - in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentListResponse'
          description: OK
      summary: Get a list of stop payments
      x-accepts: application/json
    post:
      operationId: execute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStopPayment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
      summary: Create Stop Payment
      x-content-type: application/json
      x-accepts: application/json
  /stop-payments/{stop_payment_id}:
    delete:
      operationId: execute
      parameters:
      - description: ID of the stop payment
        in: path
        name: stop_payment_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Stop payment successfully canceled
        "404":
          description: Stop payment not found
      summary: Cancel a stop payment
      x-accepts: application/json
    get:
      operationId: execute
      parameters:
      - description: ID of the stop payment
        in: path
        name: stop_payment_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
        "404":
          description: Stop payment not found
      summary: Get details of a specific stop payment
      x-accepts: application/json
  /stop-payments/{stop_payment_id}/disable:
    post:
      operationId: execute
      parameters:
      - description: ID of the stop payment
        in: path
        name: stop_payment_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
        "404":
          description: Stop payment not found
      summary: Disable a stop payment
      x-accepts: application/json
components:
  responses:
    unitError: {}
  schemas:
    UnitApplicationResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/application'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: UnitApplicationResponseWithIncluded
      type: object
    update_application:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/update_application_data'
      required:
      - data
      title: Patch Application
      type: object
    patchBusinessApplication:
      additionalProperties: false
      properties:
        type:
          default: businessApplication
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessApplication_attributes'
      required:
      - attributes
      - type
      title: Patch Business Application
      type: object
    patchBusinessApplicationOfficer:
      additionalProperties: false
      properties:
        type:
          default: businessApplication
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessApplicationOfficer_attributes'
      required:
      - attributes
      - type
      title: Patch Business Application
      type: object
    patchBusinessApplicationBeneficialOwner:
      additionalProperties: false
      properties:
        type:
          default: beneficialOwner
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessApplicationBeneficialOwner_attributes'
      required:
      - attributes
      - type
      title: Patch Business Application
      type: object
    patchSoleProprietorApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/patchSoleProprietorApplication_attributes'
      required:
      - attributes
      - type
      title: Patch Individual Application
      type: object
    patchIndividualApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/patchIndividualApplication_attributes'
      required:
      - attributes
      - type
      title: Patch Individual Application
      type: object
    patchTrustApplication:
      additionalProperties: false
      properties:
        type:
          default: trustApplication
          type: string
        attributes:
          $ref: '#/components/schemas/patchTrustApplication_attributes'
      required:
      - attributes
      - type
      title: Patch Trust Application
      type: object
    application:
      discriminator:
        mapping:
          individualApplication: '#/components/schemas/IndividualApplication'
          businessApplication: '#/components/schemas/BusinessApplication'
          trustApplication: '#/components/schemas/TrustApplication'
        propertyName: type
      example:
        id: id
        type: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      title: Application
      type: object
    IndividualApplication:
      allOf:
      - $ref: '#/components/schemas/application'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualApplication_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/applicationRelationships'
        required:
        - attributes
        - id
        - type
        type: object
      title: IndividualApplication
      type: object
    powerOfAttorneyAgent:
      additionalProperties: false
      properties:
        status:
          type: string
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          type: object
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        idTheftScore:
          type: integer
      required:
      - fullName
      - status
      title: PowerOfAttorneyAgent
      type: object
    applicationRelationships:
      additionalProperties: false
      properties:
        org:
          $ref: '#/components/schemas/orgRelationship'
        customer:
          $ref: '#/components/schemas/Relationship'
        documents:
          $ref: '#/components/schemas/documentsRelationship'
        applicationForm:
          $ref: '#/components/schemas/Relationship'
        trustees:
          $ref: '#/components/schemas/applicationRelationships_trustees'
        beneficiaries:
          $ref: '#/components/schemas/applicationRelationships_beneficiaries'
        beneficialOwners:
          $ref: '#/components/schemas/applicationRelationships_beneficialOwners'
      title: applicationRelationships
      type: object
    BusinessApplication:
      allOf:
      - $ref: '#/components/schemas/application'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessApplication_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/applicationRelationships'
        required:
        - attributes
        - id
        - type
        type: object
      title: BusinessApplication
      type: object
    officer:
      properties:
        status:
          type: string
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          type: object
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        title:
          enum:
          - President
          - CEO
          - COO
          - CFO
          - BenefitsAdministrationOfficer
          - CIO
          - VP
          - AVP
          - Treasurer
          - Secretary
          - Controller
          - Manager
          - Partner
          - Member
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        idTheftScore:
          type: integer
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      title: Officer
      type: object
    beneficialOwner:
      properties:
        status:
          type: string
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          type: object
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        percentage:
          maximum: 100
          minimum: 0
          type: integer
        evaluationFlags:
          items:
            type: string
          type: array
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        idTheftScore:
          type: integer
        evaluationCodes:
          items:
            type: string
          type: array
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      title: Beneficial Owner
      type: object
    TrustApplication:
      allOf:
      - $ref: '#/components/schemas/application'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/TrustApplication_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/applicationRelationships'
        required:
        - attributes
        - id
        - type
        type: object
      title: TrustApplication
      type: object
    document:
      additionalProperties: false
      properties:
        type:
          default: document
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/document_attributes'
      required:
      - attributes
      - id
      - type
      title: Application Document Document
      type: object
    listPageParametersObject:
      properties:
        limit:
          default: 100
          maximum: 1000
          type: integer
        offset:
          default: 0
          type: integer
      type: object
    paginationMeta:
      example:
        pagination:
          total: 1
          offset: 6
          limit: 0
      properties:
        pagination:
          $ref: '#/components/schemas/paginationMeta_pagination'
      type: object
    UnitError:
      title: UnitError
      type: object
    createApplication:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createApplication_data'
      required:
      - data
      type: object
    CreateIndividualApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateIndividualApplication_attributes'
      required:
      - attributes
      - type
      title: Create Individual Application
      type: object
    createPowerOfAttorneyAgent:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        jwtSubject:
          nullable: true
          type: string
        evaluationParams:
          $ref: '#/components/schemas/evaluationParams'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      title: CreatePowerOfAttorneyAgent
      type: object
    evaluationParams:
      additionalProperties: false
      properties:
        useSelfieVerification:
          enum:
          - Never
          - ReplaceIdentification
          - Always
          type: string
        requireIdVerification:
          default: false
          type: boolean
      title: EvaluationParams
      type: object
    CreateSoleProprietorApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSoleProprietorApplication_attributes'
      required:
      - attributes
      - type
      title: Create Sole Proprietor Application
      type: object
    CreateBusinessApplication:
      additionalProperties: false
      properties:
        type:
          default: businessApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessApplication_attributes'
      required:
      - attributes
      - type
      title: Create Business Application
      type: object
    createOfficer:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        title:
          enum:
          - President
          - CEO
          - COO
          - CFO
          - BenefitsAdministrationOfficer
          - CIO
          - VP
          - AVP
          - Treasurer
          - Secretary
          - Controller
          - Manager
          - Partner
          - Member
          type: string
        evaluationParams:
          $ref: '#/components/schemas/evaluationParams'
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - occupation
      - phone
      title: CreateOfficer
      type: object
    createBeneficialOwner:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        percentage:
          maximum: 100
          minimum: 0
          type: integer
        evaluationParams:
          $ref: '#/components/schemas/evaluationParams'
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      title: CreateBeneficialOwner
      type: object
    CreateTrustApplication:
      additionalProperties: false
      properties:
        type:
          default: trustApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateTrustApplication_attributes'
      required:
      - attributes
      - type
      title: Create Trust Application
      type: object
    application_form:
      properties:
        type:
          default: applicationForm
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/application_form_attributes'
        relationships:
          $ref: '#/components/schemas/applicationFormRelationships'
      required:
      - attributes
      - id
      - type
      title: Application Form
      type: object
    ApplicationFormPrefill:
      additionalProperties: false
      properties:
        applicationType:
          enum:
          - Individual
          - Business
          - SoleProprietorship
          type: string
        fullName:
          $ref: '#/components/schemas/fullName'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        dateOfBirth:
          format: date
          type: string
        email:
          format: email
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        stateOfIncorporation:
          maxLength: 2
          minLength: 2
          type: string
        entityType:
          $ref: '#/components/schemas/entityType'
        contact:
          $ref: '#/components/schemas/contact'
        officer:
          $ref: '#/components/schemas/createOfficer'
        beneficialOwners:
          items:
            $ref: '#/components/schemas/createBeneficialOwner'
          type: array
        website:
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        dba:
          maxLength: 255
          minLength: 1
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        jwtSubject:
          nullable: true
          type: string
        industry:
          $ref: '#/components/schemas/industry'
      title: Application Form Prefilled
      type: object
    ApplicationFormSettingsOverride:
      additionalProperties: false
      properties:
        redirectUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        privacyPolicyUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        electronicDisclosuresUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        depositTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        clientTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        cardholderTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        cashAdvancedTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        debitCardDisclosureUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        additionalDisclosures:
          items:
            $ref: '#/components/schemas/applicationFormAdditionalDisclosures_inner'
          type: array
      type: object
    applicationFormRelationships:
      additionalProperties: false
      properties:
        application:
          $ref: '#/components/schemas/applicationFormRelationships_application'
      title: applicationFormRelationships
      type: object
    createApplicationForm:
      properties:
        data:
          $ref: '#/components/schemas/createApplicationForm_data'
      type: object
    requireIdVerification:
      additionalProperties: false
      properties:
        individual:
          default: false
          type: boolean
        officer:
          default: false
          type: boolean
        beneficialOwners:
          default: false
          type: boolean
      type: object
    UnitDocumentResponse:
      properties:
        data:
          $ref: '#/components/schemas/document'
      title: UnitDocumentResponse
      type: object
    UnitAccountResponse:
      properties:
        data:
          $ref: '#/components/schemas/account'
      title: UnitAccountResponse
      type: object
    account:
      discriminator:
        mapping:
          depositAccount: '#/components/schemas/DepositAccount'
          creditAccount: '#/components/schemas/CreditAccount'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      title: Account Document
      type: object
    DepositAccount:
      allOf:
      - $ref: '#/components/schemas/account'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DepositAccount_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/depositAccountRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Deposit Account
      type: object
    CreditAccount:
      allOf:
      - $ref: '#/components/schemas/account'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CreditAccount_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/creditAccountRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Credit Account
      type: object
    customer:
      discriminator:
        mapping:
          individualCustomer: '#/components/schemas/IndividualCustomer'
          businessCustomer: '#/components/schemas/BusinessCustomer'
          trustCustomer: '#/components/schemas/TrustCustomer'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      title: Customer
      type: object
    IndividualCustomer:
      allOf:
      - $ref: '#/components/schemas/customer'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualCustomer_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/customerRelationships'
        type: object
      title: IndividualCustomer
      type: object
    customerRelationships:
      additionalProperties: false
      properties:
        org:
          $ref: '#/components/schemas/orgRelationship'
        application:
          $ref: '#/components/schemas/Relationship'
      title: customerRelationships
      type: object
    BusinessCustomer:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/customer'
      - properties:
          attributes:
            $ref: '#/components/schemas/BusinessCustomer_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/customerRelationships'
        type: object
      title: BusinessCustomer
      type: object
    TrustCustomer:
      allOf:
      - $ref: '#/components/schemas/customer'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/TrustCustomer_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/customerRelationships'
        type: object
      title: TrustCustomer
      type: object
    createAccount:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createAccount_data'
      required:
      - data
      type: object
    CreateCreditAccount:
      properties:
        type:
          default: creditAccount
          enum:
          - creditAccount
          - depositAccount
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCreditAccount_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCreditAccount_relationships'
      title: Create Credit Account
      type: object
    CreateDepositAccount:
      additionalProperties: false
      properties:
        type:
          default: depositAccount
          enum:
          - depositAccount
          type: string
        attributes:
          $ref: '#/components/schemas/CreateDepositAccount_attributes'
        relationships:
          $ref: '#/components/schemas/CreateDepositAccount_relationships'
      title: Create Deposit Account
      type: object
    UnitAccountResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/account'
        included:
          items:
            $ref: '#/components/schemas/customer'
          type: array
      title: UnitAccountResponseWithIncluded
      type: object
    patch_account:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/patch_account_data'
      required:
      - data
      title: Update Account
      type: object
    updateDepositAccount:
      additionalProperties: false
      properties:
        type:
          default: depositAccount
          type: string
        attributes:
          $ref: '#/components/schemas/updateDepositAccount_attributes'
      required:
      - attributes
      - type
      title: Update Deposit Account
      type: object
    updateCreditAccount:
      additionalProperties: false
      properties:
        type:
          default: creditAccount
          type: string
        attributes:
          $ref: '#/components/schemas/updateCreditAccount_attributes'
      required:
      - attributes
      - type
      title: Update Credit Account
      type: object
    limits:
      properties:
        type:
          type: string
        id:
          type: string
        attributes:
          $ref: '#/components/schemas/limits_attributes'
      type: object
    freezeAccountRequest:
      properties:
        type:
          enum:
          - creditAccountFreeze
          - accountFreeze
          type: string
        attributes:
          $ref: '#/components/schemas/freezeAccountRequest_attributes'
      type: object
    closeAccountRequest:
      properties:
        type:
          enum:
          - creditAccountClose
          - depositAccountClose
          type: string
        attributes:
          $ref: '#/components/schemas/closeAccountRequest_attributes'
      title: CloseAccountRequest
      type: object
    account_end_of_day:
      additionalProperties: false
      properties:
        type:
          enum:
          - accountEndOfDay
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/account_end_of_day_attributes'
        relationships:
          $ref: '#/components/schemas/relationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Account End Of Day Resource
      type: object
    relationships:
      additionalProperties: false
      properties:
        customer:
          $ref: '#/components/schemas/relationships_customer'
        account:
          $ref: '#/components/schemas/relationships_account'
      required:
      - account
      type: object
    UnitCustomerResponse:
      properties:
        data:
          $ref: '#/components/schemas/customer'
      title: UnitCustomerResponse
      type: object
    update_customer:
      properties:
        data:
          $ref: '#/components/schemas/update_customer_data'
      title: Patch Customer
      type: object
    updateIndividualCustomer:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/updateIndividualCustomer_attributes'
      title: UpdateIndividualCustomer
      type: object
    updateBusinessCustomer:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/updateBusinessCustomer_attributes'
      title: UpdateBusinessCustomer
      type: object
    updateTrustCustomer:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/updateTrustCustomer_attributes'
      title: UpdateTrustCustomer
      type: object
    UnitPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/payment'
      title: UnitPaymentResponse
      type: object
    payment:
      discriminator:
        mapping:
          achPayment: '#/components/schemas/AchPayment'
          bookPayment: '#/components/schemas/BookPayment'
          wirePayment: '#/components/schemas/WirePayment'
          billPayment: '#/components/schemas/BillPayment'
        propertyName: type
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Payment Resource
      type: object
    AchPayment:
      allOf:
      - $ref: '#/components/schemas/payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AchPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/paymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: ACH Payment
      type: object
    counterparty:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{1,17}$"
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - accountNumber
      - accountType
      - name
      - routingNumber
      title: Counterparty
      type: object
    paymentRelationships:
      additionalProperties: true
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
        customer:
          $ref: '#/components/schemas/Relationship'
        customers:
          $ref: '#/components/schemas/paymentRelationships_customers'
        counterparty:
          $ref: '#/components/schemas/Relationship'
        counterpartyAccount:
          $ref: '#/components/schemas/Relationship'
        transaction:
          $ref: '#/components/schemas/Relationship'
        recurringPayment:
          $ref: '#/components/schemas/Relationship'
      type: object
    BookPayment:
      allOf:
      - $ref: '#/components/schemas/payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BookPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/paymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: Book Payment
      type: object
    WirePayment:
      allOf:
      - $ref: '#/components/schemas/payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/WirePayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/paymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: Wire Payment
      type: object
    BillPayment:
      allOf:
      - $ref: '#/components/schemas/payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BillPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/paymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: Bill Payment
      type: object
    IncludedResource:
      items:
        $ref: '#/components/schemas/IncludedResource_inner'
      type: array
    createPayment:
      properties:
        data:
          $ref: '#/components/schemas/createPayment_data'
      type: object
    CreateAchPayment:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPayment_relationships'
      required:
      - attributes
      - relationships
      title: Create ACH Payment to inline Counterparty
      type: object
    accountRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/accountRelationship_data'
      required:
      - data
      type: object
    CreateAchPaymentCounterparty:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchPaymentCounterparty_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPaymentCounterparty_relationships'
      required:
      - attributes
      - relationships
      title: Create ACH Payment to linked Counterparty
      type: object
    counterpartyRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/counterpartyRelationship_data'
      required:
      - data
      type: object
    CreateAchPaymentPlaid:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchPaymentPlaid_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPayment_relationships'
      required:
      - attributes
      - relationships
      title: Create ACH Payment with Plaid token
      type: object
    CreateBookPayment:
      additionalProperties: false
      properties:
        type:
          default: bookPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBookPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateBookPayment_relationships'
      required:
      - attributes
      - relationships
      title: Create Book Payment
      type: object
    counterpartyAccountRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/counterpartyAccountRelationship_data'
      required:
      - data
      type: object
    CreateWirePayment:
      additionalProperties: false
      properties:
        type:
          default: wirePayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateWirePayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPayment_relationships'
      required:
      - attributes
      - relationships
      title: Create Wire Payment
      type: object
    CreateBillPayment:
      additionalProperties: false
      properties:
        type:
          default: billPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBillPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPayment_relationships'
      required:
      - attributes
      - relationships
      title: Create Bill Payment
      type: object
    CreatePushToCardPayment:
      additionalProperties: false
      properties:
        type:
          default: pushToCardPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreatePushToCardPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPayment_relationships'
      required:
      - attributes
      - relationships
      title: Create Push To Card Payment
      type: object
    update_payment:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/update_payment_data'
      required:
      - data
      title: Patch Payment
      type: object
    patchAchPayment:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/patchTrustApplication_attributes'
      required:
      - attributes
      - type
      title: Patch ACH Payment
      type: object
    patchBookPayment:
      additionalProperties: false
      properties:
        type:
          default: bookPayment
          type: string
        attributes:
          $ref: '#/components/schemas/patchTrustApplication_attributes'
      required:
      - attributes
      - type
      title: Patch Book Payment
      type: object
    received_payment:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/received_payment_attributes'
        relationships:
          $ref: '#/components/schemas/receivedPaymentRelationships'
      title: Received Payment Resource
      type: object
    receivedPaymentRelationships:
      properties:
        account:
          $ref: '#/components/schemas/relationships_account'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
        receivePaymentTransaction:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction'
        paymentAdvanceTransaction:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction'
        repayPaymentAdvanceTransaction:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction'
      required:
      - account
      - customer
      type: object
    UnitReceivedPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/received_payment'
      title: UnitReceivedPaymentResponse
      type: object
    update_received_payment:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/update_received_payment_data'
      required:
      - data
      title: Patch Received Payment
      type: object
    patchAchReceivedPayment:
      additionalProperties: false
      properties:
        type:
          default: achReceivedPayment
          type: string
        attributes:
          $ref: '#/components/schemas/patchTrustApplication_attributes'
      required:
      - attributes
      - type
      title: Patch ACH Received Payment
      type: object
    counterparty_1:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/counterparty_1_attributes'
        relationships:
          $ref: '#/components/schemas/counterpartyRelationships'
      title: Counterparty Document
      type: object
    counterpartyRelationships:
      additionalProperties: false
      properties:
        customer:
          $ref: '#/components/schemas/relationships_customer'
      required:
      - customer
      title: counterpartyRelationships
      type: object
    createCounterparty:
      properties:
        data:
          $ref: '#/components/schemas/createCounterparty_data'
      type: object
    CreateAchCounterparty:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchCounterparty_attributes'
        relationships:
          $ref: '#/components/schemas/createCounterpartyRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Ach Counterparty
      type: object
    createCounterpartyRelationships:
      additionalProperties: false
      properties:
        customer:
          $ref: '#/components/schemas/Relationship'
      required:
      - customer
      type: object
    CreatePlaidCounterparty:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/CreatePlaidCounterparty_attributes'
        relationships:
          $ref: '#/components/schemas/createCounterpartyRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Plaid Counterparty
      type: object
    update_counterparty:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/update_counterparty_data'
      required:
      - data
      title: Patch Counterparty
      type: object
    patchCounterparty:
      additionalProperties: false
      properties:
        type:
          default: counterparty
          type: string
        attributes:
          $ref: '#/components/schemas/patchCounterparty_attributes'
      required:
      - attributes
      - type
      title: Patch Counterparty
      type: object
    counterparty_balance:
      additionalProperties: false
      properties:
        type:
          default: counterpartyBalance
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/counterparty_balance_attributes'
        relationships:
          $ref: '#/components/schemas/counterpartyBalanceRelationships'
      required:
      - id
      - relationships
      - type
      title: Counterparty Balance
      type: object
    counterpartyBalanceRelationships:
      additionalProperties: false
      properties:
        counterparty:
          $ref: '#/components/schemas/counterpartyBalanceRelationships_counterparty'
        customer:
          $ref: '#/components/schemas/relationships_customer'
      required:
      - counterparty
      - customer
      title: counterpartyBalanceRelationships
      type: object
    UnitRecurringPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/recurring_payment'
      title: UnitRecurringPaymentResponse
      type: object
    recurring_payment:
      discriminator:
        mapping:
          recurringCreditAchPayment: '#/components/schemas/RecurringCreditAchPayment'
          recurringDebitAchPayment: '#/components/schemas/RecurringDebitAchPayment'
          recurringCreditBookPayment: '#/components/schemas/RecurringCreditBookPayment'
        propertyName: type
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Recurring Payment Resource
      type: object
    RecurringCreditAchPayment:
      allOf:
      - $ref: '#/components/schemas/recurring_payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringCreditAchPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/recurringAchPaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Credit ACH Payment
      type: object
    schedule:
      additionalProperties: false
      properties:
        startTime:
          format: date
          type: string
        endTime:
          format: date
          type: string
        interval:
          enum:
          - Monthly
          type: string
        dayOfMonth:
          maximum: 28
          minimum: -5
          type: integer
        nextScheduledAction:
          format: date
          type: string
        totalNumberOfPayments:
          minimum: 1
          type: integer
      required:
      - interval
      - nextScheduledAction
      title: Schedule
      type: object
    recurringAchPaymentRelationships:
      properties:
        account:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_account'
        counterparty:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_counterparty'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
        org:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_org'
      type: object
    RecurringDebitAchPayment:
      allOf:
      - $ref: '#/components/schemas/recurring_payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringDebitAchPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/recurringAchPaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Debit ACH Payment
      type: object
    RecurringCreditBookPayment:
      allOf:
      - $ref: '#/components/schemas/recurring_payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringCreditBookPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/recurringBookPaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Credit Book Payment
      type: object
    recurringBookPaymentRelationships:
      properties:
        account:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_account'
        counterpartyAccount:
          $ref: '#/components/schemas/recurringBookPaymentRelationships_counterpartyAccount'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
        org:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_org'
      type: object
    createRecurringPayment:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createRecurringPayment_data'
      required:
      - data
      type: object
    createRecurringCreditAchPayment:
      additionalProperties: false
      properties:
        type:
          default: recurringCreditAchPayment
          type: string
        attributes:
          $ref: '#/components/schemas/createRecurringCreditAchPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPaymentCounterparty_relationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Credit ACH Payment
      type: object
    schedule_1:
      oneOf:
      - $ref: '#/components/schemas/monthlySchedule'
      title: schedule
    monthlySchedule:
      additionalProperties: false
      properties:
        startTime:
          format: date
          type: string
        endTime:
          format: date
          type: string
        dayOfMonth:
          maximum: 28
          minimum: -5
          type: integer
        dayOfWeek:
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          type: string
        interval:
          enum:
          - Monthly
          - Weekly
          type: string
        totalNumberOfPayments:
          minimum: 1
          type: integer
      required:
      - interval
      title: Create Monthly Schedule
      type: object
    createRecurringDebitAchPayment:
      additionalProperties: false
      properties:
        type:
          default: recurringDebitAchPayment
          type: string
        attributes:
          $ref: '#/components/schemas/createRecurringDebitAchPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPaymentCounterparty_relationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Debit ACH Payment
      type: object
    createRecurringCreditBookPayment:
      additionalProperties: false
      properties:
        type:
          default: recurringCreditBookPayment
          type: string
        attributes:
          $ref: '#/components/schemas/createRecurringCreditBookPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateBookPayment_relationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Credit Book Payment
      type: object
    card:
      discriminator:
        mapping:
          businessDebitCard: '#/components/schemas/BusinessDebitCard'
          individualDebitCard: '#/components/schemas/IndividualDebitCard'
          businessVirtualDebitCard: '#/components/schemas/BusinessVirtualDebitCard'
          individualVirtualDebitCard: '#/components/schemas/IndividualVirtualDebitCard'
          businessCreditCard: '#/components/schemas/BusinessCreditCard'
          businessVirtualCreditCard: '#/components/schemas/BusinessVirtualCreditCard'
        propertyName: type
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Card Document
      type: object
    BusinessDebitCard:
      allOf:
      - $ref: '#/components/schemas/card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/cardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Debit Card
      type: object
    physicalCardStatus:
      enum:
      - Active
      - Inactive
      - Stolen
      - Lost
      - Frozen
      - ClosedByCustomer
      - Unknown
      - SuspectedFraud
      - ActiveForOnlineUse
      type: string
    cardRelationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/cardRelationships_account'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
      required:
      - account
      title: cardRelationships
      type: object
    IndividualDebitCard:
      allOf:
      - $ref: '#/components/schemas/card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/cardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Individual Debit Card
      type: object
    BusinessVirtualDebitCard:
      allOf:
      - $ref: '#/components/schemas/card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessVirtualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/cardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Virtual Debit Card
      type: object
    virtualCardStatus:
      enum:
      - Active
      - Inactive
      - Stolen
      - Lost
      - Frozen
      - ClosedByCustomer
      - Unknown
      - SuspectedFraud
      type: string
    IndividualVirtualDebitCard:
      allOf:
      - $ref: '#/components/schemas/card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualVirtualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/cardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Individual Virtual Debit Card
      type: object
    BusinessCreditCard:
      allOf:
      - $ref: '#/components/schemas/card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/cardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Credit Card
      type: object
    BusinessVirtualCreditCard:
      allOf:
      - $ref: '#/components/schemas/card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessVirtualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/cardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Virtual Credit Card
      type: object
    createCard:
      properties:
        data:
          $ref: '#/components/schemas/createCard_data'
      type: object
    CreateIndividualDebitCard:
      additionalProperties: false
      properties:
        type:
          default: individualDebitCard
          enum:
          - individualDebitCard
          - businessDebitCard
          - businessCreditCard
          - individualVirtualDebitCard
          - businessVirtualDebitCard
          - businessVirtualCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateIndividualDebitCard_attributes'
        relationships:
          $ref: '#/components/schemas/createCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Individual Debit Card
      type: object
    BIN:
      additionalProperties: false
      properties:
        bin:
          pattern: "^\\d{9}$"
          type: string
        institutionId:
          pattern: "^\\d{9}$"
          type: string
      required:
      - bin
      - institutionId
      type: object
    createCardRelationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
        customer:
          $ref: '#/components/schemas/Relationship'
        defaultFundingAccount:
          $ref: '#/components/schemas/Relationship'
      required:
      - account
      title: createCardRelationships
      type: object
    CreateBusinessDebitCard:
      additionalProperties: false
      properties:
        type:
          default: businessDebitCard
          enum:
          - businessDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessDebitCard_attributes'
        relationships:
          $ref: '#/components/schemas/createCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Debit Card
      type: object
    CreateBusinessCreditCard:
      additionalProperties: false
      properties:
        type:
          default: businessCreditCard
          enum:
          - businessCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessDebitCard_attributes'
        relationships:
          $ref: '#/components/schemas/createCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Credit Card
      type: object
    CreateIndividualVirtualDebitCard:
      additionalProperties: false
      properties:
        type:
          default: individualVirtualDebitCard
          enum:
          - individualVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateIndividualVirtualDebitCard_attributes'
        relationships:
          $ref: '#/components/schemas/createCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Individual Virtual Debit Card
      type: object
    CreateBusinessVirtualDebitCard:
      additionalProperties: false
      properties:
        type:
          default: businessVirtualDebitCard
          enum:
          - businessVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessVirtualDebitCard_attributes'
        relationships:
          $ref: '#/components/schemas/createCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Virtual Debit Card
      type: object
    CreateBusinessVirtualCreditCard:
      additionalProperties: false
      properties:
        type:
          default: businessVirtualCreditCard
          enum:
          - businessVirtualCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessVirtualDebitCard_attributes'
        relationships:
          $ref: '#/components/schemas/createCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Virtual Credit Card
      type: object
    update_card:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/update_card_data'
      required:
      - data
      title: Patch Card
      type: object
    patchIndividualDebitCard:
      additionalProperties: false
      properties:
        type:
          enum:
          - individualDebitCard
          - individualVirtualDebitCard
          - businessDebitCard
          - businessVirtualDebitCard
          - businessCreditCard
          - businessVirtualCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/patchIndividualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Patch Individual Debit Card
      type: object
    patchIndividualVirtualDebitCard:
      additionalProperties: false
      properties:
        type:
          enum:
          - individualVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/patchIndividualVirtualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Patch Individual Virtual Debit Card
      type: object
    patchBusinessDebitCard:
      additionalProperties: false
      properties:
        type:
          enum:
          - businessDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessDebitCard_attributes'
      required:
      - attributes
      - type
      title: Patch Business Debit Card
      type: object
    patchBusinessVirtualDebitCard:
      additionalProperties: false
      properties:
        type:
          enum:
          - businessVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessVirtualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Patch Business Virtual Debit Card
      type: object
    patchBusinessCreditCard:
      additionalProperties: false
      properties:
        type:
          enum:
          - businessCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessDebitCard_attributes'
      required:
      - attributes
      - type
      title: Patch Business Credit Card
      type: object
    patchBusinessVirtualCreditCard:
      additionalProperties: false
      properties:
        type:
          enum:
          - businessVirtualCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/patchBusinessVirtualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Patch Business Virtual Credit Card
      type: object
    pinStatus:
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/pinStatus_attributes'
      title: PinStatusDTO
      type: object
    limits_1:
      discriminator:
        mapping:
          limits: '#/components/schemas/DepositLimits'
          creditLimits: '#/components/schemas/CreditLimits'
        propertyName: type
      properties:
        type:
          type: string
      title: Account Limits Resource
      type: object
    DepositLimits:
      allOf:
      - $ref: '#/components/schemas/limits_1'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DepositLimits_allOf_attributes'
        required:
        - attributes
        type: object
      title: Deposit Account Limits
      type: object
    CreditLimits:
      allOf:
      - $ref: '#/components/schemas/limits_1'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CreditLimits_allOf_attributes'
        required:
        - attributes
        type: object
      title: Credit Account Limits
      type: object
    authorization:
      additionalProperties: false
      properties:
        type:
          default: authorization
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/authorization_attributes'
        relationships:
          title: authorizationRelationships
          type: object
      required:
      - id
      - relationships
      - type
      title: Authorization Document
      type: object
    authorizationRelationships:
      title: authorizationRelationships
      type: object
    authorization_request:
      discriminator:
        mapping:
          purchaseAuthorizationRequest: '#/components/schemas/PurchaseAuthorizationRequest'
          cardTransactionAuthorizationRequest: '#/components/schemas/CardTransactionAuthorizationRequest'
          atmAuthorizationRequest: '#/components/schemas/AtmAuthorizationRequest'
        propertyName: type
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: AuthorizationRequest Document
      type: object
    PurchaseAuthorizationRequest:
      allOf:
      - $ref: '#/components/schemas/authorization_request'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/PurchaseAuthorizationRequest_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/authorizationRequestRelationships'
        required:
        - relationships
        type: object
      title: PurchaseAuthorizationRequest Resource
      type: object
    authorizationRequestRelationships:
      additionalProperties: false
      properties:
        customer:
          $ref: '#/components/schemas/relationships_customer'
        account:
          $ref: '#/components/schemas/relationships_account'
        fundingAccount:
          $ref: '#/components/schemas/relationships_account'
        card:
          $ref: '#/components/schemas/authorizationRequestRelationships_card'
      required:
      - account
      - card
      - customer
      title: authorizationRequestRelationships
      type: object
    CardTransactionAuthorizationRequest:
      allOf:
      - $ref: '#/components/schemas/authorization_request'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CardTransactionAuthorizationRequest_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/authorizationRequestRelationships'
        required:
        - relationships
        type: object
      title: CardTransactionAuthorizationRequest Resource
      type: object
    AtmAuthorizationRequest:
      allOf:
      - $ref: '#/components/schemas/authorization_request'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AtmAuthorizationRequest_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/authorizationRequestRelationships'
        required:
        - relationships
        type: object
      title: AtmAuthorizationRequest Resource
      type: object
    approveAuthorizationRequest:
      additionalProperties: false
      properties:
        type:
          default: approveAuthorizationRequest
          type: string
        attributes:
          $ref: '#/components/schemas/approveAuthorizationRequest_attributes'
      required:
      - attributes
      - type
      title: Approve Authorization Request
      type: object
    declineAuthorizationRequest:
      additionalProperties: false
      properties:
        type:
          default: declineAuthorizationRequest
          type: string
        attributes:
          $ref: '#/components/schemas/declineAuthorizationRequest_attributes'
      required:
      - attributes
      - type
      title: Decline Authorization Request
      type: object
    statement:
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/statement_attributes'
        relationships:
          $ref: '#/components/schemas/statementRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Statement
      type: object
    statementRelationships:
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
        customer:
          $ref: '#/components/schemas/Relationship'
        customers:
          $ref: '#/components/schemas/customersRelationship'
      type: object
    reward:
      additionalProperties: false
      properties:
        type:
          default: reward
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/reward_attributes'
        relationships:
          $ref: '#/components/schemas/rewardRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Reward
      type: object
    rewardRelationships:
      additionalProperties: false
      properties:
        receivingAccount:
          $ref: '#/components/schemas/Relationship'
        fundingAccount:
          $ref: '#/components/schemas/Relationship'
        customer:
          $ref: '#/components/schemas/Relationship'
        rewardedTransaction:
          $ref: '#/components/schemas/Relationship'
        transaction:
          $ref: '#/components/schemas/transactionRelationship'
        card:
          $ref: '#/components/schemas/cardRelationship'
      required:
      - customer
      - fundingAccount
      - receivingAccount
      type: object
    createReward:
      properties:
        data:
          $ref: '#/components/schemas/createReward_data'
      type: object
    createRewardRelationships:
      additionalProperties: false
      properties:
        fundingAccount:
          $ref: '#/components/schemas/Relationship'
        receivingAccount:
          $ref: '#/components/schemas/Relationship'
        rewardedTransaction:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction'
      required:
      - receivingAccount
      type: object
    event:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          properties: {}
          type: object
        relationships:
          properties: {}
          title: eventRelationships
          type: object
      required:
      - id
      - type
      title: Event Resource
      type: object
    UnitEventResponse:
      properties:
        data:
          $ref: '#/components/schemas/event'
      title: UnitEventResponse
      type: object
    institution:
      additionalProperties: false
      properties:
        type:
          default: institution
          type: string
        attributes:
          $ref: '#/components/schemas/institution_attributes'
      required:
      - attributes
      - type
      title: Institution Resource
      type: object
    createFee:
      type: object
    fee:
      properties:
        type:
          default: fee
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/fee_attributes'
        relationships:
          $ref: '#/components/schemas/feeRelationships'
      title: Fee
      type: object
    feeRelationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
      required:
      - account
      title: feeRelationships
      type: object
    check_deposit:
      additionalProperties: false
      properties:
        type:
          enum:
          - checkDeposit
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/check_deposit_attributes'
        relationships:
          $ref: '#/components/schemas/checkDepositRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Check Deposit
      type: object
    statusEvent:
      properties:
        updatedAt:
          type: string
        updatedBy:
          pattern: "^[1-9]\\d*$"
          type: string
        status:
          $ref: '#/components/schemas/statusEvent_status'
      required:
      - status
      type: object
    checkDepositStatus:
      enum:
      - AwaitingImages
      - AwaitingFrontImage
      - AwaitingBackImage
      - AwaitingCustomerConfirmation
      - Pending
      - PendingReview
      - Rejected
      - Clearing
      - Sent
      - Canceled
      - Returned
      type: string
    checkDepositRelationships:
      additionalProperties: false
      properties:
        org:
          $ref: '#/components/schemas/orgRelationship'
        account:
          $ref: '#/components/schemas/checkDepositRelationships_account'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
        transaction:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction'
      required:
      - account
      title: checkDepositRelationships
      type: object
    createCheckDeposit:
      properties:
        data:
          $ref: '#/components/schemas/createCheckDeposit_data'
      type: object
    createCheckDepositRelationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
      required:
      - account
      type: object
    update_check_deposit:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/patchCheckDeposit'
      required:
      - data
      title: Patch Check Deposit
      type: object
    patchCheckDeposit:
      additionalProperties: false
      properties:
        type:
          default: checkDeposit
          type: string
        attributes:
          $ref: '#/components/schemas/patchCheckDeposit_attributes'
      required:
      - attributes
      - type
      title: Patch Check Deposit
      type: object
    api_token:
      properties:
        type:
          default: apiToken
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/api_token_attributes'
      title: apiToken
      type: object
    createApiToken:
      properties:
        data:
          $ref: '#/components/schemas/createApiToken_data'
      title: Create API Token
      type: object
    createCustomerToken:
      properties:
        data:
          $ref: '#/components/schemas/createCustomerToken_data'
      type: object
    customer_token:
      additionalProperties: false
      properties:
        type:
          default: customerToken
          type: string
        attributes:
          $ref: '#/components/schemas/customer_token_attributes'
      required:
      - attributes
      - type
      title: CustomerToken
      type: object
    createCustomerTokenVerification:
      properties:
        data:
          $ref: '#/components/schemas/createCustomerTokenVerification_data'
      type: object
    customer_token_verification:
      additionalProperties: false
      properties:
        type:
          default: customerTokenVerification
          type: string
        attributes:
          $ref: '#/components/schemas/customer_token_verification_attributes'
      required:
      - attributes
      - type
      title: CustomerTokenVerification
      type: object
    webhook:
      additionalProperties: false
      properties:
        type:
          default: webhook
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/webhook_attributes'
      required:
      - attributes
      - id
      - type
      title: Webhook
      type: object
    updateUnitRequest:
      properties:
        data:
          $ref: '#/components/schemas/updateUnitRequest_data'
      type: object
    atm_location:
      additionalProperties: false
      properties:
        type:
          default: atmLocation
          type: string
        attributes:
          $ref: '#/components/schemas/atm_location_attributes'
      required:
      - attributes
      - type
      title: AtmLocation
      type: object
    transaction:
      discriminator:
        mapping:
          originatedAchTransaction: '#/components/schemas/OriginatedAchTransaction'
          receivedAchTransaction: '#/components/schemas/ReceivedAchTransaction'
          returnedAchTransaction: '#/components/schemas/ReturnedAchTransaction'
          returnedReceivedAchTransaction: '#/components/schemas/ReturnedReceivedAchTransaction'
          dishonoredAchTransaction: '#/components/schemas/DishonoredAchTransaction'
          purchaseTransaction: '#/components/schemas/PurchaseTransaction'
          bookTransaction: '#/components/schemas/BookTransaction'
          atmTransaction: '#/components/schemas/AtmTransaction'
          feeTransaction: '#/components/schemas/FeeTransaction'
          reversalTransaction: '#/components/schemas/ReversalTransaction'
          cardTransaction: '#/components/schemas/CardTransaction'
          releaseTransaction: '#/components/schemas/ReleaseTransaction'
          wireTransaction: '#/components/schemas/WireTransaction'
          interchangeTransaction: '#/components/schemas/InterchangeTransaction'
          interestShareTransaction: '#/components/schemas/InterestShareTransaction'
          interestTransaction: '#/components/schemas/InterestTransaction'
          adjustmentTransaction: '#/components/schemas/AdjustmentTransaction'
          disputeSettlementTransaction: '#/components/schemas/DisputeSettlementTransaction'
          disputeTransaction: '#/components/schemas/DisputeTransaction'
          checkDepositTransaction: '#/components/schemas/CheckDepositTransaction'
          returnedCheckDepositTransaction: '#/components/schemas/ReturnedCheckDepositTransaction'
          billPayTransaction: '#/components/schemas/BillPayTransaction'
          settlementTransaction: '#/components/schemas/SettlementTransaction'
          sponsoredInterestTransaction: '#/components/schemas/SponsoredInterestTransaction'
          paymentAdvanceTransaction: '#/components/schemas/PaymentAdvanceTransaction'
          repaidPaymentAdvanceTransaction: '#/components/schemas/RepaidPaymentAdvanceTransaction'
          chargebackTransaction: '#/components/schemas/ChargebackTransaction'
          rewardTransaction: '#/components/schemas/RewardTransaction'
          negativeBalanceCoverageTransaction: '#/components/schemas/NegativeBalanceCoverageTransaction'
          accountLowBalanceClosureTransaction: '#/components/schemas/AccountLowBalanceClosureTransaction'
          bankRepaymentTransaction: '#/components/schemas/BankRepaymentTransaction'
          cashDepositTransaction: '#/components/schemas/CashDepositTransaction'
          customerRepaymentTransaction: '#/components/schemas/CustomerRepaymentTransaction'
          customerRepaymentReturnedTransaction: '#/components/schemas/CustomerRepaymentReturnedTransaction'
          checkPaymentTransaction: '#/components/schemas/CheckPaymentTransaction'
          returnedCheckPaymentTransaction: '#/components/schemas/ReturnedCheckPaymentTransaction'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      title: Transaction Resource
      type: object
    OriginatedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/OriginatedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Originated ACH
      type: object
    transactionRelationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/accountRelationship_2'
        receivingAccount:
          $ref: '#/components/schemas/receivingAccountRelationship'
        customer:
          $ref: '#/components/schemas/customerRelationship'
        customers:
          $ref: '#/components/schemas/customersRelationship'
        counterpartyAccount:
          $ref: '#/components/schemas/counterpartyAccountRelationship_1'
        counterpartyCustomer:
          $ref: '#/components/schemas/counterpartyCustomerRelationship'
        relatedTransaction:
          $ref: '#/components/schemas/relatedTransactionRelationship'
        disputedTransaction:
          $ref: '#/components/schemas/relatedTransaction'
        authorization:
          $ref: '#/components/schemas/authorizationRelationship'
        returned:
          $ref: '#/components/schemas/returnedRelationship'
        payment:
          $ref: '#/components/schemas/paymentRelationship'
        checkPayment:
          $ref: '#/components/schemas/checkPaymentRelationship'
        repayment:
          $ref: '#/components/schemas/repaymentRelationship'
        recurringPayment:
          $ref: '#/components/schemas/recurringPaymentRelationship'
        org:
          $ref: '#/components/schemas/orgRelationship'
        card:
          $ref: '#/components/schemas/cardRelationship'
        incomingAch:
          $ref: '#/components/schemas/incomingAchRelationship'
        checkDeposit:
          $ref: '#/components/schemas/checkDepositRelationship'
        authorizationRequest:
          $ref: '#/components/schemas/authorizationRequestRelationship'
        paymentAdvanceTransaction:
          $ref: '#/components/schemas/relatedTransaction'
        receivedPayment:
          $ref: '#/components/schemas/receivedPaymentRelationship'
        chargeback:
          $ref: '#/components/schemas/chargebackRelationship'
        reward:
          $ref: '#/components/schemas/rewardRelationship'
      required:
      - account
      title: transactionRelationships
      type: object
    relatedTransaction:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction_data'
      required:
      - data
      title: relatedTransactionRelationship
      type: object
    ReceivedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReceivedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Received ACH
      type: object
    ReturnedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Returned ACH
      type: object
    ReturnedReceivedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedReceivedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Returned Received ACH
      type: object
    DishonoredAchTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DishonoredAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Dishonored Return ACH
      type: object
    PurchaseTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/PurchaseTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Purchase
      type: object
    BookTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BookTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Book
      type: object
    AtmTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AtmTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: ATM
      type: object
    FeeTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Fee
      type: object
    ReversalTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReversalTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Reversal
      type: object
    CardTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CardTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: cardTransaction
      type: object
    ReleaseTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReleaseTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: releaseTransaction
      type: object
    WireTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/WireTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: wireTransaction
      type: object
    InterchangeTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: interchangeShareTransaction
      type: object
    InterestShareTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: interestShareTransaction
      type: object
    InterestTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: interestTransaction
      type: object
    AdjustmentTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AdjustmentTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: adjustmentTransaction
      type: object
    DisputeSettlementTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: disputeSettlementTransaction
      type: object
    DisputeTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DisputeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: disputeTransaction
      type: object
    CheckDepositTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: checkDepositTransaction
      type: object
    ReturnedCheckDepositTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedCheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: returnedCheckDepositTransaction
      type: object
    BillPayTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: billPayTransaction
      type: object
    SettlementTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: settlementTransaction
      type: object
    SponsoredInterestTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: sponsoredInterestTransaction
      type: object
    PaymentAdvanceTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: paymentAdvanceTransaction
      type: object
    RepaidPaymentAdvanceTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: repaidPaymentAdvanceTransaction
      type: object
    ChargebackTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ChargebackTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Chargeback
      type: object
    RewardTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RewardTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Reward
      type: object
    NegativeBalanceCoverageTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: NegativeBalanceCoverage
      type: object
    AccountLowBalanceClosureTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AccountLowBalanceClosureTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: AccountLowBalanceClosure
      type: object
    BankRepaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BankRepaymentTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: bankRepaymentTransaction
      type: object
    CashDepositTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CashDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: cashDepositTransaction
      type: object
    CustomerRepaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: customerRepaymentTransaction
      type: object
    CustomerRepaymentReturnedTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: customerRepaymentReturnedTransaction
      type: object
    CheckPaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: checkPaymentTransaction
      type: object
    ReturnedCheckPaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedCheckPaymentTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/transactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: returnedCheckPaymentTransaction
      type: object
    update_transaction:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/update_transaction_data'
      required:
      - data
      title: Patch Transaction
      type: object
    patchTransactionTags:
      additionalProperties: false
      properties:
        type:
          default: transaction
          type: string
        attributes:
          $ref: '#/components/schemas/patchTransactionTags_attributes'
      required:
      - attributes
      - type
      title: Patch Transaction
      type: object
    patchBookTransaction:
      additionalProperties: false
      properties:
        type:
          default: bookTransaction
          type: string
        attributes:
          $ref: '#/components/schemas/patchBookTransaction_attributes'
        relationships:
          $ref: '#/components/schemas/patchBookTransaction_relationships'
      required:
      - attributes
      - type
      title: Patch Book Transaction
      type: object
    accountRelationship_1:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/accountRelationship_data'
      required:
      - data
      type: object
    patchChargebackTransaction:
      additionalProperties: false
      properties:
        type:
          default: chargebackTransaction
          type: string
        attributes:
          $ref: '#/components/schemas/patchBookTransaction_attributes'
        relationships:
          $ref: '#/components/schemas/patchBookTransaction_relationships'
      required:
      - attributes
      - type
      title: Patch Chargeback Transaction
      type: object
    dispute:
      additionalProperties: false
      properties:
        type:
          default: dispute
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/dispute_attributes'
        relationships:
          $ref: '#/components/schemas/disputeRelationships'
      required:
      - id
      - relationships
      - type
      title: Dispute Document
      type: object
    disputeRelationships:
      additionalProperties: false
      properties:
        customer:
          $ref: '#/components/schemas/Relationship'
        account:
          $ref: '#/components/schemas/Relationship'
        transaction:
          $ref: '#/components/schemas/Relationship'
      required:
      - account
      - customer
      - transaction
      title: disputeRelationships
      type: object
    repayment:
      discriminator:
        mapping:
          achRepayment: '#/components/schemas/AchRepayment'
          bookRepayment: '#/components/schemas/BookRepayment'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      title: Repayment Resource
      type: object
    AchRepayment:
      allOf:
      - $ref: '#/components/schemas/repayment'
      - properties:
          attributes:
            $ref: '#/components/schemas/AchRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AchRepayment_allOf_relationships'
        type: object
      title: ACH Repayment
      type: object
    BookRepayment:
      allOf:
      - $ref: '#/components/schemas/repayment'
      - properties:
          attributes:
            $ref: '#/components/schemas/BookRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/BookRepayment_allOf_relationships'
        type: object
      title: Book Repayment
      type: object
    createRepayment:
      properties:
        data:
          $ref: '#/components/schemas/createRepayment_data'
      type: object
    CreateAchRepayment:
      additionalProperties: false
      properties:
        type:
          default: achRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchRepayment_relationships'
      required:
      - attributes
      - relationships
      - type
      title: Create ACH Repayment
      type: object
    CreateBookRepayment:
      additionalProperties: false
      properties:
        type:
          default: bookRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBookRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateBookRepayment_relationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Book Repayment
      type: object
    UnitRepaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/repayment'
      title: UnitRepaymentResponse
      type: object
    CheckPayment:
      additionalProperties: false
      properties:
        type:
          default: checkPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/CheckPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CheckPayment_relationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Check Payment Resource
      type: object
    returnReason:
      enum:
      - InsufficientFunds
      - AccountClosed
      - AlteredCheck
      - ForgedSignature
      - PostdatedCheck
      - StopPaymentOrder
      - UnauthorizedDebit
      - WrongAmount
      - DuplicatePayment
      - MissingSignature
      - IrregularEndorsement
      - Other
      type: string
    UnitCheckPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/CheckPayment'
      title: UnitCheckPaymentResponse
      type: object
    createCheckPayment:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CheckPayment'
      required:
      - data
      type: object
    StopPaymentListResponse:
      example:
        data:
        - relationships:
            checkPayments:
              data:
              - id: id
                type: checkPayment
              - id: id
                type: checkPayment
            customers:
              data:
              - id: id
                type: customer
              - id: id
                type: customer
            account:
              data:
                id: id
                type: depositAccount
            customer:
              data:
                id: id
                type: businessCustomer
          attributes:
            createdAt: 2000-01-23T04:56:07.000+00:00
            amount: 1
            checkNumber: checkNumber
            updatedAt: 2000-01-23T04:56:07.000+00:00
            status: Active
            tags: "{}"
          id: id
          type: stopPayment
        - relationships:
            checkPayments:
              data:
              - id: id
                type: checkPayment
              - id: id
                type: checkPayment
            customers:
              data:
              - id: id
                type: customer
              - id: id
                type: customer
            account:
              data:
                id: id
                type: depositAccount
            customer:
              data:
                id: id
                type: businessCustomer
          attributes:
            createdAt: 2000-01-23T04:56:07.000+00:00
            amount: 1
            checkNumber: checkNumber
            updatedAt: 2000-01-23T04:56:07.000+00:00
            status: Active
            tags: "{}"
          id: id
          type: stopPayment
      properties:
        data:
          items:
            $ref: '#/components/schemas/stop_payment'
          type: array
      type: object
    StopPaymentResponse:
      example:
        data:
          relationships:
            checkPayments:
              data:
              - id: id
                type: checkPayment
              - id: id
                type: checkPayment
            customers:
              data:
              - id: id
                type: customer
              - id: id
                type: customer
            account:
              data:
                id: id
                type: depositAccount
            customer:
              data:
                id: id
                type: businessCustomer
          attributes:
            createdAt: 2000-01-23T04:56:07.000+00:00
            amount: 1
            checkNumber: checkNumber
            updatedAt: 2000-01-23T04:56:07.000+00:00
            status: Active
            tags: "{}"
          id: id
          type: stopPayment
      properties:
        data:
          $ref: '#/components/schemas/stop_payment'
      type: object
    createStopPayment:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/stopPayment'
      required:
      - data
      type: object
    stopPayment:
      additionalProperties: false
      properties:
        type:
          default: stopPayment
          type: string
        attributes:
          $ref: '#/components/schemas/stopPayment_attributes'
        relationships:
          $ref: '#/components/schemas/relationships_1'
      required:
      - attributes
      - relationships
      - type
      title: Stop Payment
      type: object
    relationships_1:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/relationships_1_account'
      required:
      - account
      type: object
    tagsPatch:
      additionalProperties: false
      maxProperties: 15
      type: object
    businessAnnualRevenue:
      enum:
      - UpTo250k
      - Between250kAnd500k
      - Between500kAnd1m
      - Between1mAnd5m
      - Over5m
      type: string
    businessNumberOfEmployees:
      enum:
      - UpTo10
      - Between10And50
      - Between50And100
      - Between100And500
      - Over500
      type: string
    cashFlow:
      enum:
      - Unpredictable
      - Predictable
      type: string
    year:
      pattern: "^\\d{4}$"
      type: string
    country:
      pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
      type: string
    businessVertical:
      enum:
      - AdultEntertainmentDatingOrEscortServices
      - AgricultureForestryFishingOrHunting
      - ArtsEntertainmentAndRecreation
      - BusinessSupportOrBuildingServices
      - Cannabis
      - Construction
      - DirectMarketingOrTelemarketing
      - EducationalServices
      - FinancialServicesCryptocurrency
      - FinancialServicesDebitCollectionOrConsolidation
      - FinancialServicesMoneyServicesBusinessOrCurrencyExchange
      - FinancialServicesOther
      - FinancialServicesPaydayLending
      - GamingOrGambling
      - HealthCareAndSocialAssistance
      - HospitalityAccommodationOrFoodServices
      - LegalAccountingConsultingOrComputerProgramming
      - Manufacturing
      - Mining
      - Nutraceuticals
      - PersonalCareServices
      - PublicAdministration
      - RealEstate
      - ReligiousCivicAndSocialOrganizations
      - RepairAndMaintenance
      - RetailTrade
      - TechnologyMediaOrTelecom
      - TransportationOrWarehousing
      - Utilities
      - WholesaleTrade
      type: string
    occupation:
      enum:
      - ArchitectOrEngineer
      - BusinessAnalystAccountantOrFinancialAdvisor
      - CommunityAndSocialServicesWorker
      - ConstructionMechanicOrMaintenanceWorker
      - Doctor
      - Educator
      - EntertainmentSportsArtsOrMedia
      - ExecutiveOrManager
      - FarmerFishermanForester
      - FoodServiceWorker
      - GigWorker
      - HospitalityOfficeOrAdministrativeSupportWorker
      - HouseholdManager
      - JanitorHousekeeperLandscaper
      - Lawyer
      - ManufacturingOrProductionWorker
      - MilitaryOrPublicSafety
      - NurseHealthcareTechnicianOrHealthcareSupport
      - PersonalCareOrServiceWorker
      - PilotDriverOperator
      - SalesRepresentativeBrokerAgent
      - ScientistOrTechnologist
      - Student
      type: string
    annualIncome:
      enum:
      - UpTo10k
      - Between10kAnd25k
      - Between25kAnd50k
      - Between50kAnd100k
      - Between100kAnd250k
      - Over250k
      type: string
    sourceOfIncome:
      enum:
      - EmploymentOrPayrollIncome
      - PartTimeOrContractorIncome
      - InheritancesAndGifts
      - PersonalInvestments
      - BusinessOwnershipInterests
      - GovernmentBenefits
      type: string
    soleProprietorshipAnnualRevenue:
      enum:
      - UpTo50k
      - Between50kAnd100k
      - Between100kAnd200k
      - Between200kAnd500k
      - Over500k
      type: string
    soleProprietorshipNumberOfEmployees:
      enum:
      - One
      - Between2And5
      - Between5And10
      - Over10
      type: string
    identifier:
      pattern: "^[1-9]\\d*$"
      type: string
    applicationStatus:
      enum:
      - AwaitingDocuments
      - PendingReview
      - Approved
      - Denied
      - Pending
      - Canceled
      type: string
    fullName:
      additionalProperties: false
      properties:
        first:
          maxLength: 255
          minLength: 1
          type: string
        last:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - first
      - last
      title: Full Name
      type: object
    email:
      format: email
      type: string
    phone:
      additionalProperties: false
      properties:
        countryCode:
          type: string
        number:
          type: string
      required:
      - countryCode
      - number
      title: Phone
      type: object
    tags:
      additionalProperties: false
      maxProperties: 15
      type: object
    jwtSubject:
      nullable: true
      type: string
    industry:
      enum:
      - Retail
      - Wholesale
      - Restaurants
      - Hospitals
      - Construction
      - Insurance
      - Unions
      - RealEstate
      - FreelanceProfessional
      - OtherProfessionalServices
      - OnlineRetailer
      - OtherEducationServices
      type: string
    orgRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/orgRelationship_data'
      required:
      - data
      type: object
    Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Relationship_data'
      required:
      - data
      type: object
    entityType:
      enum:
      - Corporation
      - LLC
      - Partnership
      - PubliclyTradedCorporation
      - PrivatelyHeldCorporation
      - NotForProfitOrganization
      type: string
    state:
      pattern: "^((A[LKSZR])|(C[AOT])|(D[EC])|(F[ML])|(G[AU])|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EHDAINSOT])|(N[EVHJMYCD])|(MP)|(O[HKR])|(P[WAR])|(RI)|(S[CD])|(T[NX])|(UT)|(V[TIA])|(W[AVIY]))$"
      type: string
    address:
      additionalProperties: false
      properties:
        street:
          maxLength: 255
          minLength: 1
          pattern: ^.*$
          type: string
        street2:
          nullable: true
          pattern: ^.*$
          type: string
        city:
          maxLength: 255
          minLength: 1
          pattern: ^.*$
          type: string
        state:
          type: string
        postalCode:
          pattern: "^[0-9]{5}(?:-[0-9]{4})?$"
          type: string
        country:
          default: US
          type: string
      required:
      - city
      - country
      - postalCode
      - state
      - street
      title: Address
      type: object
    contact:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        jwtSubject:
          nullable: true
          type: string
      title: Contact
      type: object
    revocability:
      enum:
      - Revocable
      - Irrevocable
      type: string
    sourceOfFunds:
      enum:
      - Inheritance
      - Salary
      - Savings
      - InvestmentReturns
      - Gifts
      type: string
    trustContact:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        jwtSubject:
          nullable: true
          type: string
      title: TrustContact
      type: object
    trustee:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      title: Trustee
      type: object
    grantor:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        matriculaConsular:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        status:
          type: string
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      title: Grantor
      type: object
    deviceFingerprint:
      additionalProperties: false
      properties:
        provider:
          enum:
          - iovation
          type: string
        value:
          type: string
      required:
      - provider
      - value
      type: object
    beneficiary:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        dateOfBirth:
          format: date
          type: string
      required:
      - dateOfBirth
      - fullName
      title: Beneficiary
      type: object
    url:
      pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
        b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
      type: string
    applicationFormAdditionalDisclosures:
      items:
        $ref: '#/components/schemas/applicationFormAdditionalDisclosures_inner'
      type: array
    customerLinkage:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/customerLinkage_data'
      required:
      - data
      type: object
    authorizedUser:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        jwtSubject:
          nullable: true
          type: string
      required:
      - email
      - fullName
      - phone
      title: Authorized User
      type: object
    customersRelationship:
      example:
        data:
        - id: id
          type: customer
        - id: id
          type: customer
      properties:
        data:
          items:
            $ref: '#/components/schemas/customersRelationship_data_inner'
          type: array
      title: Customers Relationship
      type: object
    responseContact:
      allOf:
      - $ref: '#/components/schemas/contact'
      required:
      - fullName
    wireCounterparty:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          maxLength: 17
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        address:
          $ref: '#/components/schemas/address'
      required:
      - accountNumber
      - address
      - name
      - routingNumber
      title: WireCounterparty
      type: object
    astra:
      additionalProperties: false
      properties:
        authToken:
          minLength: 1
          type: string
        debitFeePercent:
          type: number
        institutionId:
          minLength: 1
          type: string
        destinationCardId:
          minLength: 1
          type: string
        routingNumber:
          minLength: 1
          type: string
        accountNumber:
          minLength: 1
          type: string
        accountName:
          minLength: 1
          type: string
        referenceId:
          maxLength: 80
          minLength: 1
          type: string
      required:
      - accountNumber
      - debitFeePercent
      - destinationCardId
      - institutionId
      - referenceId
      - routingNumber
      title: AstraPushToCardConfiguration
      type: object
    plaidProcessorToken:
      maxLength: 60
      minLength: 40
      pattern: ^processor-.*$
      type: string
    cardLevelLimits:
      additionalProperties: false
      properties:
        dailyWithdrawal:
          type: integer
        dailyPurchase:
          type: integer
        monthlyWithdrawal:
          type: integer
        monthlyPurchase:
          type: integer
      type: object
    merchant:
      additionalProperties: false
      properties:
        name:
          type: string
        type:
          type: integer
        category:
          type: string
        location:
          type: string
        id:
          type: string
      required:
      - category
      - name
      - type
      title: Merchant
      type: object
    cardVerificationData:
      additionalProperties: false
      properties:
        verificationMethod:
          type: string
      required:
      - verificationMethod
      title: Card Verification Data
      type: object
    healthcareAmounts:
      additionalProperties: false
      properties:
        transitAmount:
          type: integer
        prescriptionRXAmount:
          type: integer
        visionOpticalAmount:
          type: integer
        clinicOtherQualifiedMedicalAmount:
          type: integer
        dentalAmount:
          type: integer
        totalHealthcareAmount:
          type: integer
      required:
      - clinicOtherQualifiedMedicalAmount
      - dentalAmount
      - prescriptionRXAmount
      - totalHealthcareAmount
      - transitAmount
      - visionOpticalAmount
      title: Healthcare Amounts
      type: object
    counterparty_2:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          maxLength: 17
          type: string
        name:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - accountNumber
      - name
      - routingNumber
      title: Counterparty
      type: object
    coordinates:
      additionalProperties: false
      properties:
        longitude:
          type: number
        latitude:
          type: number
      required:
      - latitude
      - longitude
      type: object
    description:
      maxLength: 1024
      type: string
    stop_payment:
      additionalProperties: false
      example:
        relationships:
          checkPayments:
            data:
            - id: id
              type: checkPayment
            - id: id
              type: checkPayment
          customers:
            data:
            - id: id
              type: customer
            - id: id
              type: customer
          account:
            data:
              id: id
              type: depositAccount
          customer:
            data:
              id: id
              type: businessCustomer
        attributes:
          createdAt: 2000-01-23T04:56:07.000+00:00
          amount: 1
          checkNumber: checkNumber
          updatedAt: 2000-01-23T04:56:07.000+00:00
          status: Active
          tags: "{}"
        id: id
        type: stopPayment
      properties:
        type:
          default: stopPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/stop_payment_attributes'
        relationships:
          $ref: '#/components/schemas/stop_payment_relationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Stop Payment
      type: object
    CancelApplicationRequest_data_attributes:
      properties:
        reason:
          type: string
      type: object
    CancelApplicationRequest_data:
      properties:
        type:
          enum:
          - cancelApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CancelApplicationRequest_data_attributes'
      type: object
    CancelApplicationRequest:
      properties:
        data:
          $ref: '#/components/schemas/CancelApplicationRequest_data'
      title: CancelApplicationRequest
      type: object
    UnitCancelApplicationResponse:
      properties:
        data:
          $ref: '#/components/schemas/application'
        included:
          items:
            $ref: '#/components/schemas/document'
          type: array
      title: UnitCancelApplicationResponse
      type: object
    execute_filter_parameter:
      properties:
        query:
          type: string
        status:
          items:
            enum:
            - AwaitingDocuments
            - PendingReview
            - Pending
            - Approved
            - Denied
            - Canceled
            type: string
          type: array
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitListApplicationsResponse:
      example:
        data:
        - id: id
          type: type
        - id: id
          type: type
        meta:
          pagination:
            total: 1
            offset: 6
            limit: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/application'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitListApplicationsResponse
      type: object
    UnitCreateApplicationResponse:
      properties:
        data:
          $ref: '#/components/schemas/application'
        included:
          items:
            $ref: '#/components/schemas/document'
          type: array
      title: UnitCreateApplicationResponse
      type: object
    execute_filter_parameter_1:
      properties:
        query:
          type: string
        status:
          items:
            enum:
            - Pending
            - Approved
            type: string
          type: array
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitApplicationFormsListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/application_form'
          type: array
      title: UnitApplicationFormsListResponse
      type: object
    UnitApplicationFormResponse:
      properties:
        data:
          $ref: '#/components/schemas/application_form'
      title: UnitApplicationFormResponse
      type: object
    UnitListDocumentsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/document'
          type: array
      title: UnitListDocumentsResponse
      type: object
    VerifyDocument:
      example:
        jobId: jobId
      properties:
        jobId:
          type: string
      title: VerifyDocument
      type: object
    UnitApplicationFormResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/application_form'
        included:
          $ref: '#/components/schemas/application'
      title: UnitApplicationFormResponseWithIncluded
      type: object
    execute_filter_parameter_2:
      properties:
        customerId:
          type: string
        status:
          items:
            enum:
            - Open
            - Frozen
            - Closed
            type: string
          type: array
        type:
          items:
            enum:
            - deposit
            - credit
            type: string
          type: array
        fromBalance:
          type: number
        toBalance:
          type: number
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitAccountsListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/account'
          type: array
        included:
          items:
            $ref: '#/components/schemas/customer'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitAccountsListResponse
      type: object
    UnitGetAccountLimitsResponse:
      properties:
        data:
          $ref: '#/components/schemas/limits'
      title: UnitGetAccountLimitsResponse
      type: object
    FreezeAccountRequest:
      properties:
        data:
          $ref: '#/components/schemas/freezeAccountRequest'
      title: FreezeAccountRequest
      type: object
    CloseAccountRequest:
      properties:
        data:
          $ref: '#/components/schemas/closeAccountRequest'
      title: CloseAccountRequest
      type: object
    UnitGetAccountEndOfDayListResponse:
      properties:
        data:
          $ref: '#/components/schemas/account_end_of_day'
      title: UnitGetAccountEndOfDayListResponse
      type: object
    execute_filter_parameter_3:
      properties:
        query:
          type: string
        status:
          items:
            enum:
            - Active
            - Archived
            type: string
          type: array
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitCustomersListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/customer'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitCustomersListResponse
      type: object
    ArchiveCustomerRequest_attributes:
      properties:
        reason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      type: object
    ArchiveCustomerRequest:
      properties:
        type:
          enum:
          - archiveCustomer
          type: string
        attributes:
          $ref: '#/components/schemas/ArchiveCustomerRequest_attributes'
      title: ArchiveCustomerRequest
      type: object
    execute_filter_parameter_4:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        counterpartyAccountId:
          type: string
        status:
          items:
            enum:
            - Rejected
            - Pending
            - Canceled
            - Pending Review
            - Clearing
            - Sent
            - Returned
            type: string
          type: array
        type:
          items:
            enum:
            - AchPayment
            - BookPayment
            - WirePayment
            type: string
          type: array
        direction:
          items:
            enum:
            - Debit
            - Credit
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        recurringPaymentId:
          type: integer
        feature:
          items:
            enum:
            - SameDay
            - RecurringPayment
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitPaymentsListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/payment'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitPaymentsListResponse
      type: object
    UnitPaymentResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/payment'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: UnitPaymentResponseWithIncluded
      type: object
    UnitReceivedPaymentListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/received_payment'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitReceivedPaymentListResponse
      type: object
    UnitReceivedPaymentResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/received_payment'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: UnitReceivedPaymentResponseWithIncluded
      type: object
    execute_filter_parameter_5:
      properties:
        customerId:
          type: string
        accountNumber:
          type: string
        routingNumber:
          type: string
        permissions:
          items:
            enum:
            - CreditOnly
            - DebitOnly
            - CreditAndDebit
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitCounterpartiesListResponse:
      properties:
        data:
          $ref: '#/components/schemas/counterparty_1'
      title: UnitCounterpartiesListResponse
      type: object
    UnitCounterpartyResponse:
      properties:
        data:
          $ref: '#/components/schemas/counterparty_1'
      title: UnitCounterpartyResponse
      type: object
    UnitCounterpartyResponse_1:
      properties:
        data:
          $ref: '#/components/schemas/counterparty_balance'
      title: UnitCounterpartyResponse
      type: object
    execute_filter_parameter_6:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            type: string
          type: array
        type:
          items:
            enum:
            - recurringCreditAchPayment
            - recurringDebitAchPayment
            - recurringCreditBookPayment
            type: string
          type: array
        fromStartTime:
          type: string
        toStartTime:
          type: string
        fromEndTime:
          type: string
        toEndTime:
          type: string
      type: object
    UnitRecurringPaymentListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/recurring_payment'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitRecurringPaymentListResponse
      type: object
    execute_filter_parameter_7:
      properties:
        status:
          items:
            enum:
            - Inactive
            - Active
            - Stolen
            - Lost
            - Frozen
            - ClosedByCustomer
            - SuspectedFraud
            type: string
          type: array
        accountId:
          type: string
        customerId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitCardResponseCardsList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/card'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource'
          type: array
      title: UnitCardResponseCardsList
      type: object
    UnitCardResponse:
      properties:
        data:
          $ref: '#/components/schemas/card'
      title: UnitCardResponse
      type: object
    UnitCardResponse_1:
      properties:
        data:
          $ref: '#/components/schemas/card'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource'
          type: array
      title: UnitCardResponse
      type: object
    UnitCardResponse_2:
      properties:
        data:
          $ref: '#/components/schemas/pinStatus'
      title: UnitCardResponse
      type: object
    UnitCardResponse_3:
      properties:
        data:
          $ref: '#/components/schemas/limits_1'
      title: UnitCardResponse
      type: object
    execute_filter_parameter_8:
      properties:
        accountId:
          type: string
        accountType:
          type: string
        customerId:
          type: string
        cardId:
          type: string
        includeNonAuthorized:
          type: boolean
        merchantCategoryCode:
          items:
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        status:
          items:
            enum:
            - Authorized
            - Completed
            - Canceled
            - Declined
            type: string
          type: array
      type: object
    UnitListAuthorizationsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/authorization'
          type: array
      title: UnitListAuthorizationsResponse
      type: object
    UnitAuthorizationResponse:
      properties:
        data:
          $ref: '#/components/schemas/authorization'
      title: UnitAuthorizationResponse
      type: object
    execute_filter_parameter_9:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        merchantCategoryCode:
          items:
            type: string
          type: array
        fromAmount:
          type: integer
        toAmount:
          type: integer
      type: object
    UnitListAuthorizationRequestsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/authorization_request'
          type: array
      title: UnitListAuthorizationRequestsResponse
      type: object
    UnitAuthorizationRequestsResponse:
      properties:
        data:
          $ref: '#/components/schemas/authorization_request'
      title: UnitAuthorizationRequestsResponse
      type: object
    ApproveAuthorizationRequest:
      properties:
        data:
          $ref: '#/components/schemas/approveAuthorizationRequest'
      title: ApproveAuthorizationRequest
      type: object
    UnitAuthorizationRequestResponse:
      properties:
        data:
          $ref: '#/components/schemas/authorization_request'
      title: UnitAuthorizationRequestResponse
      type: object
    DeclineAuthorizationRequest:
      properties:
        data:
          $ref: '#/components/schemas/declineAuthorizationRequest'
      title: DeclineAuthorizationRequest
      type: object
    execute_filter_parameter_10:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        period:
          type: string
      type: object
    UnitStatementsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/statement'
          type: array
      title: UnitStatementsResponse
      type: object
    execute_filter_parameter_11:
      properties:
        transactionId:
          type: string
        rewardedTransactionId:
          type: string
        receivingAccountId:
          type: string
        customerId:
          type: string
        cardId:
          type: string
        since:
          type: string
        until:
          type: string
        status:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    UnitRewardsListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/reward'
          type: array
      title: UnitRewardsListResponse
      type: object
    UnitRewardResponse:
      properties:
        data:
          $ref: '#/components/schemas/reward'
      title: UnitRewardResponse
      type: object
    execute_filter_parameter_12:
      properties:
        since:
          type: string
        until:
          type: string
        type:
          items:
            type: string
          type: array
      type: object
    UnitEventListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/event'
          type: array
      title: UnitEventListResponse
      type: object
    UnitEventResponse_1:
      properties:
        data:
          $ref: '#/components/schemas/event'
      title: UnitEventResponse
      type: object
    UnitInstitutionResponse:
      properties:
        data:
          $ref: '#/components/schemas/institution'
      title: UnitInstitutionResponse
      type: object
    UnitFeeResponse:
      properties:
        data:
          $ref: '#/components/schemas/fee'
      title: UnitFeeResponse
      type: object
    execute_filter_parameter_13:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        status:
          items:
            enum:
            - AwaitingImages
            - AwaitingFrontImage
            - AwaitingBackImage
            - Pending
            - PendingReview
            - Rejected
            - Clearing
            - Sent
            - Canceled
            - Returned
            - AwaitingCustomerConfirmation
            type: string
          type: array
      type: object
    UnitListCheckDepositsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/check_deposit'
          type: array
      title: UnitListCheckDepositsResponse
      type: object
    UnitCheckDepositResponse:
      properties:
        data:
          $ref: '#/components/schemas/check_deposit'
      title: UnitCheckDepositResponse
      type: object
    UnitCheckDepositResponse_1:
      properties:
        data:
          type: string
      title: UnitCheckDepositResponse
      type: object
    UnitOrgApiTokensListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/api_token'
          type: array
      title: UnitOrgApiTokensListResponse
      type: object
    UnitApiTokenResponse:
      properties:
        data:
          $ref: '#/components/schemas/api_token'
      title: UnitApiTokenResponse
      type: object
    UnitCustomerTokenResponse:
      properties:
        data:
          $ref: '#/components/schemas/customer_token'
      title: UnitCustomerTokenResponse
      type: object
    UnitCustomerTokenVerificationResponse:
      properties:
        data:
          $ref: '#/components/schemas/customer_token_verification'
      title: UnitCustomerTokenVerificationResponse
      type: object
    execute_filter_parameter_14:
      properties:
        since:
          type: string
        until:
          type: string
        fromId:
          type: integer
        toId:
          type: integer
      type: object
    UnitWebhooksListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/webhook'
          type: array
      title: UnitWebhooksListResponse
      type: object
    createWebhook_data_attributes:
      additionalProperties: false
      properties:
        label:
          type: string
        url:
          type: string
        token:
          type: string
        contentType:
          enum:
          - Json
          - JsonAPI
          type: string
        deliveryMode:
          type: string
        includeResources:
          type: boolean
        subscriptionType:
          enum:
          - All
          - OnlyAuthorizationRequest
          type: string
      required:
      - contentType
      - deliveryMode
      - label
      - token
      - url
      type: object
    createWebhook_data:
      properties:
        type:
          default: webhook
          type: string
        attributes:
          $ref: '#/components/schemas/createWebhook_data_attributes'
      type: object
    createWebhook:
      properties:
        data:
          $ref: '#/components/schemas/createWebhook_data'
      title: createWebhook
      type: object
    UnitWebhookResponse:
      properties:
        data:
          $ref: '#/components/schemas/webhook'
      title: UnitWebhookResponse
      type: object
    execute_filter_parameter_15:
      properties:
        coordinates:
          type: object
        searchRadius:
          type: integer
        postalCode:
          type: string
        address:
          type: object
      type: object
    UnitTransactionResponse:
      properties:
        data:
          $ref: '#/components/schemas/transaction'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: UnitTransactionResponse
      type: object
    UnitTransactionResponse_1:
      properties:
        data:
          $ref: '#/components/schemas/transaction'
      title: UnitTransactionResponse
      type: object
    execute_filter_parameter_16:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        query:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        since:
          type: string
        until:
          type: string
        cardId:
          type: string
        excludeFees:
          type: boolean
        type:
          items:
            type: string
          type: array
        direction:
          items:
            enum:
            - Debit
            - Credit
            type: string
          type: array
        fromAmount:
          type: integer
        toAmount:
          type: integer
        accountType:
          type: string
      type: object
    UnitTransactionsListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/transaction'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitTransactionsListResponse
      type: object
    execute_filter_parameter_17:
      properties:
        query:
          type: string
      type: object
    UnitDisputeResponse:
      properties:
        data:
          $ref: '#/components/schemas/dispute'
      title: UnitDisputeResponse
      type: object
    execute_filter_parameter_18:
      properties:
        accountId:
          type: string
        creditAccountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Pending
            - PendingReview
            - Returned
            - Sent
            - Rejected
            type: string
          type: array
        type:
          items:
            enum:
            - AchRepayment
            - BookRepayment
            type: string
          type: array
      type: object
    UnitRepaymentsListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/repayment'
          type: array
        meta:
          $ref: '#/components/schemas/paginationMeta'
      title: UnitRepaymentsListResponse
      type: object
    execute_filter_parameter_19:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - New
            - Pending
            - Canceled
            - Rejected
            - InDelivery
            - InProduction
            - Delivered
            - ReturnedToSender
            - Pending
            - Processed
            - PendingReview
            - MarkedForReturn
            - Returned
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        checkNumber:
          type: string
      type: object
    UnitListCheckPaymentsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CheckPayment'
          type: array
      title: UnitListCheckPaymentsResponse
      type: object
    ApproveCheckPaymentRequest_data:
      properties:
        type:
          default: additionalVerification
          type: string
      type: object
    ApproveCheckPaymentRequest:
      properties:
        data:
          $ref: '#/components/schemas/ApproveCheckPaymentRequest_data'
      title: ApproveCheckPaymentRequest
      type: object
    ReturnCheckPaymentRequest_data_attributes:
      properties:
        reason:
          $ref: '#/components/schemas/returnReason'
      type: object
    ReturnCheckPaymentRequest_data:
      properties:
        type:
          default: checkPaymentReturn
          type: string
        attributes:
          $ref: '#/components/schemas/ReturnCheckPaymentRequest_data_attributes'
      type: object
    ReturnCheckPaymentRequest:
      properties:
        data:
          $ref: '#/components/schemas/ReturnCheckPaymentRequest_data'
      title: ReturnCheckPaymentRequest
      type: object
    execute_filter_parameter_20:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Active
            - Disabled
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        checkNumber:
          type: string
      type: object
    update_application_data:
      oneOf:
      - $ref: '#/components/schemas/patchBusinessApplication'
      - $ref: '#/components/schemas/patchBusinessApplicationOfficer'
      - $ref: '#/components/schemas/patchBusinessApplicationBeneficialOwner'
      - $ref: '#/components/schemas/patchSoleProprietorApplication'
      - $ref: '#/components/schemas/patchIndividualApplication'
      - $ref: '#/components/schemas/patchTrustApplication'
    patchBusinessApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        annualRevenue:
          $ref: '#/components/schemas/businessAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/businessNumberOfEmployees'
        cashFlow:
          $ref: '#/components/schemas/cashFlow'
        yearOfIncorporation:
          pattern: "^\\d{4}$"
          type: string
        countriesOfOperation:
          items:
            $ref: '#/components/schemas/country'
          minItems: 1
          type: array
        stockSymbol:
          type: string
        website:
          type: string
        businessVertical:
          $ref: '#/components/schemas/businessVertical'
      type: object
    patchBusinessApplicationOfficer_attributes_officer:
      properties:
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      type: object
    patchBusinessApplicationOfficer_attributes:
      additionalProperties: false
      properties:
        officer:
          $ref: '#/components/schemas/patchBusinessApplicationOfficer_attributes_officer'
      type: object
    patchBusinessApplicationBeneficialOwner_attributes:
      additionalProperties: false
      properties:
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      type: object
    patchSoleProprietorApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        annualRevenue:
          $ref: '#/components/schemas/soleProprietorshipAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/soleProprietorshipNumberOfEmployees'
        businessVertical:
          $ref: '#/components/schemas/businessVertical'
        website:
          type: string
      type: object
    patchIndividualApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      type: object
    patchTrustApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      type: object
    IndividualApplication_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/applicationStatus'
        message:
          type: string
        evaluationOutcome:
          type: string
        evaluationId:
          type: string
        evaluationEntityId:
          type: string
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          type: object
        dateOfBirth:
          format: date
          type: string
        dba:
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        ip:
          type: string
        soleProprietorship:
          type: boolean
        decisionMethod:
          enum:
          - Manually
          - Automatically
          type: string
        decisionUserId:
          type: string
        decisionReason:
          type: string
        decisionDateTime:
          format: date-time
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        evaluationScores:
          type: object
        ipLocationDetails:
          type: object
        phoneLocationDetails:
          type: object
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        jwtSubject:
          nullable: true
          type: string
        archived:
          type: boolean
        powerOfAttorneyAgent:
          $ref: '#/components/schemas/powerOfAttorneyAgent'
        industry:
          $ref: '#/components/schemas/industry'
        idTheftScore:
          type: integer
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
        annualRevenue:
          $ref: '#/components/schemas/soleProprietorshipAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/soleProprietorshipNumberOfEmployees'
        businessVertical:
          $ref: '#/components/schemas/businessVertical'
        website:
          type: string
      required:
      - createdAt
      - fullName
      - status
      type: object
      example: null
    documentsRelationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: document
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    documentsRelationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/documentsRelationship_data_inner'
          type: array
      required:
      - data
      title: documentsRelationship
      type: object
    applicationRelationships_trustees_data_inner:
      additionalProperties: false
      properties:
        type:
          default: trustee
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    applicationRelationships_trustees:
      properties:
        data:
          items:
            $ref: '#/components/schemas/applicationRelationships_trustees_data_inner'
          type: array
      type: object
    applicationRelationships_beneficiaries_data_inner:
      additionalProperties: false
      properties:
        type:
          default: beneficiary
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    applicationRelationships_beneficiaries:
      properties:
        data:
          items:
            $ref: '#/components/schemas/applicationRelationships_beneficiaries_data_inner'
          type: array
      type: object
    applicationRelationships_beneficialOwners_data_inner:
      additionalProperties: false
      properties:
        type:
          default: beneficialOwner
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    applicationRelationships_beneficialOwners:
      properties:
        data:
          items:
            $ref: '#/components/schemas/applicationRelationships_beneficialOwners_data_inner'
          type: array
      type: object
    BusinessApplication_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/applicationStatus'
        message:
          type: string
        evaluationOutcome:
          type: string
        evaluationId:
          type: string
        evaluationEntityId:
          type: string
        name:
          type: string
        dba:
          nullable: true
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        entityType:
          $ref: '#/components/schemas/entityType'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          pattern: "^((A[LKSZR])|(C[AOT])|(D[EC])|(F[ML])|(G[AU])|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EHDAINSOT])|(N[EVHJMYCD])|(MP)|(O[HKR])|(P[WAR])|(RI)|(S[CD])|(T[NX])|(UT)|(V[TIA])|(W[AVIY]))$"
          type: string
        purpose:
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        contact:
          $ref: '#/components/schemas/contact'
        officer:
          $ref: '#/components/schemas/officer'
        ip:
          type: string
        website:
          type: string
        beneficialOwners:
          items:
            $ref: '#/components/schemas/beneficialOwner'
          type: array
        decisionMethod:
          enum:
          - Manually
          - Automatically
          type: string
        decisionUserId:
          type: string
        decisionReason:
          type: string
        decisionDateTime:
          format: date-time
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        ipLocationDetails:
          type: object
        phoneLocationDetails:
          type: object
        archived:
          type: boolean
        industry:
          $ref: '#/components/schemas/industry'
        annualRevenue:
          $ref: '#/components/schemas/businessAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/businessNumberOfEmployees'
        cashFlow:
          $ref: '#/components/schemas/cashFlow'
        yearOfIncorporation:
          pattern: "^\\d{4}$"
          type: string
        countriesOfOperation:
          items:
            $ref: '#/components/schemas/country'
          minItems: 1
          type: array
        stockSymbol:
          type: string
        businessVertical:
          $ref: '#/components/schemas/businessVertical'
      required:
      - beneficialOwners
      - contact
      - createdAt
      - entityType
      - name
      - officer
      - stateOfIncorporation
      - status
      type: object
      example: null
    TrustApplication_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/applicationStatus'
        message:
          type: string
        evaluationOutcome:
          type: string
        evaluationId:
          type: string
        evaluationEntityId:
          type: string
        name:
          type: string
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          pattern: "^((A[LKSZR])|(C[AOT])|(D[EC])|(F[ML])|(G[AU])|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EHDAINSOT])|(N[EVHJMYCD])|(MP)|(O[HKR])|(P[WAR])|(RI)|(S[CD])|(T[NX])|(UT)|(V[TIA])|(W[AVIY]))$"
          type: string
        revocability:
          $ref: '#/components/schemas/revocability'
        sourceOfFunds:
          $ref: '#/components/schemas/sourceOfFunds'
        taxId:
          type: string
        contact:
          $ref: '#/components/schemas/trustContact'
        trustees:
          items:
            $ref: '#/components/schemas/trustee'
          type: array
        grantor:
          $ref: '#/components/schemas/grantor'
        ip:
          type: string
        decisionMethod:
          enum:
          - Manually
          - Automatically
          type: string
        decisionUserId:
          type: string
        decisionReason:
          type: string
        decisionDateTime:
          format: date-time
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        ipLocationDetails:
          type: object
        phoneLocationDetails:
          type: object
        archived:
          type: boolean
      required:
      - contact
      - createdAt
      - name
      - stateOfIncorporation
      - status
      type: object
      example: null
    document_attributes:
      additionalProperties: false
      properties:
        documentType:
          type: string
        status:
          type: string
        description:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        matriculaConsular:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          type: string
        dateOfBirth:
          format: date
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        reasonCode:
          type: string
        reason:
          type: string
        evaluationId:
          type: string
        frontDocumentId:
          type: string
        backDocumentId:
          type: string
        frontDocumentStoreId:
          type: string
        backDocumentStoreId:
          type: string
      required:
      - status
      type: object
    paginationMeta_pagination:
      example:
        total: 1
        offset: 6
        limit: 0
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      type: object
    createApplication_data:
      oneOf:
      - $ref: '#/components/schemas/CreateIndividualApplication'
      - $ref: '#/components/schemas/CreateSoleProprietorApplication'
      - $ref: '#/components/schemas/CreateBusinessApplication'
      - $ref: '#/components/schemas/CreateTrustApplication'
    CreateIndividualApplication_attributes:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          nullable: true
          pattern: "^\\d{9}|\\d{4}"
          type: string
        passport:
          nullable: true
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        ip:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/deviceFingerprint'
          maxItems: 1
          type: array
        jwtSubject:
          nullable: true
          type: string
        powerOfAttorneyAgent:
          $ref: '#/components/schemas/createPowerOfAttorneyAgent'
        industry:
          $ref: '#/components/schemas/industry'
        evaluationParams:
          $ref: '#/components/schemas/evaluationParams'
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateSoleProprietorApplication_attributes:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          nullable: true
          pattern: "^\\d{9}|\\d{4}"
          type: string
        passport:
          nullable: true
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        dba:
          nullable: true
          type: string
        ein:
          nullable: true
          pattern: "^\\d{9}$"
          type: string
        ip:
          type: string
        soleProprietorship:
          default: false
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/deviceFingerprint'
          maxItems: 1
          type: array
        jwtSubject:
          nullable: true
          type: string
        powerOfAttorneyAgent:
          $ref: '#/components/schemas/createPowerOfAttorneyAgent'
        industry:
          $ref: '#/components/schemas/industry'
        evaluationParams:
          $ref: '#/components/schemas/evaluationParams'
        occupation:
          $ref: '#/components/schemas/occupation'
        annualIncome:
          $ref: '#/components/schemas/annualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/sourceOfIncome'
        annualRevenue:
          $ref: '#/components/schemas/soleProprietorshipAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/soleProprietorshipNumberOfEmployees'
        businessVertical:
          $ref: '#/components/schemas/businessVertical'
        website:
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateBusinessApplication_attributes:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        dba:
          maxLength: 255
          minLength: 1
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        entityType:
          $ref: '#/components/schemas/entityType'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          maxLength: 2
          minLength: 2
          type: string
        purpose:
          maxLength: 1024
          minLength: 1
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        contact:
          $ref: '#/components/schemas/contact'
        officer:
          $ref: '#/components/schemas/createOfficer'
        ip:
          type: string
        website:
          type: string
        beneficialOwners:
          items:
            $ref: '#/components/schemas/createBeneficialOwner'
          type: array
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/deviceFingerprint'
          maxItems: 1
          type: array
        industry:
          $ref: '#/components/schemas/industry'
        annualRevenue:
          $ref: '#/components/schemas/businessAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/businessNumberOfEmployees'
        cashFlow:
          $ref: '#/components/schemas/cashFlow'
        yearOfIncorporation:
          pattern: "^\\d{4}$"
          type: string
        countriesOfOperation:
          items:
            $ref: '#/components/schemas/country'
          minItems: 1
          type: array
        stockSymbol:
          maxLength: 5
          minLength: 1
          type: string
        businessVertical:
          $ref: '#/components/schemas/businessVertical'
      required:
      - address
      - beneficialOwners
      - contact
      - ein
      - entityType
      - name
      - officer
      - phone
      - stateOfIncorporation
      type: object
    CreateTrustApplication_attributes:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        stateOfIncorporation:
          maxLength: 2
          minLength: 2
          type: string
        revocability:
          enum:
          - Revocable
          - Irrevocable
          type: string
        sourceOfFunds:
          enum:
          - Inheritance
          - Salary
          - Savings
          - InvestmentReturns
          - Gifts
          type: string
        taxId:
          type: string
        grantor:
          $ref: '#/components/schemas/grantor'
        trustees:
          items:
            $ref: '#/components/schemas/trustee'
          type: array
        beneficiaries:
          items:
            $ref: '#/components/schemas/beneficiary'
          type: array
        contact:
          $ref: '#/components/schemas/trustContact'
        ip:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/deviceFingerprint'
          maxItems: 1
          type: array
      required:
      - beneficiaries
      - contact
      - grantor
      - name
      - revocability
      - sourceOfFunds
      - stateOfIncorporation
      - taxId
      - trustees
      type: object
    application_form_attributes:
      additionalProperties: false
      properties:
        email:
          format: email
          type: string
        url:
          type: string
        stage:
          enum:
          - ChooseBusinessOrIndividual
          - EnterIndividualInformation
          - IndividualPhoneVerification
          - IndividualApplicationCreated
          - EnterBusinessInformation
          - EnterBusinessAdditionalInformation
          - EnterOfficerInformation
          - BusinessPhoneVerification
          - EnterBeneficialOwnersInformation
          - BusinessApplicationCreated
          - EnterSoleProprietorshipInformation
          - EnterSoleProprietorshipBusinessInformation
          - SoleProprietorshipPhoneVerification
          - SoleProprietorshipApplicationCreated
          type: string
        applicantDetails:
          $ref: '#/components/schemas/ApplicationFormPrefill'
        settingsOverride:
          $ref: '#/components/schemas/ApplicationFormSettingsOverride'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        allowedApplicationTypes:
          items:
            enum:
            - Individual
            - Business
            - SoleProprietorship
            type: string
          type: array
      required:
      - url
      type: object
    applicationFormRelationships_application_data:
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - application
          type: string
      type: object
    applicationFormRelationships_application:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/applicationFormRelationships_application_data'
      type: object
    createApplicationForm_data_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        applicantDetails:
          $ref: '#/components/schemas/ApplicationFormPrefill'
        settingsOverride:
          $ref: '#/components/schemas/ApplicationFormSettingsOverride'
        requireIdVerification:
          $ref: '#/components/schemas/requireIdVerification'
        allowedApplicationTypes:
          items:
            enum:
            - Individual
            - Business
            - SoleProprietorship
            type: string
          type: array
        lang:
          enum:
          - en
          - es
          type: string
        hideApplicationProgressTracker:
          type: boolean
      type: object
    createApplicationFormRelationships:
      additionalProperties: false
      properties:
        application:
          $ref: '#/components/schemas/Relationship'
      title: createApplicationFormRelationships
      type: object
    createApplicationForm_data:
      additionalProperties: false
      properties:
        type:
          default: applicationForm
          type: string
        attributes:
          $ref: '#/components/schemas/createApplicationForm_data_attributes'
        relationships:
          $ref: '#/components/schemas/createApplicationFormRelationships'
      required:
      - type
      type: object
    DepositAccount_allOf_attributes_secondaryAccountNumber:
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{10,12}$"
          type: string
      required:
      - accountNumber
      - routingNumber
      type: object
      example: null
    DepositAccount_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        depositProduct:
          type: string
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{10,12}$"
          type: string
        secondaryAccountNumber:
          $ref: '#/components/schemas/DepositAccount_allOf_attributes_secondaryAccountNumber'
        currency:
          default: USD
          type: string
        balance:
          type: integer
        overdraftLimit:
          minimum: 0
          type: integer
        hold:
          type: integer
        available:
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        status:
          enum:
          - Open
          - Closed
          - Frozen
          type: string
        closeReason:
          enum:
          - ByCustomer
          - Fraud
          type: string
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          type: string
        closeReasonText:
          maxLength: 255
          type: string
        freezeReason:
          type: string
        maskedAccountNumber:
          pattern: "^\\*{6,8}\\d{4}$"
          type: string
        isOverdrawnWithinLimit:
          type: boolean
        dacaStatus:
          enum:
          - Activated
          - Entered
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - available
      - balance
      - createdAt
      - currency
      - depositProduct
      - hold
      - name
      - routingNumber
      - status
      - tags
      type: object
      example: null
    depositAccountRelationships:
      additionalProperties: true
      properties:
        customer:
          $ref: '#/components/schemas/customerLinkage'
      title: depositAccountRelationships
      type: object
    CreditAccount_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        creditTerms:
          type: string
        currency:
          default: USD
          type: string
        balance:
          type: integer
        hold:
          type: integer
        available:
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        status:
          enum:
          - Open
          - Closed
          - Frozen
          type: string
        closeReason:
          enum:
          - ByCustomer
          - Fraud
          - Overdue
          type: string
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          type: string
        closeReasonText:
          maxLength: 255
          type: string
        freezeReason:
          type: string
        creditLimit:
          minimum: 0
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
      - available
      - balance
      - createdAt
      - creditLimit
      - creditTerms
      - currency
      - hold
      - name
      - status
      - tags
      type: object
      example: null
    creditAccountRelationships:
      additionalProperties: true
      properties:
        customer:
          $ref: '#/components/schemas/customerLinkage'
      required:
      - customer
      title: creditAccountRelationships
      type: object
    IndividualCustomer_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/address'
        dateOfBirth:
          format: date
          type: string
        ein:
          type: string
        dba:
          type: string
        soleProprietorship:
          default: false
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        authorizedUsers:
          items:
            $ref: '#/components/schemas/authorizedUser'
          type: array
        jwtSubject:
          nullable: true
          type: string
        status:
          enum:
          - Active
          - Archived
          type: string
        archiveReason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      required:
      - createdAt
      - fullName
      - status
      type: object
      example: null
    BusinessCustomer_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        dba:
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        entityType:
          $ref: '#/components/schemas/entityType'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          type: string
        purpose:
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        contact:
          $ref: '#/components/schemas/contact'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        authorizedUsers:
          items:
            $ref: '#/components/schemas/authorizedUser'
          type: array
        status:
          enum:
          - Active
          - Archived
          type: string
        archiveReason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      required:
      - contact
      - entityType
      - name
      - stateOfIncorporation
      - status
      type: object
      example: null
    TrustCustomer_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        stateOfIncorporation:
          type: string
        contact:
          $ref: '#/components/schemas/trustContact'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        revocability:
          $ref: '#/components/schemas/revocability'
        sourceOfFunds:
          $ref: '#/components/schemas/sourceOfFunds'
        taxId:
          type: string
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        authorizedUsers:
          items:
            $ref: '#/components/schemas/authorizedUser'
          type: array
        status:
          enum:
          - Active
          - Archived
          type: string
        archiveReason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      required:
      - contact
      - name
      - stateOfIncorporation
      - status
      type: object
      example: null
    createAccount_data:
      oneOf:
      - $ref: '#/components/schemas/CreateCreditAccount'
      - $ref: '#/components/schemas/CreateDepositAccount'
    CreateCreditAccount_attributes:
      additionalProperties: false
      properties:
        creditTerms:
          type: string
        creditLimit:
          type: integer
        tags:
          nullable: true
          type: object
        idempotencyKey:
          nullable: true
          type: string
      required:
      - creditLimit
      - creditTerms
      type: object
    CreateCreditAccount_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/customerLinkage'
      type: object
    CreateDepositAccount_attributes:
      additionalProperties: false
      properties:
        depositProduct:
          type: string
        tags:
          nullable: true
          type: object
        idempotencyKey:
          nullable: true
          type: string
      required:
      - depositProduct
      type: object
    CreateDepositAccount_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/customerLinkage'
        customers:
          $ref: '#/components/schemas/customersRelationship'
      type: object
    patch_account_data:
      oneOf:
      - $ref: '#/components/schemas/updateDepositAccount'
      - $ref: '#/components/schemas/updateCreditAccount'
    updateDepositAccount_attributes:
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        depositProduct:
          type: string
      type: object
    updateCreditAccount_attributes:
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        creditLimit:
          type: integer
      type: object
    limits_attributes_card_limits:
      properties:
        dailyWithdrawal:
          type: number
        dailyDeposit:
          type: number
        dailyPurchase:
          type: number
        dailyCardTransaction:
          type: number
      type: object
    limits_attributes_card_totalsDaily:
      properties:
        withdrawal:
          type: number
        deposit:
          type: number
        purchase:
          type: number
        cardTransaction:
          type: number
      type: object
    limits_attributes_card:
      properties:
        limits:
          $ref: '#/components/schemas/limits_attributes_card_limits'
        totalsDaily:
          $ref: '#/components/schemas/limits_attributes_card_totalsDaily'
      type: object
    limits_attributes:
      properties:
        card:
          $ref: '#/components/schemas/limits_attributes_card'
      type: object
    freezeAccountRequest_attributes:
      properties:
        reason:
          enum:
          - Fraud
          - Other
          type: string
        reasonText:
          nullable: true
          type: string
      type: object
    closeAccountRequest_attributes:
      properties:
        reason:
          default: ByCustomer
          enum:
          - ByCustomer
          - Fraud
          type: string
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          nullable: true
          type: string
      type: object
    account_end_of_day_attributes:
      additionalProperties: false
      properties:
        date:
          format: date
          type: string
        balance:
          type: integer
        hold:
          type: integer
        available:
          type: integer
        overdraftLimit:
          type: integer
      required:
      - available
      - balance
      - date
      - hold
      type: object
    relationships_customer_data:
      additionalProperties: false
      properties:
        type:
          default: customer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    relationships_customer:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/relationships_customer_data'
      required:
      - data
      type: object
    relationships_account_data:
      additionalProperties: false
      properties:
        type:
          default: account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    relationships_account:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/relationships_account_data'
      required:
      - data
      type: object
    update_customer_data:
      oneOf:
      - $ref: '#/components/schemas/updateIndividualCustomer'
      - $ref: '#/components/schemas/updateBusinessCustomer'
      - $ref: '#/components/schemas/updateTrustCustomer'
    updateIndividualCustomer_attributes:
      additionalProperties: false
      properties:
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        dba:
          nullable: true
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        authorizedUsers:
          items:
            $ref: '#/components/schemas/authorizedUser'
          nullable: true
          type: array
        jwtSubject:
          nullable: true
          type: string
      type: object
    updateBusinessCustomer_attributes:
      additionalProperties: false
      properties:
        dba:
          nullable: true
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        address:
          $ref: '#/components/schemas/address'
        contact:
          $ref: '#/components/schemas/responseContact'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        authorizedUsers:
          items:
            $ref: '#/components/schemas/authorizedUser'
          nullable: true
          type: array
      type: object
    updateTrustCustomer_attributes:
      additionalProperties: false
      properties:
        contact:
          $ref: '#/components/schemas/trustContact'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        authorizedUsers:
          items:
            $ref: '#/components/schemas/authorizedUser'
          nullable: true
          type: array
      type: object
    AchPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        description:
          maxLength: 50
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        settlementDate:
          format: date
          type: string
        reason:
          type: string
        expectedCompletionDate:
          format: date
          type: string
        secCode:
          type: string
        traceNumber:
          type: string
        sameDay:
          type: boolean
        counterpartyVerificationMethod:
          type: string
        clearingDaysOverride:
          type: integer
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
      example: null
    paymentRelationships_customers_data_inner:
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: org
          type: string
      type: object
    paymentRelationships_customers:
      properties:
        data:
          items:
            $ref: '#/components/schemas/paymentRelationships_customers_data_inner'
          type: array
      type: object
    BookPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        description:
          maxLength: 80
          minLength: 1
          type: string
        status:
          enum:
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        transactionSummaryOverride:
          type: string
        reason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
      example: null
    WirePayment_allOf_attributes_imadOmad:
      properties:
        imad:
          type: string
        omad:
          type: string
      type: object
      example: null
    WirePayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          type: string
        description:
          maxLength: 50
          minLength: 1
          type: string
        counterparty:
          $ref: '#/components/schemas/wireCounterparty'
        status:
          enum:
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        settlementDate:
          format: date
          type: string
        reason:
          type: string
        imadOmad:
          $ref: '#/components/schemas/WirePayment_allOf_attributes_imadOmad'
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
      example: null
    BillPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        description:
          maxLength: 50
          minLength: 1
          type: string
        status:
          enum:
          - Initialized
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        reason:
          type: string
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
      example: null
    IncludedResource_inner:
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
        relationships:
          type: object
      type: object
    createPayment_data:
      oneOf:
      - $ref: '#/components/schemas/CreateAchPayment'
      - $ref: '#/components/schemas/CreateAchPaymentCounterparty'
      - $ref: '#/components/schemas/CreateAchPaymentPlaid'
      - $ref: '#/components/schemas/CreateBookPayment'
      - $ref: '#/components/schemas/CreateWirePayment'
      - $ref: '#/components/schemas/CreateBillPayment'
      - $ref: '#/components/schemas/CreatePushToCardPayment'
    CreateAchPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        addenda:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty'
        idempotencyKey:
          type: string
        sameDay:
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        secCode:
          enum:
          - WEB
          - CCD
          - PPD
          type: string
      required:
      - amount
      - counterparty
      - description
      - direction
      type: object
    CreateAchPayment_relationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/accountRelationship'
      required:
      - account
      type: object
    accountRelationship_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - depositAccount
          - creditAccount
          - batchAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    CreateAchPaymentCounterparty_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        addenda:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        sameDay:
          type: boolean
        idempotencyKey:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        verifyCounterpartyBalance:
          default: false
          type: boolean
        secCode:
          enum:
          - WEB
          - CCD
          - PPD
          type: string
      required:
      - amount
      - description
      - direction
      type: object
    CreateAchPaymentCounterparty_relationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/accountRelationship'
        counterparty:
          $ref: '#/components/schemas/counterpartyRelationship'
      required:
      - account
      - counterparty
      type: object
    counterpartyRelationship_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - depositAccount
          - counterparty
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    CreateAchPaymentPlaid_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        addenda:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        idempotencyKey:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        plaidProcessorToken:
          pattern: ^processor-.*$
          type: string
        counterpartyName:
          type: string
        sameDay:
          type: boolean
        verifyCounterpartyBalance:
          default: false
          type: boolean
        secCode:
          enum:
          - WEB
          - CCD
          - PPD
          type: string
      required:
      - amount
      - description
      - direction
      - plaidProcessorToken
      type: object
    CreateBookPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        idempotencyKey:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        transactionSummaryOverride:
          type: string
      required:
      - amount
      - description
      type: object
    CreateBookPayment_relationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/accountRelationship'
        counterpartyAccount:
          $ref: '#/components/schemas/counterpartyAccountRelationship'
      required:
      - account
      - counterpartyAccount
      type: object
    counterpartyAccountRelationship_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - depositAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    CreateWirePayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        direction:
          enum:
          - Credit
          type: string
        description:
          type: string
        counterparty:
          $ref: '#/components/schemas/wireCounterparty'
        idempotencyKey:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - counterparty
      - description
      type: object
    CreateBillPayment_attributes:
      additionalProperties: false
      properties:
        billerId:
          type: string
        accountNumber:
          type: string
        amount:
          type: integer
        description:
          type: string
        idempotencyKey:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        fullName:
          $ref: '#/components/schemas/fullName'
        dateOfBirth:
          format: date
          type: string
      required:
      - accountNumber
      - amount
      - billerId
      - description
      type: object
    CreatePushToCardPayment_attributes_configuration:
      properties:
        astra:
          $ref: '#/components/schemas/astra'
      type: object
    CreatePushToCardPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        idempotencyKey:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        description:
          type: string
        configuration:
          $ref: '#/components/schemas/CreatePushToCardPayment_attributes_configuration'
      required:
      - amount
      - configuration
      - description
      type: object
    update_payment_data:
      oneOf:
      - $ref: '#/components/schemas/patchAchPayment'
      - $ref: '#/components/schemas/patchBookPayment'
    received_payment_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        status:
          enum:
          - Pending
          - Advanced
          - Completed
          - Returned
          type: string
        amount:
          minimum: 1
          type: integer
        completionDate:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        wasAdvanced:
          type: boolean
        isAdvanceable:
          type: boolean
        isAdvaceable:
          type: boolean
        companyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        description:
          type: string
        addenda:
          type: string
        traceNumber:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        returnReason:
          type: string
        receivingEntityName:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - companyName
      - completionDate
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - secCode
      - status
      - traceNumber
      - wasAdvanced
      type: object
    receivedPaymentRelationships_customer_data:
      additionalProperties: false
      example:
        id: id
        type: businessCustomer
      properties:
        type:
          enum:
          - businessCustomer
          - individualCustomer
          - customer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    receivedPaymentRelationships_customer:
      additionalProperties: false
      example:
        data:
          id: id
          type: businessCustomer
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer_data'
      required:
      - data
      type: object
    receivedPaymentRelationships_receivePaymentTransaction_data:
      additionalProperties: false
      properties:
        type:
          default: transaction
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    receivedPaymentRelationships_receivePaymentTransaction:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction_data'
      required:
      - data
      type: object
    update_received_payment_data:
      oneOf:
      - $ref: '#/components/schemas/patchAchReceivedPayment'
    counterparty_1_attributes:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{1,17}$"
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        bank:
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        createdAt:
          format: date-time
          type: string
      required:
      - accountNumber
      - accountType
      - createdAt
      - name
      - permissions
      - routingNumber
      - type
      type: object
    createCounterparty_data:
      oneOf:
      - $ref: '#/components/schemas/CreateAchCounterparty'
      - $ref: '#/components/schemas/CreatePlaidCounterparty'
    CreateAchCounterparty_attributes:
      additionalProperties: false
      properties:
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          type: string
      required:
      - accountNumber
      - accountType
      - name
      - routingNumber
      - type
      type: object
    CreatePlaidCounterparty_attributes:
      additionalProperties: false
      properties:
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          type: string
        verifyName:
          default: false
          type: boolean
        plaidProcessorToken:
          maxLength: 60
          minLength: 40
          pattern: ^processor-.*$
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          type: string
      required:
      - plaidProcessorToken
      - type
      type: object
    update_counterparty_data:
      oneOf:
      - $ref: '#/components/schemas/patchCounterparty'
    patchCounterparty_attributes:
      additionalProperties: false
      properties:
        plaidProcessorToken:
          maxLength: 60
          minLength: 40
          pattern: ^processor-.*$
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        verifyName:
          default: false
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      type: object
    counterparty_balance_attributes:
      additionalProperties: false
      properties:
        balance:
          type: number
        available:
          type: number
      required:
      - balance
      type: object
    counterpartyBalanceRelationships_counterparty_data:
      additionalProperties: false
      properties:
        type:
          default: counterparty
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    counterpartyBalanceRelationships_counterparty:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/counterpartyBalanceRelationships_counterparty_data'
      required:
      - data
      type: object
    RecurringCreditAchPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - Active
          - Completed
          - Disabled
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        numberOfPayments:
          type: integer
      required:
      - amount
      - createdAt
      - description
      - numberOfPayments
      - schedule
      - status
      type: object
      example: null
    recurringAchPaymentRelationships_account_data:
      additionalProperties: false
      example:
        id: id
        type: depositAccount
      properties:
        type:
          enum:
          - depositAccount
          - account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    recurringAchPaymentRelationships_account:
      additionalProperties: false
      example:
        data:
          id: id
          type: depositAccount
      properties:
        data:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_account_data'
      required:
      - data
      type: object
    recurringAchPaymentRelationships_counterparty_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - counterparty
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    recurringAchPaymentRelationships_counterparty:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_counterparty_data'
      required:
      - data
      type: object
    recurringAchPaymentRelationships_org_data:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    recurringAchPaymentRelationships_org:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_org_data'
      required:
      - data
      type: object
    RecurringDebitAchPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - Active
          - Completed
          - Disabled
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        numberOfPayments:
          type: integer
        verifyCounterpartyBalance:
          default: false
          type: boolean
        sameDay:
          default: false
          type: boolean
      required:
      - amount
      - createdAt
      - description
      - numberOfPayments
      - schedule
      - status
      type: object
      example: null
    RecurringCreditBookPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 80
          minLength: 1
          type: string
        status:
          enum:
          - Pending
          - Active
          - Completed
          - Disabled
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        numberOfPayments:
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - numberOfPayments
      - schedule
      - status
      - updatedAt
      type: object
      example: null
    recurringBookPaymentRelationships_counterpartyAccount_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    recurringBookPaymentRelationships_counterpartyAccount:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/recurringBookPaymentRelationships_counterpartyAccount_data'
      required:
      - data
      type: object
    createRecurringPayment_data:
      oneOf:
      - $ref: '#/components/schemas/createRecurringCreditAchPayment'
      - $ref: '#/components/schemas/createRecurringDebitAchPayment'
      - $ref: '#/components/schemas/createRecurringCreditBookPayment'
    createRecurringCreditAchPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        schedule:
          $ref: '#/components/schemas/schedule_1'
      required:
      - amount
      - description
      - schedule
      type: object
    createRecurringDebitAchPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        sameDay:
          default: false
          type: boolean
        verifyCounterpartyBalance:
          default: false
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        schedule:
          $ref: '#/components/schemas/schedule_1'
        clearingDaysOverride:
          minimum: 0
          type: integer
      required:
      - amount
      - description
      - schedule
      type: object
    createRecurringCreditBookPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        transactionSummaryOverride:
          maxLength: 100
          minLength: 1
          type: string
        schedule:
          $ref: '#/components/schemas/schedule_1'
      required:
      - amount
      - description
      - schedule
      type: object
    BusinessDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        shippingAddress:
          $ref: '#/components/schemas/address'
        address:
          $ref: '#/components/schemas/address'
        fullName:
          $ref: '#/components/schemas/fullName'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/physicalCardStatus'
        design:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - address
      - createdAt
      - dateOfBirth
      - email
      - expirationDate
      - fullName
      - last4Digits
      - phone
      type: object
      example: null
    cardRelationships_account:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/counterpartyAccountRelationship_data'
      required:
      - data
      type: object
    IndividualDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        shippingAddress:
          $ref: '#/components/schemas/address'
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/physicalCardStatus'
        design:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - createdAt
      - expirationDate
      - last4Digits
      - status
      type: object
      example: null
    BusinessVirtualDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        address:
          $ref: '#/components/schemas/address'
        fullName:
          $ref: '#/components/schemas/fullName'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/virtualCardStatus'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - address
      - createdAt
      - dateOfBirth
      - email
      - expirationDate
      - fullName
      - last4Digits
      - phone
      type: object
      example: null
    IndividualVirtualDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/virtualCardStatus'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - createdAt
      - expirationDate
      - last4Digits
      - status
      type: object
      example: null
    createCard_data:
      oneOf:
      - $ref: '#/components/schemas/CreateIndividualDebitCard'
      - $ref: '#/components/schemas/CreateBusinessDebitCard'
      - $ref: '#/components/schemas/CreateBusinessCreditCard'
      - $ref: '#/components/schemas/CreateIndividualVirtualDebitCard'
      - $ref: '#/components/schemas/CreateBusinessVirtualDebitCard'
      - $ref: '#/components/schemas/CreateBusinessVirtualCreditCard'
    CreateIndividualDebitCard_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/address'
        design:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        bin:
          $ref: '#/components/schemas/BIN'
        cardQualifier:
          pattern: "^(\\d{3})|([ ]{3})$"
          type: string
        cardDesignId:
          maxLength: 16
          type: string
        additionalEmbossedText:
          maxLength: 26
          type: string
        activeForOnlineUse:
          type: boolean
        printOnlyBusinessName:
          type: boolean
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      type: object
    CreateBusinessDebitCard_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/address'
        address:
          $ref: '#/components/schemas/address'
        fullName:
          $ref: '#/components/schemas/fullName'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        design:
          type: string
        additionalEmbossedText:
          maxLength: 26
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        activeForOnlineUse:
          type: boolean
        printOnlyBusinessName:
          type: boolean
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateIndividualVirtualDebitCard_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        bin:
          $ref: '#/components/schemas/BIN'
        cardQualifier:
          pattern: "^\\d{3}$"
          type: string
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      type: object
    CreateBusinessVirtualDebitCard_attributes:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/address'
        fullName:
          $ref: '#/components/schemas/fullName'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    update_card_data:
      oneOf:
      - $ref: '#/components/schemas/patchIndividualDebitCard'
      - $ref: '#/components/schemas/patchIndividualVirtualDebitCard'
      - $ref: '#/components/schemas/patchBusinessDebitCard'
      - $ref: '#/components/schemas/patchBusinessVirtualDebitCard'
      - $ref: '#/components/schemas/patchBusinessCreditCard'
      - $ref: '#/components/schemas/patchBusinessVirtualCreditCard'
    patchIndividualDebitCard_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/address'
        design:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    patchIndividualVirtualDebitCard_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    patchBusinessDebitCard_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/address'
        address:
          $ref: '#/components/schemas/address'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          format: email
          type: string
        design:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    patchBusinessVirtualDebitCard_attributes:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/address'
        phone:
          $ref: '#/components/schemas/phone'
        email:
          format: email
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/cardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    pinStatus_attributes:
      properties:
        status:
          type: string
      type: object
    DepositLimits_allOf_attributes_ach_limits:
      properties:
        dailyDebit:
          type: number
        dailyCredit:
          type: number
        monthlyDebit:
          type: number
        monthlyDebitSoft:
          type: number
        dailyDebitSoft:
          type: number
        monthlyCredit:
          type: number
      required:
      - dailyCredit
      - dailyDebit
      - monthlyCredit
      - monthlyDebit
      type: object
      example: null
    DepositLimits_allOf_attributes_ach_totalsDaily:
      properties:
        debits:
          type: number
        credits:
          type: number
      required:
      - credits
      - debits
      type: object
      example: null
    DepositLimits_allOf_attributes_ach:
      properties:
        limits:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_ach_limits'
        totalsDaily:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_ach_totalsDaily'
        totalsMonthly:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_ach_totalsDaily'
      required:
      - limits
      - totalsDaily
      - totalsMonthly
      type: object
      example: null
    DepositLimits_allOf_attributes_card_limits:
      properties:
        dailyWithdrawal:
          type: number
        dailyDeposit:
          type: number
        dailyPurchase:
          type: number
        dailyCardTransaction:
          type: number
      required:
      - dailyCardTransaction
      - dailyDeposit
      - dailyPurchase
      - dailyWithdrawal
      type: object
      example: null
    DepositLimits_allOf_attributes_card_totalsDaily:
      properties:
        withdrawals:
          type: number
        deposits:
          type: number
        purchases:
          type: number
        cardTransactions:
          type: number
      required:
      - cardTransactions
      - deposits
      - purchases
      - withdrawals
      type: object
      example: null
    DepositLimits_allOf_attributes_card:
      properties:
        limits:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_card_limits'
        totalsDaily:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_card_totalsDaily'
      required:
      - limits
      - totalsDaily
      type: object
      example: null
    DepositLimits_allOf_attributes_checkDeposit_limits:
      properties:
        daily:
          type: number
        monthly:
          type: number
        dailySoft:
          type: number
        monthlySoft:
          type: number
      required:
      - daily
      - dailySoft
      - monthly
      - monthlySoft
      type: object
      example: null
    DepositLimits_allOf_attributes_checkDeposit:
      properties:
        limits:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_checkDeposit_limits'
        totalsDaily:
          type: number
        totalsMonthly:
          type: number
      required:
      - limits
      - totalsDaily
      - totalsMonthly
      type: object
      example: null
    DepositLimits_allOf_attributes:
      properties:
        ach:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_ach'
        card:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_card'
        checkDeposit:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_checkDeposit'
      required:
      - ach
      - card
      - checkDeposit
      type: object
      example: null
    CreditLimits_allOf_attributes:
      properties:
        card:
          $ref: '#/components/schemas/DepositLimits_allOf_attributes_card'
      required:
      - card
      type: object
      example: null
    authorization_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        cardLast4Digits:
          type: string
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          type: boolean
        status:
          type: string
        declineReason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        summary:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/cardVerificationData'
        cardNetwork:
          type: string
        cashWithdrawalAmount:
          type: integer
      required:
      - amount
      - cardLast4Digits
      - createdAt
      - merchant
      - recurring
      - status
      type: object
    PurchaseAuthorizationRequest_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          type: string
        partialApprovalAllowed:
          type: boolean
        approvedAmount:
          type: integer
        declineReason:
          type: string
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        healthcareAmounts:
          $ref: '#/components/schemas/healthcareAmounts'
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/cardVerificationData'
        ecommerce:
          type: boolean
        cardPresent:
          type: boolean
        cardNetwork:
          type: string
        cashWithdrawalAmount:
          type: integer
      required:
      - amount
      - createdAt
      - merchant
      - partialApprovalAllowed
      - recurring
      - status
      type: object
      example: null
    authorizationRequestRelationships_card_data:
      additionalProperties: false
      properties:
        type:
          default: card
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    authorizationRequestRelationships_card:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/authorizationRequestRelationships_card_data'
      required:
      - data
      type: object
    CardTransactionAuthorizationRequest_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          type: string
        partialApprovalAllowed:
          type: boolean
        approvedAmount:
          type: integer
        declineReason:
          type: string
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/cardVerificationData'
        cardNetwork:
          type: string
      required:
      - amount
      - createdAt
      - merchant
      - partialApprovalAllowed
      - recurring
      - status
      type: object
      example: null
    AtmAuthorizationRequest_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          type: string
        partialApprovalAllowed:
          type: boolean
        approvedAmount:
          type: integer
        declineReason:
          type: string
        direction:
          type: string
        atmName:
          type: string
        atmLocation:
          type: string
        surcharge:
          type: integer
        internationalServiceFee:
          nullable: true
          type: number
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        cardNetwork:
          type: string
      required:
      - amount
      - atmName
      - createdAt
      - direction
      - partialApprovalAllowed
      - status
      - surcharge
      type: object
      example: null
    approveAuthorizationRequest_attributes:
      properties:
        amount:
          type: integer
        fundingAccount:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      type: object
    declineAuthorizationRequest_attributes:
      properties:
        reason:
          enum:
          - AccountClosed
          - CardExceedsAmountLimit
          - DoNotHonor
          - InsufficientFunds
          - InvalidMerchant
          - ReferToCardIssuer
          - RestrictedCard
          - TransactionNotPermittedToCardholder
          type: string
      type: object
    statement_attributes:
      properties:
        period:
          type: string
      type: object
    reward_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        status:
          enum:
          - Rejected
          - Sent
          type: string
        rejectReason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - status
      - tags
      type: object
    transactionRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction_data'
      required:
      - data
      title: transactionRelationship
      type: object
    cardRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/authorizationRequestRelationships_card_data'
      required:
      - data
      title: cardRelationship
      type: object
    createReward_data_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    createReward_data:
      additionalProperties: false
      properties:
        type:
          default: reward
          type: string
        attributes:
          $ref: '#/components/schemas/createReward_data_attributes'
        relationships:
          $ref: '#/components/schemas/createRewardRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    institution_attributes:
      additionalProperties: false
      properties:
        routingNumber:
          type: string
        name:
          type: string
        address:
          type: string
        isWireSupported:
          type: boolean
        isACHSupported:
          type: boolean
      required:
      - isACHSupported
      - isWireSupported
      - name
      - routingNumber
      type: object
    fee_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    check_deposit_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        settlementDate:
          format: date
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          minLength: 1
          type: string
        status:
          enum:
          - AwaitingImages
          - AwaitingFrontImage
          - AwaitingBackImage
          - Pending
          - PendingReview
          - AwaitingCustomerConfirmation
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        reason:
          nullable: true
          type: string
        statusCreatedAt:
          format: date-time
          type: string
        statusSetBy:
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/statusEvent'
          type: array
        reasonText:
          type: string
        checkNumber:
          type: string
        vendor:
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty_2'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - status
      type: object
    statusEvent_status:
      properties:
        type:
          $ref: '#/components/schemas/checkDepositStatus'
      type: object
    checkDepositRelationships_account_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - depositAccount
          - batchAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    checkDepositRelationships_account:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/checkDepositRelationships_account_data'
      required:
      - data
      type: object
    createCheckDeposit_data_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    createCheckDeposit_data:
      properties:
        type:
          default: checkDeposit
          enum:
          - checkDeposit
          type: string
        attributes:
          $ref: '#/components/schemas/createCheckDeposit_data_attributes'
        relationships:
          $ref: '#/components/schemas/createCheckDepositRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    patchCheckDeposit_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      type: object
    api_token_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        expiration:
          format: date-time
          type: string
        token:
          type: string
        sourceIp:
          type: string
      required:
      - createdAt
      type: object
    createApiToken_data_attributes_resources_inner:
      properties:
        type:
          enum:
          - card
          - account
          type: string
        ids:
          items:
            $ref: '#/components/schemas/identifier'
          type: array
      type: object
    createApiToken_data_attributes:
      additionalProperties: false
      properties:
        scope:
          type: string
        description:
          type: string
        expiration:
          format: date-time
          type: string
        sourceIp:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/createApiToken_data_attributes_resources_inner'
          minItems: 1
          type: array
      required:
      - description
      - expiration
      type: object
    createApiToken_data:
      additionalProperties: false
      properties:
        type:
          default: apiToken
          type: string
        attributes:
          $ref: '#/components/schemas/createApiToken_data_attributes'
      required:
      - attributes
      - type
      type: object
    createCustomerToken_data_attributes:
      properties:
        scope:
          type: string
        verificationToken:
          type: string
        jwtToken:
          type: string
        expiresIn:
          type: integer
        verificationCode:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/createApiToken_data_attributes_resources_inner'
          minItems: 1
          type: array
        upgradableScope:
          type: string
      type: object
    createCustomerToken_data:
      properties:
        type:
          default: customerToken
          type: string
        attributes:
          $ref: '#/components/schemas/createCustomerToken_data_attributes'
      type: object
    customer_token_attributes:
      properties:
        token:
          type: string
        expiresIn:
          type: integer
      type: object
    createCustomerTokenVerification_data_attributes:
      additionalProperties: false
      properties:
        channel:
          enum:
          - sms
          - call
          type: string
        phone:
          $ref: '#/components/schemas/phone'
        appHash:
          maxLength: 11
          minLength: 11
          type: string
        language:
          enum:
          - en
          - af
          - ar
          - ca
          - zh
          - zh-CN
          - zh-HK
          - hr
          - cs
          - da
          - nl
          - en-GB
          - et
          - fi
          - fr
          - de
          - el
          - he
          - hi
          - hu
          - id
          - it
          - ja
          - kn
          - ko
          - ms
          - mr
          - nb
          - pl
          - pt-BR
          - pt
          - ro
          - ru
          - sk
          - es
          - sv
          - tl
          - te
          - th
          - tr
          - vi
          type: string
      required:
      - channel
      type: object
    createCustomerTokenVerification_data:
      additionalProperties: false
      properties:
        type:
          default: customerTokenVerification
          type: string
        attributes:
          $ref: '#/components/schemas/createCustomerTokenVerification_data_attributes'
      required:
      - attributes
      - type
      type: object
    customer_token_verification_attributes:
      properties:
        verificationToken:
          type: string
      type: object
    webhook_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        label:
          type: string
        url:
          type: string
        status:
          type: string
        contentType:
          enum:
          - Json
          - JsonAPI
          type: string
        deliveryMode:
          enum:
          - AtMostOnce
          - AtLeastOnce
          type: string
        token:
          type: string
        subscriptionType:
          type: string
      type: object
    updateUnitRequest_data_attributes:
      properties:
        tags:
          type: object
      type: object
    updateUnitRequest_data:
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/updateUnitRequest_data_attributes'
      type: object
    atm_location_attributes:
      properties:
        network:
          type: string
        locationName:
          type: string
        coordinates:
          $ref: '#/components/schemas/coordinates'
        address:
          $ref: '#/components/schemas/address'
        distance:
          type: integer
        surchargeFree:
          type: boolean
        acceptDeposits:
          type: boolean
      type: object
    OriginatedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        addenda:
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        secCode:
          type: string
        traceNumber:
          type: string
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - description
      - direction
      - summary
      type: object
      example: null
    accountRelationship_2_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - depositAccount
          - glAccount
          - account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    accountRelationship_2:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/accountRelationship_2_data'
      required:
      - data
      title: accountRelationship
      type: object
    receivingAccountRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_account_data'
      required:
      - data
      title: receivingAccountRelationship
      type: object
    customerRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer_data'
      required:
      - data
      title: customerRelationship
      type: object
    counterpartyAccountRelationship_1:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/relationships_account_data'
      required:
      - data
      title: counterpartyAccountRelationship
      type: object
    counterpartyCustomerRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/relationships_customer_data'
      required:
      - data
      title: counterpartyCustomerRelationship
      type: object
    relatedTransactionRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction_data'
      required:
      - data
      title: relatedTransactionRelationship
      type: object
    authorizationRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: authorization
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    authorizationRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/authorizationRelationship_data'
      required:
      - data
      title: authorizationRelationship
      type: object
    returnedRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction_data'
      required:
      - data
      title: returnedRelationship
      type: object
    paymentRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: payment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    paymentRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/paymentRelationship_data'
      required:
      - data
      title: paymentRelationship
      type: object
    checkPaymentRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/paymentRelationship_data'
      required:
      - data
      title: checkPaymentRelationship
      type: object
    repaymentRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: repayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    repaymentRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/repaymentRelationship_data'
      required:
      - data
      title: repaymentRelationship
      type: object
    recurringPaymentRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: recurringPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    recurringPaymentRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/recurringPaymentRelationship_data'
      required:
      - data
      title: recurringPaymentRelationship
      type: object
    incomingAchRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: incomingAch
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    incomingAchRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/incomingAchRelationship_data'
      required:
      - data
      title: incomingAchRelationship
      type: object
    checkDepositRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: checkDeposit
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    checkDepositRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/checkDepositRelationship_data'
      required:
      - data
      title: checkDepositRelationship
      type: object
    authorizationRequestRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: authorizationRequest
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    authorizationRequestRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/authorizationRequestRelationship_data'
      required:
      - data
      title: authorizationRequestRelationship
      type: object
    receivedPaymentRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: receivedPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    receivedPaymentRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/receivedPaymentRelationship_data'
      required:
      - data
      title: receivedPaymentRelationship
      type: object
    chargebackRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: chargeback
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    chargebackRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/chargebackRelationship_data'
      required:
      - data
      title: chargebackRelationship
      type: object
    rewardRelationship_data:
      additionalProperties: false
      properties:
        type:
          default: reward
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    rewardRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/rewardRelationship_data'
      required:
      - id
      - type
      title: rewardRelationship
      type: object
    ReceivedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        addenda:
          type: string
        companyName:
          type: string
        counterpartyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        traceNumber:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - summary
      type: object
      example: null
    ReturnedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        companyName:
          type: string
        counterpartyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        reason:
          type: string
        achReason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - counterpartyName
      - counterpartyRoutingNumber
      - createdAt
      - direction
      - reason
      - summary
      type: object
      example: null
    ReturnedReceivedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        companyName:
          type: string
        reason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - createdAt
      - direction
      - reason
      - summary
      type: object
      example: null
    DishonoredAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        companyName:
          type: string
        counterpartyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        traceNumber:
          type: string
        reason:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - summary
      type: object
      example: null
    PurchaseTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        merchant:
          $ref: '#/components/schemas/merchant'
        coordinates:
          $ref: '#/components/schemas/coordinates'
        recurring:
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        interchange:
          nullable: true
          type: string
        ecommerce:
          type: boolean
        cardPresent:
          type: boolean
        internationalServiceFee:
          nullable: true
          type: integer
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/cardVerificationData'
        cardNetwork:
          type: string
      required:
      - amount
      - balance
      - cardLast4Digits
      - cardPresent
      - createdAt
      - direction
      - ecommerce
      - merchant
      - recurring
      - summary
      type: object
      example: null
    BookTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - direction
      - summary
      type: object
      example: null
    AtmTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        atmName:
          type: string
        atmLocation:
          type: string
        surcharge:
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        interchange:
          nullable: true
          type: string
        internationalServiceFee:
          nullable: true
          type: integer
        cardNetwork:
          type: string
      required:
      - amount
      - atmName
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - summary
      - surcharge
      type: object
      example: null
    FeeTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
      example: null
    ReversalTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        internationalServiceFee:
          nullable: true
          type: integer
      required:
      - amount
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - summary
      type: object
      example: null
    CardTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        interchange:
          nullable: true
          type: string
        internationalServiceFee:
          nullable: true
          type: integer
        merchant:
          $ref: '#/components/schemas/merchant'
        recurring:
          type: boolean
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/cardVerificationData'
        cardNetwork:
          type: string
      required:
      - amount
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - merchant
      - recurring
      - summary
      type: object
      example: null
    ReleaseTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        senderName:
          type: string
        description:
          type: string
        senderAccountNumber:
          maxLength: 17
          type: string
        senderAddress:
          $ref: '#/components/schemas/address'
        counterparty:
          $ref: '#/components/schemas/counterparty'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - direction
      - summary
      type: object
      example: null
    WireTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty'
        description:
          type: string
        senderReference:
          type: string
        referenceForBeneficiary:
          type: string
        originatorToBeneficiaryInformation:
          type: string
        beneficiaryInformation:
          type: string
        beneficiaryAdviceInformation:
          type: string
        imadOmad:
          $ref: '#/components/schemas/WirePayment_allOf_attributes_imadOmad'
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - direction
      - summary
      type: object
      example: null
    AdjustmentTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
      example: null
    DisputeTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        reason:
          type: string
        disputeId:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - disputeId
      - reason
      - summary
      type: object
      example: null
    CheckDepositTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
      example: null
    ReturnedCheckDepositTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        balance:
          type: integer
        summary:
          type: string
        reason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
      example: null
    ChargebackTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        counterparty:
          $ref: '#/components/schemas/counterparty'
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
      example: null
    RewardTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        receiverCounterparty:
          $ref: '#/components/schemas/counterparty'
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - receiverCounterparty
      - summary
      type: object
      example: null
    AccountLowBalanceClosureTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - summary
      type: object
      example: null
    BankRepaymentTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        paidForDate:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - paidForDate
      - summary
      type: object
      example: null
    CashDepositTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        recurring:
          type: boolean
      required:
      - amount
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - merchant
      - recurring
      - summary
      type: object
      example: null
    ReturnedCheckPaymentTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        balance:
          type: integer
        summary:
          type: string
        reason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - reason
      - summary
      type: object
      example: null
    update_transaction_data:
      oneOf:
      - $ref: '#/components/schemas/patchTransactionTags'
      - $ref: '#/components/schemas/patchBookTransaction'
      - $ref: '#/components/schemas/patchChargebackTransaction'
    patchTransactionTags_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - tags
      type: object
    patchBookTransaction_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        summary:
          type: string
      type: object
    patchBookTransaction_relationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/accountRelationship_1'
      required:
      - account
      type: object
    dispute_attributes_statusHistory_inner:
      additionalProperties: false
      properties:
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    dispute_attributes:
      additionalProperties: false
      properties:
        source:
          enum:
          - DebitCard
          - ACH
          type: string
        externalId:
          maxLength: 255
          type: string
        link:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        description:
          maxLength: 1024
          type: string
        amount:
          type: integer
        status:
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/dispute_attributes_statusHistory_inner'
          type: array
        createdAt:
          format: date-time
          type: string
        decisionReason:
          type: string
      required:
      - amount
      - createdAt
      - description
      - externalId
      - source
      - status
      type: object
    AchRepayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        sameDay:
          type: boolean
        status:
          enum:
          - Pending
          - PendingReview
          - Sent
          - Returned
          - Rejected
          - Clearing
          type: string
      required:
      - amount
      - createdAt
      - status
      type: object
      example: null
    AchRepayment_allOf_relationships_account_data:
      properties:
        type:
          enum:
          - depositAccount
          - account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
      example: null
    AchRepayment_allOf_relationships_account:
      properties:
        data:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_account_data'
      required:
      - data
      type: object
      example: null
    AchRepayment_allOf_relationships_creditAccount_data:
      properties:
        type:
          default: creditAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
      example: null
    AchRepayment_allOf_relationships_creditAccount:
      properties:
        data:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_creditAccount_data'
      required:
      - data
      type: object
      example: null
    AchRepayment_allOf_relationships_counterparty_data:
      properties:
        type:
          default: counterparty
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
      example: null
    AchRepayment_allOf_relationships_counterparty:
      properties:
        data:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_counterparty_data'
      required:
      - data
      type: object
      example: null
    AchRepayment_allOf_relationships_customer_data:
      properties:
        type:
          enum:
          - businessCustomer
          - individualCustomer
          - customer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
      example: null
    AchRepayment_allOf_relationships_customer:
      properties:
        data:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_customer_data'
      required:
      - data
      type: object
      example: null
    AchRepayment_allOf_relationships_payment_data:
      properties:
        type:
          default: payment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
      example: null
    AchRepayment_allOf_relationships_payment:
      properties:
        data:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_payment_data'
      required:
      - data
      type: object
      example: null
    AchRepayment_allOf_relationships:
      properties:
        account:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_account'
        creditAccount:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_creditAccount'
        counterparty:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_counterparty'
        customer:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_customer'
        payment:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_payment'
      type: object
      example: null
    BookRepayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - PendingReview
          - Sent
          - Returned
          - Rejected
          type: string
      required:
      - amount
      - createdAt
      - status
      type: object
      example: null
    BookRepayment_allOf_relationships_counterpartyAccount_data:
      properties:
        type:
          default: account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
      example: null
    BookRepayment_allOf_relationships_counterpartyAccount:
      properties:
        data:
          $ref: '#/components/schemas/BookRepayment_allOf_relationships_counterpartyAccount_data'
      required:
      - data
      type: object
      example: null
    BookRepayment_allOf_relationships:
      properties:
        account:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_account'
        creditAccount:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_creditAccount'
        counterpartyAccount:
          $ref: '#/components/schemas/BookRepayment_allOf_relationships_counterpartyAccount'
        customer:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_customer'
        payment:
          $ref: '#/components/schemas/AchRepayment_allOf_relationships_payment'
      type: object
      example: null
    createRepayment_data:
      oneOf:
      - $ref: '#/components/schemas/CreateAchRepayment'
      - $ref: '#/components/schemas/CreateBookRepayment'
    CreateAchRepayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        sameDay:
          type: boolean
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    CreateAchRepayment_relationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
        creditAccount:
          $ref: '#/components/schemas/Relationship'
        counterparty:
          $ref: '#/components/schemas/Relationship'
      required:
      - account
      - counterparty
      - creditAccount
      type: object
    CreateBookRepayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 80
          minLength: 1
          type: string
        transactionSummaryOverride:
          maxLength: 100
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    CreateBookRepayment_relationships:
      additionalProperties: false
      properties:
        account:
          $ref: '#/components/schemas/Relationship'
        creditAccount:
          $ref: '#/components/schemas/Relationship'
        counterpartyAccount:
          $ref: '#/components/schemas/Relationship'
      required:
      - account
      - counterpartyAccount
      - creditAccount
      type: object
    CheckPayment_attributes_counterparty:
      additionalProperties: false
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/address'
        counterpartyMoved:
          type: boolean
      type: object
    CheckPayment_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        returnCutoffTime:
          format: date-time
          type: string
        status:
          enum:
          - MarkedForReturn
          - Returned
          - Processed
          - PendingReview
          type: string
        memo:
          type: string
        deliveryStatus:
          enum:
          - Mailed
          - InLocalArea
          - Delivered
          - Rerouted
          - ReturnedToSender
          type: string
        sendAt:
          format: date-time
          type: string
        counterparty:
          $ref: '#/components/schemas/CheckPayment_attributes_counterparty'
        trackedAt:
          format: date-time
          type: string
        postalCode:
          type: string
        expectedDelivery:
          format: date
          type: string
        originated:
          type: boolean
        expirationDate:
          format: date
          type: string
        rejectReason:
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        description:
          type: string
        returnReason:
          $ref: '#/components/schemas/returnReason'
        pendingReviewReasons:
          items:
            enum:
            - NameMissMatch
            - SoftLimit
            type: string
          type: array
        checkNumber:
          type: string
        onUsAuxiliary:
          type: string
        onUs:
          type: string
        counterpartyRoutingNumber:
          type: string
        additionalVerificationStatus:
          enum:
          - Required
          - NotRequired
          - Approved
          type: string
      required:
      - amount
      - createdAt
      - originated
      - status
      - updatedAt
      type: object
    CheckPayment_relationships:
      properties:
        account:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_account'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
        customers:
          $ref: '#/components/schemas/customersRelationship'
        transaction:
          $ref: '#/components/schemas/receivedPaymentRelationships_receivePaymentTransaction'
      required:
      - account
      type: object
    stopPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        checkNumber:
          maxLength: 12
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - amount
      - checkNumber
      type: object
    relationships_1_account_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - depositAccount
          - financialBusinessFBOAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    relationships_1_account:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/relationships_1_account_data'
      required:
      - data
      type: object
    orgRelationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: org
          type: string
      required:
      - id
      - type
      type: object
    Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      required:
      - id
      - type
      type: object
    applicationFormAdditionalDisclosures_inner:
      properties:
        title:
          type: string
        url:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
      type: object
    customerLinkage_data:
      properties:
        type:
          enum:
          - customer
          - businessCustomer
          - individualCustomer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    customersRelationship_data_inner:
      example:
        id: id
        type: customer
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: customer
          type: string
      type: object
    stop_payment_attributes:
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        amount: 1
        checkNumber: checkNumber
        updatedAt: 2000-01-23T04:56:07.000+00:00
        status: Active
        tags: "{}"
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        status:
          enum:
          - Active
          - Disabled
          type: string
        tags:
          additionalProperties: false
          maxProperties: 15
          type: object
        checkNumber:
          type: string
      required:
      - amount
      - checkNumber
      - createdAt
      - updatedAt
      type: object
    stop_payment_relationships_checkPayments_data_inner:
      example:
        id: id
        type: checkPayment
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: checkPayment
          type: string
      type: object
    stop_payment_relationships_checkPayments:
      additionalProperties: false
      example:
        data:
        - id: id
          type: checkPayment
        - id: id
          type: checkPayment
      properties:
        data:
          items:
            $ref: '#/components/schemas/stop_payment_relationships_checkPayments_data_inner'
          type: array
      required:
      - data
      type: object
    stop_payment_relationships:
      example:
        checkPayments:
          data:
          - id: id
            type: checkPayment
          - id: id
            type: checkPayment
        customers:
          data:
          - id: id
            type: customer
          - id: id
            type: customer
        account:
          data:
            id: id
            type: depositAccount
        customer:
          data:
            id: id
            type: businessCustomer
      properties:
        account:
          $ref: '#/components/schemas/recurringAchPaymentRelationships_account'
        customer:
          $ref: '#/components/schemas/receivedPaymentRelationships_customer'
        customers:
          $ref: '#/components/schemas/customersRelationship'
        checkPayments:
          $ref: '#/components/schemas/stop_payment_relationships_checkPayments'
      required:
      - account
      - customer
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

