openapi: 3.0.2
info:
  description: An OpenAPI specifications for unit-sdk clients
  title: Unit OpenAPI specifications
  version: 0.1.0
servers:
- url: https://api.s.unit.sh
security:
- bearerAuth: []
paths:
  /applications/{applicationId}:
    get:
      description: 'Get an Application from API '
      operationId: getApplication
      parameters:
      - description: ID of the application to get
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApplicationResponseWithIncluded'
          description: Successful Response
      summary: Get Application by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Application via API '
      operationId: updateApplication
      parameters:
      - description: ID of the application to update
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
        description: Update Application Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitApplicationResponseWithIncluded'
          description: Successful Response
      summary: Update Application
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/cancel:
    post:
      description: 'Cancel a Application via API '
      operationId: cancelApplication
      parameters:
      - description: ID of the application to get
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Cancel_Application_Request'
        description: Cancel Application Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Cancel_Application_Response'
          description: Successful Response
      summary: Cancel Application by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /applications:
    get:
      description: 'Get List Applications from API '
      operationId: getApplicationsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getApplicationsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_List_Applications_Response'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get List Application
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Application via API '
      operationId: createApplication
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        description: Create Application Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Create_Application_Response'
          description: Successful Response
      summary: Create Application
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /application-forms:
    get:
      description: 'Get List Application Forms from API '
      operationId: getApplicationForms
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getApplicationForms_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Application_Forms_List_Response'
          description: Successful Response
      summary: Get List Application Forms
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Application Form via API '
      operationId: createApplicationForm
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateApplicationFormRequest'
        description: Create Application Form Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Application_Form_Response'
          description: Successful Response
      summary: Create Application Form
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /applications/{applicationId}/documents/{documentId}:
    put:
      operationId: uploadApplicationDocumentFile
      parameters:
      - description: ID of the application to upload a file to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to upload a file for
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/UploadPdfDocument'
          image/png:
            schema:
              $ref: '#/components/schemas/UploadPngDocument'
          image/jpeg:
            schema:
              $ref: '#/components/schemas/UploadJpegDocument'
        description: An application document file. SDK only temporarily supports only
          ... files
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: "Upload an application document file. Supports PDF, PNG and JPG files"
      tags:
      - unit
      x-content-type: application/pdf
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/back:
    put:
      description: "Upload an application file via API - Back Side. Supports PDF,\
        \ PNG and JPG files"
      operationId: uploadApplicationDocumentFileBackSide
      parameters:
      - description: ID of the application to upload a file to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to upload a file for
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/pdf:
            schema:
              type: object
          image/png:
            schema:
              type: object
          image/jpeg:
            schema:
              type: object
        description: "Upload an application document file - Back Side. Supports PDF,\
          \ PNG and JPG files"
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: "Upload an application document file - Back Side. Supports PDF, PNG\
        \ and JPG files"
      tags:
      - unit
      x-content-type: application/pdf
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents:
    get:
      description: 'Get List of Documents via API '
      operationId: getApplicationDocuments
      parameters:
      - description: ID of the application to get documents for
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_List_Documents_Response'
          description: Successful Response
      summary: Get List of Documents
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: Create an application document via API
      operationId: createApplicationDocument
      parameters:
      - description: ID of the application to create a file for
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: "A workaround to properly assign the content type for the request\
          \ body while providing no body, just set the one possible enum value"
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          $ref: '#/components/schemas/DefaultContentType'
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Create an application document
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/verify:
    put:
      description: 'Verify a document via API '
      operationId: verifyApplicationDocument
      parameters:
      - description: ID of the application to verify a file for
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to verify
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verify_Document'
        description: Verify Document
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitDocumentResponse'
          description: Successful Response
      summary: Verify a document
      tags:
      - unit
      x-content-type: application/json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/download:
    get:
      description: 'Download a Document via API '
      operationId: downloadApplicationDocument
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to download
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Download a Document
      tags:
      - unit
      x-accepts:
      - application/octet-stream
  /applications/{applicationId}/documents/{documentId}/download/back:
    get:
      description: Download a Document - Back Side via API
      operationId: downloadApplicationBackSideDocument
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to download
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Download a Document - Back Side
      tags:
      - unit
      x-accepts:
      - application/octet-stream
  /application-forms/{applicationFormId}:
    get:
      description: 'Get an Application Form from API '
      operationId: getApplicationForm
      parameters:
      - description: ID of the application form to get
        explode: false
        in: path
        name: applicationFormId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Application_Form_Response_With_Included'
          description: Successful Response
      summary: Get ApplicationForm by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts:
    get:
      description: 'Get List Accounts from API '
      operationId: getAccountsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getAccountsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Accounts_List_Response'
          description: Successful Response
        "401":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get List Accounts
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create Account via API '
      operationId: createAccount
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        description: Create Account Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Create Account
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}:
    get:
      description: 'Get an Account from API '
      operationId: getAccount
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponseWithIncluded'
          description: Successful Response
      summary: Get Account by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Account via API '
      operationId: updateAccount
      parameters:
      - description: ID of the account to update
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
        description: Update Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Update Account
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/limits:
    get:
      description: 'Get Account Limits from API '
      operationId: getAccountLimits
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Get_Account_Limits_Response'
          description: Successful Response
      summary: Get Account Limits by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/unfreeze:
    post:
      description: 'Unfreeze an Account via API '
      operationId: unfreezeAccount
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Unfreeze Account by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/freeze:
    post:
      description: 'Freeze Account via API '
      operationId: freezeAccount
      parameters:
      - description: ID of the account to freeze
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Freeze_Account_Request'
        description: Freeze Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Freeze Account by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/close:
    post:
      description: 'Close an Account via API '
      operationId: closeAccount
      parameters:
      - description: ID of the account to close
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Close_Account_Request'
        description: Close Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Close an Account by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/reopen:
    post:
      description: 'Reopen an Account via API '
      operationId: reopenAccount
      parameters:
      - description: ID of the account to close
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Reopen an Account by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/enter-daca:
    post:
      description: 'Enter Control Agreement for Account via API '
      operationId: enterControlAgreementForAccount
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Enter Account Control Agreement by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/activate-daca:
    post:
      description: 'Activate Control Agreement for Account via API '
      operationId: activateControlAgreementForAccount
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Activate Account Control Agreement by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/deactivate-daca:
    post:
      description: Deactivate Control Agreement for Account via API
      operationId: deactivateControlAgreementForAccount
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitAccountResponse'
          description: Successful Response
        "404":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Deactivate Account Control Agreement by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /account-end-of-day:
    get:
      description: 'Get AccountEndOfDay List from API '
      operationId: getAccountEndOfDay
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Get_Account_End_Of_Day_List_Response'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get AccountEndOfDay List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/repayment-information:
    get:
      description: Retrieve the repayment information for a specific account via API
      operationId: execute
      parameters:
      - description: ID of the account to get repayment information for
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRepaymentInformationResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get Repayment Information
      tags:
      - Repayment Information
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /customers/{customerId}:
    get:
      description: 'Get a Customer from API '
      operationId: getCustomer
      parameters:
      - description: ID of the customer to get
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomerResponse'
          description: Successful Response
      summary: Get Customer by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Customer via API '
      operationId: updateCustomer
      parameters:
      - description: ID of the customer to update
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
        description: Update Customer Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCustomerResponse'
          description: Successful Response
      summary: Update Customer
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /customers:
    get:
      description: 'Get Customers List from API '
      operationId: getCustomersList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getCustomersList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Customers_List_Response'
          description: Successful Response
      summary: Get Customers List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /customers/{customerId}/archive:
    post:
      description: 'Archive a Customer via API '
      operationId: archiveCustomer
      parameters:
      - description: ID of the customer to archive
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ArchiveCustomerRequest'
        description: Archive Customer Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCustomerResponse'
          description: Successful Response
      summary: Archive Customer by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /payments:
    get:
      description: 'Get List Payments from API '
      operationId: getPaymentsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getPaymentsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Payments_List_Response'
          description: Successful Response
      summary: Get List Payments
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Payment via API '
      operationId: createPayment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        description: Create Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponse'
          description: Successful Response
      summary: Create a Payment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /payments/{paymentId}:
    get:
      description: 'Get a Payment from API '
      operationId: getPayment
      parameters:
      - description: ID of the payment to get
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Payment_Response_With_Included'
          description: Successful Response
      summary: Get Payment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Payment via API '
      operationId: updatePayment
      parameters:
      - description: ID of the payment to update
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentRequest'
        description: Update Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponse'
          description: Successful Response
      summary: Update Payment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /payments/{paymentId}/cancel:
    post:
      description: 'Cancel a Payment via API '
      operationId: cancelPayment
      parameters:
      - description: ID of the payment to cancel
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPaymentResponse'
          description: Successful Response
      summary: Cancel a Payment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /received-payments:
    get:
      description: 'Get Received Payments from API '
      operationId: getReceivedPaymentsList
      parameters:
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Received_Payment_List_Response'
          description: Successful Response
      summary: Get Received Payments List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /received-payments/{paymentId}:
    get:
      description: 'Get a Received Payment from API '
      operationId: getReceivedPayment
      parameters:
      - description: ID of the payment to get
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Received_Payment_Response_With_Included'
          description: Successful Response
      summary: Get Received Payment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Received Payment via API '
      parameters:
      - description: ID of the payment to update
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateReceivedPaymentRequest'
        description: Update Received Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitReceivedPaymentResponse'
          description: Successful Response
      summary: Update Received Payment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /received-payments/{paymentId}/advance:
    post:
      description: 'Advance a Received Payment via API '
      operationId: advanceReceivedPayment
      parameters:
      - description: ID of the payment to advance
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitReceivedPaymentResponse'
          description: Successful Response
      summary: Advance Received Payment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /counterparties:
    get:
      description: 'Get Counterparties List from API '
      operationId: getCounterpartiesList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getCounterpartiesList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Counterparties_List_Response'
          description: Successful Response
      summary: Get Counterparties List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a counterparty via API '
      operationId: createCounterparty
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCounterpartyRequest'
        description: Create Counterparty Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Counterparty_Response'
          description: Successful Response
      summary: Create Counterparty
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /counterparties/{counterpartyId}:
    delete:
      description: 'Delete Counterparty via API '
      operationId: deleteCounterparty
      parameters:
      - description: ID of the counterparty to delete
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful Response
      summary: Delete Counterparty by Id
      tags:
      - unit
      x-accepts:
      - application/json
    get:
      description: 'Get a Counterparty from API '
      operationId: getCounterparty
      parameters:
      - description: ID of the counterparty to get
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Counterparty_Response'
          description: Successful Response
      summary: Get Counterparty by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Counterparty via API '
      operationId: updateCounterparty
      parameters:
      - description: ID of the counterparty to update
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCounterpartyRequest'
        description: Update Counterparty Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Counterparty_Response'
          description: Successful Response
      summary: Update Counterparty
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /counterparties/{counterpartyId}/balance:
    get:
      description: 'Get Recurring Payment from API '
      operationId: getCounterpartyBalance
      parameters:
      - description: ID of the counterparty to get
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Counterparty_Response_1'
          description: Successful Response
      summary: Get Counterparty Balance
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-payments:
    get:
      description: 'Get Recurring Payments List from API '
      operationId: getRecurringPaymentsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getRecurringPaymentsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Recurring_Payment_List_Response'
          description: Successful Response
      summary: Get Recurring Payments List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Recurring Payment via API '
      operationId: createRecurringPayment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRecurringPaymentRequest'
        description: Create Recurring Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Create Recurring Payment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /recurring-payments/{paymentId}:
    get:
      description: 'Get Recurring Payment from API '
      operationId: getRecurringPayment
      parameters:
      - description: ID of the payment to get
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Get Recurring Payment
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-payments/{paymentId}/disable:
    post:
      description: 'Disable Recurring Payment via API '
      operationId: disableRecurringPayment
      parameters:
      - description: ID of the payment to disable
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Disable Recurring Payment
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-payments/{paymentId}/enable:
    post:
      description: 'Enable Recurring Payment via API '
      operationId: enableRecurringPayment
      parameters:
      - description: ID of the payment to enable
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringPaymentResponse'
          description: Successful Response
      summary: Enable Recurring Payment
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards:
    get:
      description: 'Get List of Cards from API '
      operationId: getCardsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getCardsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Card_Response_Cards_List'
          description: Successful Response
      summary: Get List of Cards
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Card via API '
      operationId: createCard
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCardRequest'
        description: Create Card Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Cards_List_Response'
          description: Successful Response
      summary: Create a Card
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}:
    get:
      description: 'Get a Card from API '
      operationId: getCard
      parameters:
      - description: ID of the card to get
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Card_Response'
          description: Successful Response
      summary: Get Card by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Card via API '
      operationId: updateCard
      parameters:
      - description: ID of the card to update
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCardRequest'
        description: Update Card Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Update_Card_Response'
          description: Successful Response
      summary: Update Card
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /cards/{cardId}/secure-data/pin/status:
    get:
      description: 'Get Card PIN Status via API '
      operationId: getCardPinStatus
      parameters:
      - description: ID of the card to get PIN status
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitPinStatusResponse'
          description: Successful Response
      summary: Get Card PIN Status
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}/report-stolen:
    post:
      description: 'Report card as stolen via API '
      operationId: reportCardAsStolen
      parameters:
      - description: ID of the card
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Report_Stolen_Card_Response'
          description: Successful Response
      summary: Report card as stolen
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}/report-lost:
    post:
      description: 'Report lost as stolen via API '
      operationId: reportCardAsLost
      parameters:
      - description: ID of the card
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Report_Lost_Card_Response'
          description: Successful Response
      summary: Report lost as stolen
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}/close:
    post:
      description: 'Close a Card via API '
      operationId: closeCard
      parameters:
      - description: ID of the card to close
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Close_Card_Response'
          description: Successful Response
      summary: Close a Card
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}/freeze:
    post:
      description: 'Freeze a Card via API '
      operationId: freezeCard
      parameters:
      - description: ID of the card to freeze
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit__Freeze_Card_Response'
          description: Successful Response
      summary: Freeze a Card
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}/unfreeze:
    post:
      description: 'Unfreeze a Card via API '
      operationId: unfreezeCard
      parameters:
      - description: ID of the card to unfreeze
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit__Unfreeze_Card_Response'
          description: Successful Response
      summary: Unfreeze a Card
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /cards/{cardId}/limits:
    get:
      description: 'Get a Card Limits from API '
      operationId: getCardLimits
      parameters:
      - description: ID of the card to get
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Card_Limits_Response'
          description: Successful Response
      summary: Get Card Limit by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /authorizations:
    get:
      description: 'Get List Authorizations from API '
      operationId: getAuthorizationsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getAuthorizationsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_List_Authorizations_Response'
          description: Successful Response
      summary: Get List authorizations
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /authorizations/{authorizationId}:
    get:
      description: 'Get a Authorization from API '
      operationId: getAuthorization
      parameters:
      - description: ID of the authorization to get
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: includeNoneAuthorized
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Authorization_Response'
          description: Successful Response
      summary: Get Authorization by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /authorization-requests:
    get:
      description: 'Get List Authorization Requests from API '
      operationId: getAuthorizationRequestsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getAuthorizationRequestsList_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_List_Authorization_Requests_Response'
          description: Successful Response
      summary: Get List Authorization Requests
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}:
    get:
      description: 'Get a Authorization Request from API '
      operationId: getAuthorizationRequest
      parameters:
      - description: ID of the authorization request to get
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Authorization_Requests_Response'
          description: Successful Response
      summary: Get Authorization Request by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}/approve:
    post:
      description: 'Approve a Authorization Request via API '
      operationId: approveAuthorizationRequest
      parameters:
      - description: ID of the authorization request to approve
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Approve_Authorization_Request'
        description: Approve Authorization Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Authorization_Request_Response'
          description: Successful Response
      summary: Approve Authorization Request by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}/decline:
    post:
      description: 'Decline Authorization Request via API '
      operationId: declineAuthorizationRequest
      parameters:
      - description: ID of the authorization request to decline
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Decline_Authorization_Request'
        description: Decline Authorization Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Authorization_Request_Response'
          description: Successful Response
      summary: Decline Authorization Request
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /statements:
    get:
      description: 'Get List Statements from API '
      operationId: getStatementsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getStatementsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Statements_Response'
          description: Successful Response
      summary: Get List Statements
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /statements/{statementId}/html:
    get:
      description: 'Get a HTML Statement from API '
      operationId: getStatementHtml
      parameters:
      - description: ID of the statement to get
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Successful Response
      summary: Get HTML Statement by Id
      tags:
      - unit
      x-accepts:
      - text/html
  /statements/{statementId}/pdf:
    get:
      description: 'Get a PDF Statement from API '
      operationId: getStatementPdf
      parameters:
      - description: ID of the statement to get
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get PDF Statement by Id
      tags:
      - unit
      x-accepts:
      - application/pdf
  /statements/{accountId}/bank/pdf:
    get:
      description: 'Get Get Bank verification PDF from API '
      operationId: getStatementBankPdf
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get Bank verification PDF
      tags:
      - unit
      x-accepts:
      - application/pdf
  /rewards:
    get:
      description: 'Get Rewards List from API '
      operationId: getListRewards
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getListRewards_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Rewards_List_Response'
          description: Successful Response
      summary: Get Rewards List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Reward via API '
      operationId: createReward
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardRequest'
        description: Create Reward Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Reward_Response'
          description: Successful Response
      summary: Create Reward
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /rewards/{rewardId}:
    get:
      description: 'Get a Reward from API '
      operationId: getReward
      parameters:
      - description: ID of the reward to get
        explode: false
        in: path
        name: rewardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Reward_Response'
          description: Successful Response
      summary: Get Reward by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /events:
    get:
      description: 'Get Events List from API '
      operationId: getEventsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getEventsList_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Event_List_Response'
          description: Successful Response
      summary: Get Events List
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /events/{eventId}:
    get:
      description: 'Get an Event from API '
      operationId: getEvent
      parameters:
      - description: ID of the event to get
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Event_Response'
          description: Successful Response
      summary: Get Event by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Fire an Event via API '
      operationId: fireEvent
      parameters:
      - description: ID of the event to fire
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitEventResponse'
          description: Successful Response
      summary: Fire Event by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /institutions/{routingNumber}:
    get:
      description: 'Get an Institution from API '
      operationId: getInstitution
      parameters:
      - description: routingNumber of the institution to get
        explode: false
        in: path
        name: routingNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Institution_Response'
          description: Successful Response
      summary: Get Institution by Routing Number
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /fees:
    post:
      description: 'Create a Fee via API '
      operationId: createFee
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateFeeRequest'
        description: Create Fee Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Fee_Response'
          description: Successful Response
      summary: Create Fee
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /check-deposits:
    get:
      description: 'Get List Check Deposits from API '
      operationId: getCheckDepositsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getCheckDepositsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_List_Check_Deposits_Response'
          description: Successful Response
      summary: Get List Check Deposits
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Check Deposit via API '
      operationId: createCheckDeposit
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCheckDepositRequest'
        description: Create Check Deposit Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_List_Check_Deposits_Response_1'
          description: Successful Response
      summary: Create Check Deposit
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /check-deposits/{checkDepositId}:
    get:
      description: 'Get a Check Deposit from API '
      operationId: getCheckDeposit
      parameters:
      - description: ID of the check deposit to get
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Check_Deposit_Response'
          description: Successful Response
      summary: Get Check Deposit by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Check Deposit via API '
      operationId: updateCheckDeposit
      parameters:
      - description: ID of the check deposit to update
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCheckDepositRequest'
        description: Update Check Deposit Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Update_Check_Deposit_Response'
          description: Successful Response
      summary: Update Check Deposit
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /check-deposits/{checkDepositId}/confirm:
    post:
      description: 'Confirm a Check Deposit from API '
      operationId: confirmCheckDeposit
      parameters:
      - description: ID of the check deposit to confirm
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Confirm_Check_Deposit_Response'
          description: Successful Response
      summary: Confirm by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-deposits/{checkDepositId}/front:
    get:
      description: 'Get Front Check Deposit Image from API '
      operationId: getFrontCheckDeposit
      parameters:
      - description: ID of the check deposit to get
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Front_Check_Deposit_Response'
          description: Successful Response
      summary: Get Front Check Deposit Image by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-deposits/{checkDepositId}/back:
    get:
      description: 'Get Back Check Deposit Image from API '
      operationId: getBackCheckDeposit
      parameters:
      - description: ID of the check deposit to get
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Back_Check_Deposit_Response'
          description: Successful Response
      summary: Get Back Check Deposit Image by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /users/{userId}/api-tokens:
    get:
      description: 'Get List Org API Tokens from API '
      operationId: getApiTokensList
      parameters:
      - description: ID of the user to revoke token
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Org_Api_Tokens_List_Response'
          description: Successful Response
      summary: Get List Org API Tokens
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Org API Token via API '
      operationId: createApiToken
      parameters:
      - description: ID of the user to create token for
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        description: Create Org API Token Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Api_Token_Response'
          description: Successful Response
      summary: Create Org API Token
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /users/{userId}/api-tokens/{tokenId}:
    delete:
      description: 'Get a Reward from API '
      operationId: deleteToken
      parameters:
      - description: ID of the user to revoke token
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the token to revoke
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Api_Token_Response'
          description: Successful Response
      summary: Get Reward by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /customers/{customerId}/token:
    post:
      description: 'Create a Customer Token via API '
      operationId: createCustomerToken
      parameters:
      - description: ID of the customer to create token for
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerTokenRequest'
        description: Create Customer Token Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Customer_Token_Response'
          description: Successful Response
      summary: Create Customer Token
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /customers/{customerId}/token/verification:
    post:
      description: 'Create a Customer Token Verification via API '
      operationId: createCustomerTokenVerification
      parameters:
      - description: ID of the customer to create token for
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerTokenVerificationRequest'
        description: Create Customer Token Verification Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Customer_Token_Verification_Response'
          description: Successful Response
      summary: Create Customer Token Verification
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /webhooks:
    get:
      description: 'Get List Webhooks from API '
      operationId: getWebhooksList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getWebhooksList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Webhooks_List_Response'
          description: Successful Response
      summary: Get List Webhooks
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json
    post:
      description: 'Create a Webhook via API '
      operationId: createWebhook
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Create_Webhook'
        description: Create Webhook Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: Successful Response
      summary: Create Webhook
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /webhooks/{webhookId}:
    get:
      description: 'Get a Webhook from API '
      operationId: getWebhook
      parameters:
      - description: ID of the webhook to get
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: Successful Response
      summary: Get Webhook Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Webhook via API '
      operationId: updateWebhook
      parameters:
      - description: ID of the Webhook to update
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
        description: Update Webhook Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: Successful Response
      summary: Update Webhook
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /webhooks/{webhookId}/enable:
    post:
      description: 'Enable a Webhook via API '
      operationId: enableWebhook
      parameters:
      - description: ID of the webhook to enable
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: Successful Response
      summary: Enable Webhook
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /webhooks/{webhookId}/disable:
    post:
      description: 'Disable a Webhook via API '
      operationId: disableWebhook
      parameters:
      - description: ID of the webhook to disable
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: Successful Response
      summary: Disable a Webhook
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /atm-locations:
    get:
      description: 'Get List ATM Locations from API '
      operationId: getAtmLocationsList
      parameters:
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getAtmLocationsList_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/AtmLocation'
                title: Unit Atm Locations List Response
                type: array
          description: Successful Response
      summary: Get List of ATM Locations
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      description: 'Get a Transaction from API '
      operationId: getTransaction
      parameters:
      - description: ID of the account to get transaction from
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Transaction_Response_With_Included_Resource'
          description: Successful Response
      summary: Get Transaction by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Transaction via API '
      operationId: updateTransaction
      parameters:
      - description: ID of the account to update transaction from
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction to update
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionRequest'
        description: Update Transaction Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Transaction_Response'
          description: Successful Response
      summary: Update Transaction
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /transactions:
    get:
      description: 'Get List Transactions from API '
      operationId: getTransactionsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getTransactionsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Unit_Transactions_List_Response'
          description: Successful Response
      summary: Get List Transactions
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json
  /disputes:
    get:
      description: 'Get List Disputes from API '
      operationId: getDisputesList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getDisputesList_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Dispute'
                title: Unit Disputes List Response
                type: array
          description: Successful Response
      summary: Get List Disputes
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /disputes/{disputeId}:
    get:
      description: 'Get a Dispute from API '
      operationId: getDispute
      parameters:
      - description: ID of the dispute to get
        explode: false
        in: path
        name: disputeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Dispute_Response'
          description: Successful Response
      summary: Get Dispute by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /repayments:
    get:
      description: 'Get List Repayments from API '
      operationId: getRepaymentsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getRepaymentsList_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Repayments_List_Response'
          description: Successful Response
        "401":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get List Repayments
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Repayment via API '
      operationId: createRepayment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRepaymentRequest'
        description: Create a Repayment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRepaymentResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Create a Repayment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /repayments/{repaymentId}:
    get:
      description: 'Get an Repayment from API '
      operationId: getRepayment
      parameters:
      - description: ID of the repayment to get
        explode: false
        in: path
        name: repaymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRepaymentResponse'
          description: Successful Response
      summary: Get Repayment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-repayments:
    get:
      description: 'Get List Recurring Repayments from API '
      operationId: getRecurringRepaymentsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getRecurringRepaymentsList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdAt
          - -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_Recurring_Repayments_List_Response'
          description: Successful Response
        "401":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Get List Recurring Repayments
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: Create a Recurring Repayment via API
      operationId: createRecurringRepayment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRecurringRepaymentRequest'
        description: Create a Recurring Repayment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringRepaymentResponse'
          description: Successful Response
        default:
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitError'
          description: Unexpected error
      summary: Create a Recurring Repayment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-repayments/{recurringRepaymentId}:
    get:
      description: 'Get a Recurring Repayment from API '
      operationId: getRecurringRepayment
      parameters:
      - description: ID of the recurring repayment to get
        explode: false
        in: path
        name: recurringRepaymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringRepaymentResponse'
          description: Successful Response
      summary: Get Recurring Repayment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-repayments/{recurringRepaymentId}/disable:
    post:
      description: Disable a Recurring Repayment
      operationId: disableRecurringRepayment
      parameters:
      - description: ID of the recurring repayment to disable
        explode: false
        in: path
        name: recurringRepaymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringRepaymentResponse'
          description: Successful Response
      summary: Disable Recurring Repayment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /recurring-repayments/{recurringRepaymentId}/enable:
    post:
      description: Enable a Recurring Repayment
      operationId: enableRecurringRepayment
      parameters:
      - description: ID of the recurring repayment to enable
        explode: false
        in: path
        name: recurringRepaymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitRecurringRepaymentResponse'
          description: Successful Response
      summary: Enable Recurring Repayment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-payments:
    get:
      description: 'Get List Check Payments from API '
      operationId: getCheckPaymentsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getCheckPaymentsList_filter_parameter'
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Unit_List_Check_Payments_Response'
          description: Successful Response
      summary: Get List Check Payments
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
    post:
      description: 'Create Check Payment via API '
      operationId: createCheckPayment
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCheckPaymentRequest'
        description: Create Check Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Create Check Payment
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json
  /check-payments/{checkPaymentId}:
    get:
      description: 'Get a Check Payment from API '
      operationId: getCheckPayment
      parameters:
      - description: ID of the check payment to get
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Get Check Payment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/approve:
    post:
      description: 'Approve a Check Payment via API '
      operationId: approveCheckPayment
      parameters:
      - description: ID of the check payment to approve
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Approve_Check_Payment_Request'
        description: Approve Check Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Approve Check Payment by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/cancel:
    post:
      description: 'Cancel a Check Payment via API '
      operationId: cancelCheckPayment
      parameters:
      - description: ID of the check payment to cancel
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Cancel Check Payment by Id
      tags:
      - unit
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/return:
    post:
      description: 'Return a Check Payment via API '
      operationId: returnCheckPayment
      parameters:
      - description: ID of the check payment to return
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Return_Check_Payment_Request'
        description: Return Check Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnitCheckPaymentResponse'
          description: Successful Response
      summary: Return Check Payment by Id
      tags:
      - unit
      x-content-type: application/vnd.api+json
      x-accepts:
      - application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/front:
    get:
      description: 'Get front image via API '
      operationId: getCheckPaymentFront
      parameters:
      - description: ID of the check payment
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get front image
      tags:
      - unit
      x-accepts:
      - image/png
  /check-payments/{checkPaymentId}/back:
    get:
      description: 'Get back image via API '
      operationId: getCheckPaymentBack
      parameters:
      - description: ID of the check payment
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: Successful Response
      summary: Get back image
      tags:
      - unit
      x-accepts:
      - image/png
  /stop-payments:
    get:
      operationId: getStopPaymentsList
      parameters:
      - explode: false
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListPageParameters'
        style: deepObject
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/getStopPaymentsList_filter_parameter'
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentListResponse'
          description: OK
      summary: Get a list of stop payments
      tags:
      - unit
      x-accepts:
      - application/json
    post:
      operationId: createStopPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStopPaymentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
      summary: Create Stop Payment
      tags:
      - unit
      x-content-type: application/json
      x-accepts:
      - application/json
  /stop-payments/{stopPaymentId}:
    get:
      operationId: getStopPayment
      parameters:
      - description: ID of the stop payment
        explode: false
        in: path
        name: stopPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
        "404":
          description: Stop payment not found
      summary: Get details of a specific stop payment
      tags:
      - unit
      x-accepts:
      - application/json
    post:
      operationId: updateStopPayment
      parameters:
      - description: ID of the stop payment
        explode: false
        in: path
        name: stopPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStopPaymentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
        "404":
          description: Stop payment not found
      summary: Update a stop payment
      tags:
      - unit
      x-content-type: application/json
      x-accepts:
      - application/json
  /stop-payments/{stopPaymentId}/disable:
    post:
      operationId: disableStopPayment
      parameters:
      - description: ID of the stop payment
        explode: false
        in: path
        name: stopPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentResponse'
          description: OK
        "404":
          description: Stop payment not found
      summary: Disable a stop payment
      tags:
      - unit
      x-accepts:
      - application/json
components:
  parameters:
    PageQuery:
      explode: false
      in: query
      name: page
      required: false
      schema:
        $ref: '#/components/schemas/ListPageParameters'
      style: deepObject
  responses:
    DefaultError:
      content:
        application/vnd.api+json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/UnitError'
      description: Unexpected error
  schemas:
    Application:
      discriminator:
        mapping:
          individualApplication: '#/components/schemas/IndividualApplication'
          businessApplication: '#/components/schemas/BusinessApplication'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - individualApplication
          - businessApplication
          type: string
      title: Application
      type: object
    ApplicationStatus:
      enum:
      - AwaitingDocuments
      - PendingReview
      - Approved
      - Denied
      - Pending
      - Canceled
      type: string
    FullName:
      additionalProperties: false
      properties:
        first:
          maxLength: 255
          minLength: 1
          type: string
        last:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - first
      - last
      title: Full Name
      type: object
    Email:
      format: email
      type: string
    Phone:
      additionalProperties: false
      properties:
        countryCode:
          type: string
        number:
          type: string
      required:
      - countryCode
      - number
      title: Phone
      type: object
    Country:
      pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
      type: string
    Address:
      additionalProperties: false
      properties:
        street:
          maxLength: 255
          minLength: 1
          pattern: ^.*$
          type: string
        street2:
          nullable: true
          pattern: ^.*$
          type: string
        city:
          maxLength: 255
          minLength: 1
          pattern: ^.*$
          type: string
        state:
          type: string
        postalCode:
          pattern: "^[0-9]{5}(?:-[0-9]{4})?$"
          type: string
        country:
          default: US
          type: string
      required:
      - city
      - country
      - postalCode
      - state
      - street
      title: Address
      type: object
    Tags:
      additionalProperties:
        maxLength: 255
        minLength: 1
        type: string
      maxProperties: 15
      type: object
    JwtSubject:
      nullable: true
      type: string
    PowerOfAttorneyAgent:
      additionalProperties: false
      properties:
        status:
          type: string
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        idTheftScore:
          type: integer
      required:
      - fullName
      - status
      title: Power of Attorney Agent
      type: object
    Industry:
      enum:
      - Retail
      - Wholesale
      - Restaurants
      - Hospitals
      - Construction
      - Insurance
      - Unions
      - RealEstate
      - FreelanceProfessional
      - OtherProfessionalServices
      - OnlineRetailer
      - OtherEducationServices
      type: string
    Occupation:
      enum:
      - ArchitectOrEngineer
      - BusinessAnalystAccountantOrFinancialAdvisor
      - CommunityAndSocialServicesWorker
      - ConstructionMechanicOrMaintenanceWorker
      - Doctor
      - Educator
      - EntertainmentSportsArtsOrMedia
      - ExecutiveOrManager
      - FarmerFishermanForester
      - FoodServiceWorker
      - GigWorker
      - HospitalityOfficeOrAdministrativeSupportWorker
      - HouseholdManager
      - JanitorHousekeeperLandscaper
      - Lawyer
      - ManufacturingOrProductionWorker
      - MilitaryOrPublicSafety
      - NurseHealthcareTechnicianOrHealthcareSupport
      - PersonalCareOrServiceWorker
      - PilotDriverOperator
      - SalesRepresentativeBrokerAgent
      - ScientistOrTechnologist
      - Student
      type: string
    AnnualIncome:
      enum:
      - UpTo10k
      - Between10kAnd25k
      - Between25kAnd50k
      - Between50kAnd100k
      - Between100kAnd250k
      - Over250k
      type: string
    SourceOfIncome:
      enum:
      - EmploymentOrPayrollIncome
      - PartTimeOrContractorIncome
      - InheritancesAndGifts
      - PersonalInvestments
      - BusinessOwnershipInterests
      - GovernmentBenefits
      type: string
    SoleProprietorshipAnnualRevenue:
      enum:
      - UpTo50k
      - Between50kAnd100k
      - Between100kAnd200k
      - Between200kAnd500k
      - Over500k
      type: string
    SoleProprietorshipNumberOfEmployees:
      enum:
      - One
      - Between2And5
      - Between5And10
      - Over10
      type: string
    BusinessVertical:
      enum:
      - AdultEntertainmentDatingOrEscortServices
      - AgricultureForestryFishingOrHunting
      - ArtsEntertainmentAndRecreation
      - BusinessSupportOrBuildingServices
      - Cannabis
      - Construction
      - DirectMarketingOrTelemarketing
      - EducationalServices
      - FinancialServicesCryptocurrency
      - FinancialServicesDebitCollectionOrConsolidation
      - FinancialServicesMoneyServicesBusinessOrCurrencyExchange
      - FinancialServicesOther
      - FinancialServicesPaydayLending
      - GamingOrGambling
      - HealthCareAndSocialAssistance
      - HospitalityAccommodationOrFoodServices
      - LegalAccountingConsultingOrComputerProgramming
      - Manufacturing
      - Mining
      - Nutraceuticals
      - PersonalCareServices
      - PublicAdministration
      - RealEstate
      - ReligiousCivicAndSocialOrganizations
      - RepairAndMaintenance
      - RetailTrade
      - TechnologyMediaOrTelecom
      - TransportationOrWarehousing
      - Utilities
      - WholesaleTrade
      type: string
    Identifier:
      pattern: "^[1-9]\\d*$"
      type: string
    CustomerRelationship:
      properties:
        customer:
          $ref: '#/components/schemas/Customer_Relationship'
      type: object
    DocumentsRelationship:
      additionalProperties: true
      properties:
        documents:
          $ref: '#/components/schemas/Documents_Relationship'
      required:
      - data
      type: object
    TrusteesRelationship:
      properties:
        trustees:
          $ref: '#/components/schemas/Trustees_Relationship'
      type: object
    BeneficiariesRelationship:
      properties:
        beneficiaries:
          $ref: '#/components/schemas/Beneficiaries_Relationship'
      type: object
    BeneficialOwnersRelationship:
      properties:
        beneficialOwners:
          $ref: '#/components/schemas/Beneficial_Owners_Relationship'
      type: object
    Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Relationship_data'
      required:
      - data
      title: Relationship
      type: object
    ApplicationRelationships:
      allOf:
      - additionalProperties: false
        title: Application Relationships
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/DocumentsRelationship'
      - $ref: '#/components/schemas/TrusteesRelationship'
      - $ref: '#/components/schemas/BeneficiariesRelationship'
      - $ref: '#/components/schemas/BeneficialOwnersRelationship'
      - properties:
          applicationForm:
            $ref: '#/components/schemas/Relationship'
        type: object
    IndividualApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualApplication_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ApplicationRelationships'
        required:
        - attributes
        - id
        - type
        type: object
      title: Individual Application
      type: object
    EntityType:
      enum:
      - Corporation
      - LLC
      - Partnership
      - PubliclyTradedCorporation
      - PrivatelyHeldCorporation
      - NotForProfitOrganization
      type: string
    State:
      pattern: "^((A[LKSZR])|(C[AOT])|(D[EC])|(F[ML])|(G[AU])|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EHDAINSOT])|(N[EVHJMYCD])|(MP)|(O[HKR])|(P[WAR])|(RI)|(S[CD])|(T[NX])|(UT)|(V[TIA])|(W[AVIY]))$"
      type: string
    Contact:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        jwtSubject:
          nullable: true
          type: string
      required:
      - email
      - fullName
      - phone
      title: Contact
      type: object
    Officer:
      properties:
        status:
          type: string
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        title:
          enum:
          - President
          - CEO
          - COO
          - CFO
          - BenefitsAdministrationOfficer
          - CIO
          - VP
          - AVP
          - Treasurer
          - Secretary
          - Controller
          - Manager
          - Partner
          - Member
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        idTheftScore:
          type: integer
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      title: Officer
      type: object
    BeneficialOwner:
      properties:
        status:
          type: string
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        evaluationId:
          type: string
        percentage:
          maximum: 100
          minimum: 0
          type: integer
        evaluationFlags:
          items:
            type: string
          type: array
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        idTheftScore:
          type: integer
        evaluationCodes:
          items:
            type: string
          type: array
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      title: Beneficial Owner
      type: object
    BusinessAnnualRevenue:
      enum:
      - UpTo250k
      - Between250kAnd500k
      - Between500kAnd1m
      - Between1mAnd5m
      - Over5m
      type: string
    BusinessNumberOfEmployees:
      enum:
      - UpTo10
      - Between10And50
      - Between50And100
      - Between100And500
      - Over500
      type: string
    CashFlow:
      enum:
      - Unpredictable
      - Predictable
      type: string
    Year:
      pattern: "^\\d{4}$"
      type: string
    BusinessApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessApplication_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ApplicationRelationships'
        required:
        - attributes
        - id
        - type
        type: object
      title: Business Application
      type: object
    IncludedResource:
      items:
        $ref: '#/components/schemas/IncludedResource_inner'
      type: array
    UnitApplicationResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/Application'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: Unit Application Response With Included
      type: object
    UpdateBusinessApplication:
      additionalProperties: false
      properties:
        type:
          default: businessApplication
          enum:
          - businessApplication
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessApplication_attributes'
      required:
      - attributes
      - type
      title: Update Business Application
      type: object
    UpdateBusinessApplicationOfficer:
      additionalProperties: false
      properties:
        type:
          default: businessApplication
          enum:
          - businessApplication
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessApplicationOfficer_attributes'
      required:
      - attributes
      - type
      title: Update Business Application
      type: object
    ApplicationRelationship:
      properties:
        application:
          $ref: '#/components/schemas/Application_Relationship'
      type: object
    UpdateBusinessApplicationBeneficialOwner:
      additionalProperties: false
      properties:
        type:
          default: beneficialOwner
          enum:
          - beneficialOwner
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessApplicationBeneficialOwner_attributes'
      required:
      - attributes
      - type
      title: Update Business Application
      type: object
    UpdateSoleProprietorApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          enum:
          - individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateSoleProprietorApplication_attributes'
      required:
      - attributes
      - type
      title: Update Individual Application
      type: object
    UpdateIndividualApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          enum:
          - individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateIndividualApplication_attributes'
      required:
      - attributes
      - type
      title: Update Individual Application
      type: object
    UpdateApplicationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateApplicationRequest_data'
      required:
      - data
      title: Update Application
      type: object
    Ssn:
      pattern: "^\\d{9}$"
      type: string
    ApplicationDocument:
      additionalProperties: false
      properties:
        type:
          default: document
          enum:
          - document
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/ApplicationDocument_attributes'
      required:
      - attributes
      - id
      - type
      title: Application Document
      type: object
    ListPageParameters:
      description: Parameters for paginated list requests
      properties:
        limit:
          default: 100
          maximum: 1000
          type: integer
        offset:
          default: 0
          type: integer
      type: object
    UnitError:
      items:
        $ref: '#/components/schemas/UnitError_inner'
      title: Unit Error
      type: array
    PaginationMeta:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMeta_pagination'
      type: object
    IdempotencyKey:
      maxLength: 255
      minLength: 1
      type: string
    DeviceFingerprint:
      additionalProperties: false
      properties:
        provider:
          enum:
          - iovation
          type: string
        value:
          type: string
      required:
      - provider
      - value
      type: object
    EvaluationParams:
      additionalProperties: false
      properties:
        useSelfieVerification:
          enum:
          - Never
          - ReplaceIdentification
          - Always
          type: string
        requireIdVerification:
          default: false
          type: boolean
      title: Evaluation Params
      type: object
    CreatePowerOfAttorneyAgent:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        jwtSubject:
          nullable: true
          type: string
        EvaluationParams:
          $ref: '#/components/schemas/EvaluationParams'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      title: Create Power of Attorney Agent
      type: object
    CreateIndividualApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          enum:
          - individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateIndividualApplication_attributes'
      required:
      - attributes
      - type
      title: Create Individual Application
      type: object
    CreateSoleProprietorApplication:
      additionalProperties: false
      properties:
        type:
          default: individualApplication
          enum:
          - individualApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSoleProprietorApplication_attributes'
      required:
      - attributes
      - type
      title: Create Sole Proprietor Application
      type: object
    CreateOfficer:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        title:
          enum:
          - President
          - CEO
          - COO
          - CFO
          - BenefitsAdministrationOfficer
          - CIO
          - VP
          - AVP
          - Treasurer
          - Secretary
          - Controller
          - Manager
          - Partner
          - Member
          type: string
        EvaluationParams:
          $ref: '#/components/schemas/EvaluationParams'
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - occupation
      - phone
      title: Create Officer
      type: object
    CreateBeneficialOwner:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        percentage:
          maximum: 100
          minimum: 0
          type: integer
        EvaluationParams:
          $ref: '#/components/schemas/EvaluationParams'
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      title: Create Beneficial Owner
      type: object
    CreateBusinessApplication:
      additionalProperties: false
      properties:
        type:
          default: businessApplication
          enum:
          - businessApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessApplication_attributes'
      required:
      - attributes
      - type
      title: Create Business Application
      type: object
    CreateApplicationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateApplicationRequest_data'
      required:
      - data
      type: object
    ApplicationFormPrefill:
      additionalProperties: false
      properties:
        applicationType:
          enum:
          - Individual
          - Business
          - SoleProprietorship
          type: string
        fullName:
          $ref: '#/components/schemas/FullName'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        dateOfBirth:
          format: date
          type: string
        email:
          format: email
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        stateOfIncorporation:
          maxLength: 2
          minLength: 2
          type: string
        entityType:
          $ref: '#/components/schemas/EntityType'
        contact:
          $ref: '#/components/schemas/Contact'
        officer:
          $ref: '#/components/schemas/CreateOfficer'
        beneficialOwners:
          items:
            $ref: '#/components/schemas/CreateBeneficialOwner'
          type: array
        website:
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
        dba:
          maxLength: 255
          minLength: 1
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        jwtSubject:
          nullable: true
          type: string
        industry:
          $ref: '#/components/schemas/Industry'
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
        occupation:
          $ref: '#/components/schemas/Occupation'
      title: Application Form Prefilled
      type: object
    Url:
      pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
        b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
      type: string
    ApplicationFormAdditionalDisclosures:
      items:
        $ref: '#/components/schemas/ApplicationFormAdditionalDisclosures_inner'
      type: array
    ApplicationFormSettingsOverride:
      additionalProperties: false
      properties:
        redirectUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        privacyPolicyUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        electronicDisclosuresUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        depositTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        clientTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        cardholderTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        cashAdvancedTermsUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        debitCardDisclosureUrl:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        additionalDisclosures:
          items:
            $ref: '#/components/schemas/ApplicationFormAdditionalDisclosures_inner'
          type: array
      type: object
    ApplicationFormRelationships:
      allOf:
      - additionalProperties: false
        title: Application Form Relationships
        type: object
      - $ref: '#/components/schemas/ApplicationRelationship'
    ApplicationForm:
      properties:
        type:
          default: applicationForm
          enum:
          - applicationForm
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/ApplicationForm_attributes'
        relationships:
          $ref: '#/components/schemas/ApplicationFormRelationships'
      required:
      - attributes
      - id
      - type
      title: Application Form
      type: object
    RequireIdVerification:
      additionalProperties: false
      properties:
        individual:
          default: false
          type: boolean
        officer:
          default: false
          type: boolean
        beneficialOwners:
          default: false
          type: boolean
      type: object
    CreateApplicationFormRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateApplicationFormRequest_data'
      type: object
    UploadPdfDocument:
      format: binary
      title: work pls 2
      type: string
    UploadPngDocument:
      format: binary
      title: work pls
      type: string
    UploadJpegDocument:
      format: binary
      title: work pls 3
      type: string
    UnitDocumentResponse:
      properties:
        data:
          $ref: '#/components/schemas/ApplicationDocument'
      title: Unit Document Response
      type: object
    DefaultContentType:
      enum:
      - application/vnd.api+json
      type: string
    Account:
      discriminator:
        mapping:
          depositAccount: '#/components/schemas/DepositAccount'
          creditAccount: '#/components/schemas/CreditAccount'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - depositAccount
          - creditAccount
          type: string
      title: Account Document
      type: object
    DepositAccount:
      allOf:
      - $ref: '#/components/schemas/Account'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DepositAccount_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/DepositAccount_allOf_relationships'
        required:
        - attributes
        - relationships
        type: object
      title: Deposit Account
      type: object
    CreditAccount:
      allOf:
      - $ref: '#/components/schemas/Account'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CreditAccount_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CreditAccount_allOf_relationships'
        required:
        - attributes
        - relationships
        type: object
      title: Credit Account
      type: object
    Customer:
      discriminator:
        mapping:
          individualCustomer: '#/components/schemas/IndividualCustomer'
          businessCustomer: '#/components/schemas/BusinessCustomer'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - individualCustomer
          - businessCustomer
          type: string
      title: Customer
      type: object
    AuthorizedUser:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        jwtSubject:
          nullable: true
          type: string
      required:
      - email
      - fullName
      - phone
      title: Authorized User
      type: object
    OrgRelationship:
      additionalProperties: false
      properties:
        org:
          $ref: '#/components/schemas/Org_Relationship'
      type: object
    CustomerRelationships:
      allOf:
      - additionalProperties: true
        title: Customer Relationships
        type: object
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/ApplicationRelationship'
    IndividualCustomer:
      allOf:
      - $ref: '#/components/schemas/Customer'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualCustomer_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CustomerRelationships'
        type: object
      title: Individual Customer
      type: object
    BusinessCustomer:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Customer'
      - properties:
          attributes:
            $ref: '#/components/schemas/BusinessCustomer_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CustomerRelationships'
        type: object
      title: Business Customer
      type: object
    CreateCreditAccount:
      properties:
        type:
          default: creditAccount
          enum:
          - creditAccount
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCreditAccount_attributes'
        relationships:
          $ref: '#/components/schemas/CustomerRelationship'
      title: Create Credit Account
      type: object
    CustomersRelationship:
      additionalProperties: false
      properties:
        customers:
          $ref: '#/components/schemas/Customers_Relationship'
      type: object
    CreateDepositAccount:
      additionalProperties: false
      properties:
        type:
          default: depositAccount
          enum:
          - depositAccount
          type: string
        attributes:
          $ref: '#/components/schemas/CreateDepositAccount_attributes'
        relationships:
          $ref: '#/components/schemas/CreateDepositAccount_relationships'
      title: Create Deposit Account
      type: object
    CreateAccountRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateAccountRequest_data'
      required:
      - data
      type: object
    UnitAccountResponse:
      properties:
        data:
          $ref: '#/components/schemas/Account'
      title: Unit Account Response
      type: object
    UnitAccountResponseWithIncluded:
      properties:
        data:
          $ref: '#/components/schemas/Account'
        included:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
      title: Unit Account Response With Included
      type: object
    UpdateDepositAccount:
      additionalProperties: false
      properties:
        type:
          default: depositAccount
          enum:
          - depositAccount
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateDepositAccount_attributes'
      required:
      - attributes
      - type
      title: Update Deposit Account
      type: object
    UpdateCreditAccount:
      additionalProperties: false
      properties:
        type:
          default: creditAccount
          enum:
          - creditAccount
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateCreditAccount_attributes'
      required:
      - attributes
      - type
      title: Update Credit Account
      type: object
    UpdateAccountRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateAccountRequest_data'
      required:
      - data
      title: Update Account
      type: object
    Limits:
      properties:
        type:
          type: string
        id:
          type: string
        attributes:
          $ref: '#/components/schemas/Limits_attributes'
      type: object
    FreezeAccountRequest:
      properties:
        type:
          enum:
          - creditAccountFreeze
          - accountFreeze
          type: string
        attributes:
          $ref: '#/components/schemas/FreezeAccountRequest_attributes'
      type: object
    CloseAccountRequest:
      properties:
        type:
          enum:
          - creditAccountClose
          - depositAccountClose
          type: string
        attributes:
          $ref: '#/components/schemas/CloseAccountRequest_attributes'
      title: Close Account Request
      type: object
    Attributes:
      additionalProperties: false
      properties:
        date:
          format: date
          type: string
        balance:
          type: integer
        hold:
          type: integer
        available:
          type: integer
        overdraftLimit:
          type: integer
      required:
      - available
      - balance
      - date
      - hold
      type: object
    AccountRelationship:
      properties:
        account:
          $ref: '#/components/schemas/Account_Relationship'
      type: object
    AccountEndOfDayRelationships:
      allOf:
      - required:
        - account
        - customer
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/AccountRelationship'
    AccountEndOfDay:
      additionalProperties: false
      properties:
        type:
          enum:
          - accountEndOfDay
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Attributes'
        relationships:
          $ref: '#/components/schemas/AccountEndOfDayRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Account End Of Day Resource
      type: object
    UnitRepaymentInformationResponse:
      properties:
        data:
          $ref: '#/components/schemas/UnitRepaymentInformationResponse_data'
      title: Credit Account Repayment Information Response
      type: object
    UnitCustomerResponse:
      properties:
        data:
          $ref: '#/components/schemas/Customer'
      title: Unit Customer Response
      type: object
    UpdateIndividualCustomer:
      additionalProperties: false
      properties:
        type:
          default: individualCustomer
          enum:
          - individualCustomer
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateIndividualCustomer_attributes'
      title: Update Individual Customer
      type: object
    ResponseContact:
      allOf:
      - $ref: '#/components/schemas/Contact'
      required:
      - fullName
    UpdateBusinessCustomer:
      additionalProperties: false
      properties:
        type:
          default: businessCustomer
          enum:
          - businessCustomer
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessCustomer_attributes'
      title: Update Business Customer
      type: object
    UpdateCustomerRequest:
      properties:
        data:
          $ref: '#/components/schemas/UpdateCustomerRequest_data'
      title: Update Customer
      type: object
    ArchiveCustomerRequest:
      properties:
        data:
          $ref: '#/components/schemas/ArchiveCustomerRequest_data'
      required:
      - attributes
      - type
      title: Archive Customer Request
      type: object
    Payment:
      additionalProperties: false
      discriminator:
        mapping:
          achPayment: '#/components/schemas/AchPayment'
          bookPayment: '#/components/schemas/BookPayment'
          wirePayment: '#/components/schemas/WirePayment'
        propertyName: type
      properties:
        type:
          enum:
          - achPayment
          - bookPayment
          - wirePayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Payment Resource
      type: object
    PaymentCounterparty:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{1,17}$"
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
      required:
      - accountNumber
      - accountType
      - name
      - routingNumber
      title: Payment Counterparty
      type: object
    CounterpartyRelationship:
      properties:
        counterparty:
          $ref: '#/components/schemas/Counterparty_Relationship'
      type: object
    TransactionRelationship:
      properties:
        transaction:
          $ref: '#/components/schemas/Transaction_Relationship'
      type: object
    RecurringPaymentRelationship:
      properties:
        recurringPayment:
          $ref: '#/components/schemas/Recurring_Payment_Relationship'
      type: object
    AchPaymentRelationships:
      allOf:
      - additionalProperties: true
        required:
        - account
        - counterparty
        - transaction
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
      - $ref: '#/components/schemas/RecurringPaymentRelationship'
    AchPayment:
      allOf:
      - $ref: '#/components/schemas/Payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AchPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AchPaymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: ACH Payment
      type: object
    CounterpartyAccountRelationship:
      properties:
        counterpartyAccount:
          $ref: '#/components/schemas/Counterparty_Account_Relationship'
      type: object
    CounterpartyCustomerRelationship:
      properties:
        counterpartyCustomer:
          $ref: '#/components/schemas/Counterparty_Customer_Relationship'
      type: object
    BookPaymentRelationships:
      allOf:
      - additionalProperties: true
        required:
        - account
        - counterpartyAccount
        - counterpartyCustomer
        - transaction
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyCustomerRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
      - $ref: '#/components/schemas/RecurringPaymentRelationship'
    BookPayment:
      allOf:
      - $ref: '#/components/schemas/Payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BookPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/BookPaymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: Book Payment
      type: object
    WirePaymentCounterparty:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          maxLength: 17
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - accountNumber
      - address
      - name
      - routingNumber
      title: WireCounterparty
      type: object
    WirePaymentRelationships:
      allOf:
      - additionalProperties: true
        required:
        - account
        - transaction
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
    WirePayment:
      allOf:
      - $ref: '#/components/schemas/Payment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/WirePayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/WirePaymentRelationships'
        required:
        - attributes
        - id
        - relationships
        - type
        type: object
      title: Wire Payment
      type: object
    CreatePaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    CreateAchPaymentRelationships:
      allOf:
      - title: Create Ach Payment Relationships
      - $ref: '#/components/schemas/CreatePaymentRelationships'
    CreateAchPayment:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          enum:
          - achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPaymentRelationships'
      required:
      - attributes
      - relationships
      title: Create ACH Payment to inline Counterparty
      type: object
    CreatePaymentRelationshipsWithCounterparty:
      allOf:
      - additionalProperties: false
        required:
        - account
        - counterparty
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
    CreateAchPaymentCounterpartyRelationships:
      allOf:
      - title: Create Ach Payment Counterparty Relationships
      - $ref: '#/components/schemas/CreatePaymentRelationshipsWithCounterparty'
    CreateAchPaymentCounterparty:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          enum:
          - achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchPaymentCounterparty_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPaymentCounterpartyRelationships'
      required:
      - attributes
      - relationships
      title: Create ACH Payment to linked Counterparty
      type: object
    CreateAchPaymentPlaidRelationships:
      allOf:
      - title: Create Ach Payment Plaid Relationships
      - $ref: '#/components/schemas/CreatePaymentRelationships'
    CreateAchPaymentPlaid:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          enum:
          - achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchPaymentPlaid_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchPaymentPlaidRelationships'
      required:
      - attributes
      - relationships
      title: Create ACH Payment with Plaid token
      type: object
    CreatePaymentRelationshipsWithCounterpartyAccount:
      allOf:
      - additionalProperties: false
        required:
        - account
        - counterpartyAccount
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
    CreateBookPaymentRelationships:
      allOf:
      - title: Create Book Payment Relationships
      - $ref: '#/components/schemas/CreatePaymentRelationshipsWithCounterpartyAccount'
    CreateBookPayment:
      additionalProperties: false
      properties:
        type:
          default: bookPayment
          enum:
          - bookPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBookPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateBookPaymentRelationships'
      required:
      - attributes
      - relationships
      title: Create Book Payment
      type: object
    CreateWirePaymentRelationships:
      allOf:
      - title: Create Wire Payment Relationships
      - $ref: '#/components/schemas/CreatePaymentRelationships'
    CreateWirePayment:
      additionalProperties: false
      properties:
        type:
          default: wirePayment
          enum:
          - wirePayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateWirePayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateWirePaymentRelationships'
      required:
      - attributes
      - relationships
      title: Create Wire Payment
      type: object
    Astra:
      additionalProperties: false
      properties:
        authToken:
          minLength: 1
          type: string
        debitFeePercent:
          type: number
        institutionId:
          minLength: 1
          type: string
        destinationCardId:
          minLength: 1
          type: string
        routingNumber:
          minLength: 1
          type: string
        accountNumber:
          minLength: 1
          type: string
        accountName:
          minLength: 1
          type: string
        referenceId:
          maxLength: 80
          minLength: 1
          type: string
      required:
      - accountNumber
      - debitFeePercent
      - destinationCardId
      - institutionId
      - referenceId
      - routingNumber
      title: AstraPushToCardConfiguration
      type: object
    CreatePushToCardPaymentRelationships:
      allOf:
      - title: Create Push To Card Payment Relationships
      - $ref: '#/components/schemas/CreatePaymentRelationships'
    CreatePushToCardPayment:
      additionalProperties: false
      properties:
        type:
          default: pushToCardPayment
          enum:
          - pushToCardPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreatePushToCardPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreatePushToCardPaymentRelationships'
      required:
      - attributes
      - relationships
      title: Create Push To Card Payment
      type: object
    CreatePaymentRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreatePaymentRequest_data'
      type: object
    UnitPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/Payment'
      title: Unit Payment Response
      type: object
    UpdateAchPayment:
      additionalProperties: false
      properties:
        type:
          default: achPayment
          enum:
          - achPayment
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateAchPayment_attributes'
      required:
      - attributes
      - type
      title: Update ACH Payment
      type: object
    UpdateBookPayment:
      additionalProperties: false
      properties:
        type:
          default: bookPayment
          enum:
          - bookPayment
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateAchPayment_attributes'
      required:
      - attributes
      - type
      title: Update Book Payment
      type: object
    UpdatePaymentRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdatePaymentRequest_data'
      required:
      - data
      title: Update Payment
      type: object
    ReceivePaymentTransactionRelationship:
      properties:
        receivePaymentTransaction:
          $ref: '#/components/schemas/Receive_Payment_Transaction_Relationship'
      type: object
    PaymentAdvanceTransactionRelationship:
      properties:
        paymentAdvanceTransaction:
          $ref: '#/components/schemas/Payment_Advance_Transaction_Relationship'
      type: object
    RepayPaymentAdvanceTransactionRelationship:
      properties:
        repayPaymentAdvanceTransaction:
          $ref: '#/components/schemas/Repay_Payment_Advance_Transaction_Relationship'
      type: object
    ReceivedPaymentRelationships:
      allOf:
      - additionalProperties: true
        required:
        - account
        - customer
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/ReceivePaymentTransactionRelationship'
      - $ref: '#/components/schemas/PaymentAdvanceTransactionRelationship'
      - $ref: '#/components/schemas/RepayPaymentAdvanceTransactionRelationship'
    ReceivedPayment:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/ReceivedPayment_attributes'
        relationships:
          $ref: '#/components/schemas/ReceivedPaymentRelationships'
      title: Received Payment Resource
      type: object
    UpdateAchReceivedPayment:
      additionalProperties: false
      properties:
        type:
          default: achReceivedPayment
          enum:
          - achReceivedPayment
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateAchPayment_attributes'
      required:
      - attributes
      - type
      title: Update ACH Received Payment
      type: object
    UpdateReceivedPaymentRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateReceivedPaymentRequest_data'
      required:
      - data
      title: Update Received Payment
      type: object
    UnitReceivedPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/ReceivedPayment'
      title: Unit Received Payment Response
      type: object
    CounterpartyRelationships:
      allOf:
      - additionalProperties: false
        required:
        - customer
        title: Counterparty Relationships
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
    Counterparty:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Counterparty_attributes'
        relationships:
          $ref: '#/components/schemas/CounterpartyRelationships'
      title: Counterparty Document
      type: object
    CreateCounterpartyRelationships:
      allOf:
      - additionalProperties: false
        required:
        - customer
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
    CreateAchCounterparty:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchCounterparty_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCounterpartyRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Ach Counterparty
      type: object
    PlaidProcessorToken:
      maxLength: 60
      minLength: 40
      pattern: ^processor-.*$
      type: string
    CreatePlaidCounterparty:
      additionalProperties: false
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/CreatePlaidCounterparty_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCounterpartyRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Plaid Counterparty
      type: object
    CreateCounterpartyRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCounterpartyRequest_data'
      type: object
    UpdateCounterparty:
      additionalProperties: false
      properties:
        type:
          default: counterparty
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateCounterparty_attributes'
      required:
      - attributes
      - type
      title: Update Counterparty
      type: object
    UpdateCounterpartyRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateCounterpartyRequest_data'
      required:
      - data
      title: Update Counterparty
      type: object
    CounterpartyBalanceRelationships:
      allOf:
      - additionalProperties: false
        required:
        - counterparty
        - customer
        title: Counterparty Balance Relationships
        type: object
      - $ref: '#/components/schemas/CounterpartyRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
    CounterpartyBalance:
      additionalProperties: false
      properties:
        type:
          default: counterpartyBalance
          enum:
          - counterpartyBalance
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/CounterpartyBalance_attributes'
        relationships:
          $ref: '#/components/schemas/CounterpartyBalanceRelationships'
      required:
      - id
      - relationships
      - type
      title: Counterparty Balance
      type: object
    RecurringPayment:
      discriminator:
        mapping:
          recurringCreditAchPayment: '#/components/schemas/RecurringCreditAchPayment'
          recurringDebitAchPayment: '#/components/schemas/RecurringDebitAchPayment'
          recurringCreditBookPayment: '#/components/schemas/RecurringCreditBookPayment'
        propertyName: type
      properties:
        type:
          enum:
          - recurringCreditAchPayment
          - recurringDebitAchPayment
          - recurringCreditBookPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Recurring Payment Resource
      type: object
    ResponseSchedule:
      discriminator:
        mapping:
          Weekly: '#/components/schemas/ResponseWeeklySchedule'
          Monthly: '#/components/schemas/ResponseMonthlySchedule'
        propertyName: interval
      properties:
        interval:
          enum:
          - Weekly
          - Monthly
          type: string
      required:
      - interval
      type: object
    BaseWeeklySchedule:
      additionalProperties: false
      properties:
        startTime:
          format: date
          type: string
        endTime:
          format: date
          type: string
        dayOfMonth:
          maximum: 28
          minimum: -5
          type: integer
        nextScheduledAction:
          format: date
          type: string
        totalNumberOfPayments:
          minimum: 1
          type: integer
      required:
      - nextScheduledAction
      title: Weekly Schedule
      type: object
    ResponseWeeklySchedule:
      allOf:
      - $ref: '#/components/schemas/ResponseSchedule'
      - $ref: '#/components/schemas/BaseWeeklySchedule'
      title: Response Weekly Schedule
    BaseMonthlySchedule:
      additionalProperties: false
      properties:
        startTime:
          format: date
          type: string
        endTime:
          format: date
          type: string
        dayOfMonth:
          maximum: 28
          minimum: -5
          type: integer
        dayOfWeek:
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          type: string
        totalNumberOfPayments:
          minimum: 1
          type: integer
      type: object
    ResponseMonthlySchedule:
      allOf:
      - $ref: '#/components/schemas/ResponseSchedule'
      - $ref: '#/components/schemas/BaseMonthlySchedule'
      title: Response Monthly Schedule
    CreditAccountRelationship:
      properties:
        creditAccount:
          $ref: '#/components/schemas/Credit_Account_Relationship'
      type: object
    RecurringAchPaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - counterparty
        - creditAccount
        - customer
        - org
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
    RecurringCreditAchPayment:
      allOf:
      - $ref: '#/components/schemas/RecurringPayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringCreditAchPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringAchPaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Credit ACH Payment
      type: object
    RecurringDebitAchPayment:
      allOf:
      - $ref: '#/components/schemas/RecurringPayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringDebitAchPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringAchPaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Debit ACH Payment
      type: object
    RecurringBookPaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - counterparty
        - creditAccount
        - customer
        - org
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
    RecurringCreditBookPayment:
      allOf:
      - $ref: '#/components/schemas/RecurringPayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringCreditBookPayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringBookPaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Credit Book Payment
      type: object
    WeeklySchedule:
      allOf:
      - $ref: '#/components/schemas/BaseWeeklySchedule'
      - properties:
          interval:
            default: Weekly
            enum:
            - Weekly
            type: string
        required:
        - interval
        type: object
      title: Weekly Schedule
    MonthlySchedule:
      allOf:
      - $ref: '#/components/schemas/BaseMonthlySchedule'
      - properties:
          interval:
            default: Montly
            enum:
            - Montly
            type: string
        required:
        - interval
        type: object
      title: Monthly Schedule
    Schedule:
      discriminator:
        mapping:
          Weekly: '#/components/schemas/WeeklySchedule'
          Monthly: '#/components/schemas/MonthlySchedule'
        propertyName: interval
      oneOf:
      - $ref: '#/components/schemas/WeeklySchedule'
      - $ref: '#/components/schemas/MonthlySchedule'
      title: Schedule
    CreateRecurringCreditAchPayment:
      additionalProperties: false
      properties:
        type:
          default: recurringCreditAchPayment
          enum:
          - recurringCreditAchPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringCreditAchPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreatePaymentRelationshipsWithCounterparty'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Credit ACH Payment
      type: object
    CreateRecurringDebitAchPayment:
      additionalProperties: false
      properties:
        type:
          default: recurringDebitAchPayment
          enum:
          - recurringDebitAchPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringDebitAchPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreatePaymentRelationshipsWithCounterparty'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Debit ACH Payment
      type: object
    CreateRecurringCreditBookPayment:
      additionalProperties: false
      properties:
        type:
          default: recurringCreditBookPayment
          enum:
          - recurringCreditBookPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringCreditBookPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreatePaymentRelationshipsWithCounterparty'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Credit Book Payment
      type: object
    CreateRecurringPaymentRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateRecurringPaymentRequest_data'
      required:
      - data
      type: object
    UnitRecurringPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/RecurringPayment'
      title: Unit Recurring Payment Response
      type: object
    Card:
      discriminator:
        mapping:
          businessDebitCard: '#/components/schemas/BusinessDebitCard'
          individualDebitCard: '#/components/schemas/IndividualDebitCard'
          businessVirtualDebitCard: '#/components/schemas/BusinessVirtualDebitCard'
          individualVirtualDebitCard: '#/components/schemas/IndividualVirtualDebitCard'
          businessCreditCard: '#/components/schemas/BusinessCreditCard'
          businessVirtualCreditCard: '#/components/schemas/BusinessVirtualCreditCard'
        propertyName: type
      properties:
        type:
          enum:
          - businessDebitCard
          - individualDebitCard
          - businessVirtualDebitCard
          - individualVirtualDebitCard
          - businessCreditCard
          - businessVirtualCreditCard
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Card Document
      type: object
    PhysicalCardStatus:
      enum:
      - Active
      - Inactive
      - Stolen
      - Lost
      - Frozen
      - ClosedByCustomer
      - Unknown
      - SuspectedFraud
      - ActiveForOnlineUse
      type: string
    CardRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        title: Card Relationships
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
    BusinessDebitCard:
      allOf:
      - $ref: '#/components/schemas/Card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Debit Card
      type: object
    IndividualDebitCard:
      allOf:
      - $ref: '#/components/schemas/Card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Individual Debit Card
      type: object
    VirtualCardStatus:
      enum:
      - Active
      - Inactive
      - Stolen
      - Lost
      - Frozen
      - ClosedByCustomer
      - Unknown
      - SuspectedFraud
      type: string
    BusinessVirtualDebitCard:
      allOf:
      - $ref: '#/components/schemas/Card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessVirtualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Virtual Debit Card
      type: object
    IndividualVirtualDebitCard:
      allOf:
      - $ref: '#/components/schemas/Card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/IndividualVirtualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Individual Virtual Debit Card
      type: object
    BusinessCreditCard:
      allOf:
      - $ref: '#/components/schemas/Card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Credit Card
      type: object
    BusinessVirtualCreditCard:
      allOf:
      - $ref: '#/components/schemas/Card'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BusinessVirtualDebitCard_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Business Virtual Credit Card
      type: object
    CardLevelLimits:
      additionalProperties: false
      properties:
        dailyWithdrawal:
          type: integer
        dailyPurchase:
          type: integer
        monthlyWithdrawal:
          type: integer
        monthlyPurchase:
          type: integer
      type: object
    Bin:
      additionalProperties: false
      properties:
        bin:
          pattern: "^\\d{9}$"
          type: string
        institutionId:
          pattern: "^\\d{9}$"
          type: string
      required:
      - bin
      - institutionId
      type: object
    CreateCardRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        title: Create Card Relationships
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - properties:
          defaultFundingAccount:
            $ref: '#/components/schemas/Relationship'
        type: object
    CreateIndividualDebitCardRequest:
      additionalProperties: false
      properties:
        type:
          default: individualDebitCard
          enum:
          - individualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateIndividualDebitCardRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Individual Debit Card
      type: object
    CreateBusinessDebitCardRequest:
      additionalProperties: false
      properties:
        type:
          default: businessDebitCard
          enum:
          - businessDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessDebitCardRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Debit Card
      type: object
    CreateBusinessCreditCardRequest:
      additionalProperties: false
      properties:
        type:
          default: businessCreditCard
          enum:
          - businessCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessDebitCardRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Credit Card
      type: object
    CreateIndividualVirtualDebitCardRequest:
      additionalProperties: false
      properties:
        type:
          default: individualVirtualDebitCard
          enum:
          - individualVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateIndividualVirtualDebitCardRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Individual Virtual Debit Card
      type: object
    CreateBusinessVirtualDebitCardRequest:
      additionalProperties: false
      properties:
        type:
          default: businessVirtualDebitCard
          enum:
          - businessVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessVirtualDebitCardRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Virtual Debit Card
      type: object
    CreateBusinessVirtualCreditCardRequest:
      additionalProperties: false
      properties:
        type:
          default: businessVirtualCreditCard
          enum:
          - businessVirtualCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBusinessVirtualDebitCardRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCardRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Business Virtual Credit Card
      type: object
    CreateCardRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCardRequest_data'
      type: object
    UpdateIndividualDebitCard:
      additionalProperties: false
      properties:
        type:
          default: individualDebitCard
          enum:
          - individualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateIndividualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Update Individual Debit Card
      type: object
    UpdateIndividualVirtualDebitCard:
      additionalProperties: false
      properties:
        type:
          default: individualVirtualDebitCard
          enum:
          - individualVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateIndividualVirtualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Update Individual Virtual Debit Card
      type: object
    UpdateBusinessDebitCard:
      additionalProperties: false
      properties:
        type:
          default: businessDebitCard
          enum:
          - businessDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessDebitCard_attributes'
      required:
      - attributes
      - type
      title: Update Business Debit Card
      type: object
    UpdateBusinessVirtualDebitCard:
      additionalProperties: false
      properties:
        type:
          default: businessVirtualDebitCard
          enum:
          - businessVirtualDebitCard
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessVirtualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Update Business Virtual Debit Card
      type: object
    UpdateBusinessCreditCard:
      additionalProperties: false
      properties:
        type:
          default: businessCreditCard
          enum:
          - businessCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessDebitCard_attributes'
      required:
      - attributes
      - type
      title: Update Business Credit Card
      type: object
    UpdateBusinessVirtualCreditCard:
      additionalProperties: false
      properties:
        type:
          default: businessVirtualCreditCard
          enum:
          - businessVirtualCreditCard
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBusinessVirtualDebitCard_attributes'
      required:
      - attributes
      - type
      title: Update Business Virtual Credit Card
      type: object
    UpdateCardRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateCardRequest_data'
      required:
      - data
      title: Update Card
      type: object
    UnitPinStatusResponse:
      properties:
        type:
          default: pinStatus
          enum:
          - pinStatus
          type: string
        attributes:
          $ref: '#/components/schemas/UnitPinStatusResponse_attributes'
      title: Unit Pin Status Response
      type: object
    CardTotals:
      additionalProperties: false
      properties:
        withdrawals:
          type: integer
        deposits:
          type: integer
        purchases:
          type: integer
        cardTransactions:
          type: integer
      required:
      - cardTransactions
      - deposits
      - purchases
      - withdrawals
      type: object
    schemas-Limits:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/schemas_Limits_data'
      required:
      - data
      title: Card Level Limits
      type: object
    Merchant:
      additionalProperties: false
      properties:
        name:
          type: string
        type:
          type: integer
        category:
          type: string
        location:
          type: string
        id:
          type: string
      required:
      - category
      - name
      - type
      title: Merchant
      type: object
    CardVerificationData:
      additionalProperties: false
      properties:
        verificationMethod:
          type: string
      required:
      - verificationMethod
      title: Card Verification Data
      type: object
    CardRelationship:
      properties:
        card:
          $ref: '#/components/schemas/Card_Relationship'
      type: object
    AuthorizationRequestRelationship:
      properties:
        authorizationRequest:
          $ref: '#/components/schemas/Authorization_Request_Relationship'
      type: object
    AuthorizationRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - card
        title: Authorization Relationships
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CardRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/AuthorizationRequestRelationship'
    Authorization:
      additionalProperties: false
      properties:
        type:
          default: authorization
          enum:
          - authorization
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Authorization_attributes'
        relationships:
          $ref: '#/components/schemas/AuthorizationRelationships'
      required:
      - id
      - relationships
      - type
      title: Authorization Document
      type: object
    AuthorizationRequest:
      discriminator:
        mapping:
          purchaseAuthorizationRequest: '#/components/schemas/PurchaseAuthorization'
          cardTransactionAuthorizationRequest: '#/components/schemas/CardTransactionAuthorization'
          atmAuthorizationRequest: '#/components/schemas/AtmAuthorization'
        propertyName: type
      properties:
        type:
          enum:
          - purchaseAuthorizationRequest
          - cardTransactionAuthorizationRequest
          - atmAuthorizationRequest
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      title: Authorization Request Document
      type: object
    HealthcareAmounts:
      additionalProperties: false
      properties:
        transitAmount:
          type: integer
        prescriptionRXAmount:
          type: integer
        visionOpticalAmount:
          type: integer
        clinicOtherQualifiedMedicalAmount:
          type: integer
        dentalAmount:
          type: integer
        totalHealthcareAmount:
          type: integer
      required:
      - clinicOtherQualifiedMedicalAmount
      - dentalAmount
      - prescriptionRXAmount
      - totalHealthcareAmount
      - transitAmount
      - visionOpticalAmount
      title: Healthcare Amounts
      type: object
    FundingAccountRelationship:
      properties:
        fundingAccount:
          $ref: '#/components/schemas/Funding_Account_Relationship'
      type: object
    AuthorizationRequestRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - card
        - customer
        title: Authorization Request Relationships
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/FundingAccountRelationship'
      - $ref: '#/components/schemas/CardRelationship'
    PurchaseAuthorization:
      allOf:
      - $ref: '#/components/schemas/AuthorizationRequest'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/PurchaseAuthorization_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AuthorizationRequestRelationships'
        required:
        - relationships
        type: object
      title: Purchase Authorization Request Resource
      type: object
    CardTransactionAuthorization:
      allOf:
      - $ref: '#/components/schemas/AuthorizationRequest'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CardTransactionAuthorization_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AuthorizationRequestRelationships'
        required:
        - relationships
        type: object
      title: Card Transaction Authorization Request Resource
      type: object
    AtmAuthorization:
      allOf:
      - $ref: '#/components/schemas/AuthorizationRequest'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AtmAuthorization_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AuthorizationRequestRelationships'
        required:
        - relationships
        type: object
      title: Atm Authorization Request Resource
      type: object
    ApproveAuthorizationRequest:
      additionalProperties: false
      properties:
        type:
          default: approveAuthorizationRequest
          enum:
          - approveAuthorizationRequest
          type: string
        attributes:
          $ref: '#/components/schemas/ApproveAuthorizationRequest_attributes'
      required:
      - attributes
      - type
      title: Approve Authorization Request
      type: object
    DeclineAuthorizationRequest:
      additionalProperties: false
      properties:
        type:
          default: declineAuthorizationRequest
          enum:
          - declineAuthorizationRequest
          type: string
        attributes:
          $ref: '#/components/schemas/DeclineAuthorizationRequest_attributes'
      required:
      - attributes
      - type
      title: Decline Authorization Request
      type: object
    StatementRelationships:
      allOf:
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
    Statement:
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Statement_attributes'
        relationships:
          $ref: '#/components/schemas/StatementRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Statement
      type: object
    ReceivingAccountRelationship:
      properties:
        receivingAccount:
          $ref: '#/components/schemas/Receiving_Account_Relationship'
      type: object
    RewardedTransactionRelationship:
      properties:
        rewardedTransaction:
          $ref: '#/components/schemas/Rewarded_Transaction_Relationship'
      type: object
    RewardRelationships:
      allOf:
      - additionalProperties: false
        required:
        - customer
        - fundingAccount
        - receivingAccount
        type: object
      - $ref: '#/components/schemas/ReceivingAccountRelationship'
      - $ref: '#/components/schemas/FundingAccountRelationship'
      - $ref: '#/components/schemas/ReceivingAccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/RewardedTransactionRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
      - $ref: '#/components/schemas/CardRelationship'
    Reward:
      additionalProperties: false
      properties:
        type:
          default: reward
          enum:
          - reward
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Reward_attributes'
        relationships:
          $ref: '#/components/schemas/RewardRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Reward
      type: object
    CreateRewardRelationships:
      allOf:
      - additionalProperties: false
        required:
        - receivingAccount
        type: object
      - $ref: '#/components/schemas/FundingAccountRelationship'
      - $ref: '#/components/schemas/ReceivingAccountRelationship'
      - $ref: '#/components/schemas/RewardedTransactionRelationship'
    CreateRewardRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateRewardRequest_data'
      type: object
    Event:
      additionalProperties: false
      properties:
        type:
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          properties: {}
          type: object
        relationships:
          properties: {}
          title: Event Relationships
          type: object
      required:
      - id
      - type
      title: Event Resource
      type: object
    UnitEventResponse:
      properties:
        data:
          $ref: '#/components/schemas/Event'
      title: Unit Event Response
      type: object
    Institution:
      additionalProperties: false
      properties:
        type:
          default: institution
          enum:
          - institution
          type: string
        attributes:
          $ref: '#/components/schemas/Institution_attributes'
      required:
      - attributes
      - type
      title: Institution Resource
      type: object
    CreateFeeRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    CreateFeeRequest:
      additionalProperties: false
      properties:
        type:
          default: fee
          enum:
          - fee
          type: string
        attributes:
          $ref: '#/components/schemas/CreateFeeRequest_attributes'
        relationships:
          $ref: '#/components/schemas/CreateFeeRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    FeeRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        title: Fee Relationships
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    Fee:
      properties:
        type:
          default: fee
          enum:
          - fee
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Fee_attributes'
        relationships:
          $ref: '#/components/schemas/FeeRelationships'
      title: Fee
      type: object
    CheckDepositStatus:
      enum:
      - AwaitingImages
      - AwaitingFrontImage
      - AwaitingBackImage
      - AwaitingCustomerConfirmation
      - Pending
      - PendingReview
      - Rejected
      - Clearing
      - Sent
      - Canceled
      - Returned
      type: string
    StatusEvent:
      properties:
        updatedAt:
          type: string
        updatedBy:
          pattern: "^[1-9]\\d*$"
          type: string
        status:
          $ref: '#/components/schemas/StatusEvent_status'
      required:
      - status
      type: object
    CheckDepositCounterparty:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          maxLength: 17
          type: string
        name:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - accountNumber
      - name
      - routingNumber
      title: Check Deposit Counterparty
      type: object
    CheckDepositRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        title: Check Deposit Relationships
        type: object
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
    CheckDeposit:
      additionalProperties: false
      properties:
        type:
          default: checkDeposit
          enum:
          - checkDeposit
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/CheckDeposit_attributes'
        relationships:
          $ref: '#/components/schemas/CheckDepositRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Check Deposit
      type: object
    CreateCheckDepositRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    CreateCheckDepositRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCheckDepositRequest_data'
      type: object
    UpdateCheckDeposit:
      additionalProperties: false
      properties:
        type:
          default: checkDeposit
          enum:
          - checkDeposit
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateCheckDeposit_attributes'
      required:
      - attributes
      - type
      title: Update Check Deposit
      type: object
    UpdateCheckDepositRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateCheckDeposit'
      required:
      - data
      title: Update Check Deposit
      type: object
    ApiToken:
      properties:
        type:
          default: apiToken
          enum:
          - apiToken
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/ApiToken_attributes'
      title: Api Token
      type: object
    CreateApiTokenRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateApiTokenRequest_data'
      title: Create API Token
      type: object
    CreateCustomerTokenRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCustomerTokenRequest_data'
      type: object
    CustomerToken:
      additionalProperties: false
      properties:
        type:
          default: customerBearerToken
          enum:
          - customerBearerToken
          type: string
        attributes:
          $ref: '#/components/schemas/CustomerToken_attributes'
      required:
      - attributes
      - type
      title: Customer Token Resource
      type: object
    CreateCustomerTokenVerificationRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCustomerTokenVerificationRequest_data'
      type: object
    CustomerTokenVerification:
      additionalProperties: false
      properties:
        type:
          default: customerTokenVerification
          enum:
          - customerTokenVerification
          type: string
        attributes:
          $ref: '#/components/schemas/CustomerTokenVerification_attributes'
      required:
      - attributes
      - id
      - type
      title: Customer Token Verification
      type: object
    Webhook:
      additionalProperties: false
      properties:
        type:
          default: webhook
          enum:
          - webhook
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Webhook_attributes'
      required:
      - attributes
      - id
      - type
      title: Webhook
      type: object
    WebhookResponse:
      properties:
        data:
          $ref: '#/components/schemas/Webhook'
      title: Unit Webhook Response
      type: object
    UpdateWebhookRequest:
      properties:
        data:
          $ref: '#/components/schemas/UpdateWebhookRequest_data'
      type: object
    Coordinates:
      additionalProperties: false
      properties:
        longitude:
          type: number
        latitude:
          type: number
      required:
      - latitude
      - longitude
      type: object
    AtmLocation:
      additionalProperties: false
      properties:
        type:
          default: atmLocation
          enum:
          - atmLocation
          type: string
        attributes:
          $ref: '#/components/schemas/AtmLocation_attributes'
      required:
      - attributes
      - type
      title: Atm Location
      type: object
    Transaction:
      discriminator:
        mapping:
          originatedAchTransaction: '#/components/schemas/OriginatedAchTransaction'
          receivedAchTransaction: '#/components/schemas/ReceivedAchTransaction'
          returnedAchTransaction: '#/components/schemas/ReturnedAchTransaction'
          returnedReceivedAchTransaction: '#/components/schemas/ReturnedReceivedAchTransaction'
          dishonoredAchTransaction: '#/components/schemas/DishonoredAchTransaction'
          purchaseTransaction: '#/components/schemas/PurchaseTransaction'
          bookTransaction: '#/components/schemas/BookTransaction'
          atmTransaction: '#/components/schemas/AtmTransaction'
          feeTransaction: '#/components/schemas/FeeTransaction'
          cardTransaction: '#/components/schemas/CardTransaction'
          releaseTransaction: '#/components/schemas/ReleaseTransaction'
          wireTransaction: '#/components/schemas/WireTransaction'
          interestShareTransaction: '#/components/schemas/InterestShareTransaction'
          interestTransaction: '#/components/schemas/InterestTransaction'
          adjustmentTransaction: '#/components/schemas/AdjustmentTransaction'
          disputeTransaction: '#/components/schemas/DisputeTransaction'
          checkDepositTransaction: '#/components/schemas/CheckDepositTransaction'
          returnedCheckDepositTransaction: '#/components/schemas/ReturnedCheckDepositTransaction'
          sponsoredInterestTransaction: '#/components/schemas/SponsoredInterestTransaction'
          paymentAdvanceTransaction: '#/components/schemas/PaymentAdvanceTransaction'
          repaidPaymentAdvanceTransaction: '#/components/schemas/RepaidPaymentAdvanceTransaction'
          chargebackTransaction: '#/components/schemas/ChargebackTransaction'
          rewardTransaction: '#/components/schemas/RewardTransaction'
          negativeBalanceCoverageTransaction: '#/components/schemas/NegativeBalanceCoverageTransaction'
          accountLowBalanceClosureTransaction: '#/components/schemas/AccountLowBalanceClosureTransaction'
          bankRepaymentTransaction: '#/components/schemas/BankRepaymentTransaction'
          cashDepositTransaction: '#/components/schemas/CashDepositTransaction'
          customerRepaymentTransaction: '#/components/schemas/CustomerRepaymentTransaction'
          customerRepaymentReturnedTransaction: '#/components/schemas/CustomerRepaymentReturnedTransaction'
          checkPaymentTransaction: '#/components/schemas/CheckPaymentTransaction'
          returnedCheckPaymentTransaction: '#/components/schemas/ReturnedCheckPaymentTransaction'
          cardReversalTransaction: '#/components/schemas/CardReversalTransaction'
          feeReversalTransaction: '#/components/schemas/FeeReversalTransaction'
          pushToCardReversalTransaction: '#/components/schemas/PushToCardReversalTransaction'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - originatedAchTransaction
          - receivedAchTransaction
          - returnedAchTransaction
          - returnedReceivedAchTransaction
          - dishonoredAchTransaction
          - purchaseTransaction
          - bookTransaction
          - atmTransaction
          - feeTransaction
          - cardTransaction
          - releaseTransaction
          - wireTransaction
          - interestShareTransaction
          - interestTransaction
          - adjustmentTransaction
          - disputeTransaction
          - checkDepositTransaction
          - returnedCheckDepositTransaction
          - sponsoredInterestTransaction
          - paymentAdvanceTransaction
          - repaidPaymentAdvanceTransaction
          - chargebackTransaction
          - rewardTransaction
          - negativeBalanceCoverageTransaction
          - accountLowBalanceClosureTransaction
          - bankRepaymentTransaction
          - cashDepositTransaction
          - customerRepaymentTransaction
          - customerRepaymentReturnedTransaction
          - checkPaymentTransaction
          - returnedCheckPaymentTransaction
          - cardReversalTransaction
          - feeReversalTransaction
          - pushToCardReversalTransaction
          type: string
      title: Transaction Resource
      type: object
    DefaultTransactionRelationships:
      allOf:
      - required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
    PaymentRelationship:
      properties:
        payment:
          $ref: '#/components/schemas/Payment_Relationship'
      type: object
    OriginatedAchTransactionRelationships:
      allOf:
      - required:
        - account
        - payment
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/RecurringPaymentRelationship'
    OriginatedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/OriginatedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/OriginatedAchTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Originated ACH
      type: object
    ReceivedAchTransactionRelationships:
      allOf:
      - title: Received ACH Transaction Relationships
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
    ReceivedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReceivedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ReceivedAchTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Received ACH
      type: object
    ReturnedAchTransactionRelationships:
      allOf:
      - required:
        - account
        - payment
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/PaymentRelationship'
    ReturnedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ReturnedAchTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Returned ACH
      type: object
    ReturnedRelationship:
      properties:
        returned:
          $ref: '#/components/schemas/Returned_Transaction_Relationship'
      type: object
    ReturnedReceivedAchTransactionRelationships:
      allOf:
      - required:
        - account
        - returned
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/ReturnedRelationship'
    ReturnedReceivedAchTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedReceivedAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ReturnedReceivedAchTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Returned Received ACH
      type: object
    DishonoredAchTransactionRelationships:
      allOf:
      - title: Dishonored ACH Transaction Relationships
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
    DishonoredAchTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DishonoredAchTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/DishonoredAchTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Dishonored Return ACH
      type: object
    AuthorizationRelationship:
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization_Relationship'
      type: object
    PurchaseTransactionRelationships:
      allOf:
      - required:
        - account
        - authorization
        - card
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CardRelationship'
      - $ref: '#/components/schemas/AuthorizationRelationship'
      - $ref: '#/components/schemas/AuthorizationRequestRelationship'
    PurchaseTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/PurchaseTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/PurchaseTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Purchase
      type: object
    BookTransactionRelationships:
      allOf:
      - required:
        - account
        - counterpartyAccount
        - counterpartyCustomer
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyCustomerRelationship'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/RecurringPaymentRelationship'
    BookTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BookTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/BookTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Book
      type: object
    AtmTransactionRelationship:
      allOf:
      - required:
        - account
        - card
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CardRelationship'
    AtmTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AtmTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AtmTransactionRelationship'
        required:
        - attributes
        - relationships
        type: object
      title: ATM
      type: object
    RelatedTransactionRelationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Related Transaction Relationship
      type: object
    FeeTransactionRelationships:
      allOf:
      - required:
        - account
        - relatedTransaction
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/RelatedTransactionRelationship'
    FeeTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/FeeTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Fee
      type: object
    CardReversalTransactionRelationships:
      allOf:
      - required:
        - account
        - card
        - relatedTransaction
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CardRelationship'
      - $ref: '#/components/schemas/RelatedTransactionRelationship'
    CardTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CardTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardReversalTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Card Transaction
      type: object
    ReleaseTransactionRelationships:
      allOf:
      - required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    ReleaseTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReleaseTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ReleaseTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Release Transaction
      type: object
    WireTransactionRelationships:
      allOf:
      - title: Wire Transaction Relationships
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
    WireTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/WireTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/WireTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Wire Transaction
      type: object
    InterestShareTransactionRelationships:
      allOf:
      - required:
        - account
        - org
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/OrgRelationship'
    InterestShareTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/InterestShareTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Interest Share Transaction
      type: object
    InterestTransactionRelationships:
      allOf:
      - title: Interest Transaction Relationships
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
    InterestTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/InterestTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Interest Transaction
      type: object
    AdjustmentTransactionRelationships:
      allOf:
      - required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    AdjustmentTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AdjustmentTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AdjustmentTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Adjustment Transaction
      type: object
    DisputedTransactionRelationship:
      properties:
        disputedTransaction:
          $ref: '#/components/schemas/Disputed_Transaction_Relationship'
      type: object
    DisputeTransactionRelationships:
      allOf:
      - required:
        - account
        - disputedTransaction
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/DisputedTransactionRelationship'
    DisputeTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/DisputeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/DisputeTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Dispute Transaction
      type: object
    CheckDepositRelationship:
      properties:
        checkDeposit:
          $ref: '#/components/schemas/Check_Deposit_Relationship'
      type: object
    CheckDepositTransactionRelationships:
      allOf:
      - required:
        - account
        - checkDeposit
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CheckDepositRelationship'
    CheckDepositTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CheckDepositTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Check Deposit Transaction
      type: object
    ReturnedCheckDepositTransactionRelationships:
      allOf:
      - required:
        - account
        - checkDeposit
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CheckDepositRelationship'
    ReturnedCheckDepositTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedCheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ReturnedCheckDepositTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Returned Check Deposit Transaction
      type: object
    SponsoredInterestTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/SponsoredInterestTransaction'
        required:
        - attributes
        - relationships
        type: object
      title: Sponsored Interest Transaction
      type: object
    ReceivedPaymentRelationship:
      properties:
        receivedPayment:
          $ref: '#/components/schemas/Received_Payment_Relationship'
      type: object
    PaymentAdvanceTransactionRelationships:
      allOf:
      - required:
        - account
        - receivedPayment
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/ReceivedPaymentRelationship'
    PaymentAdvanceTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/PaymentAdvanceTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Payment Advance Transaction
      type: object
    RepaidPaymentAdvanceTransactionRelationships:
      allOf:
      - required:
        - account
        - paymentAdvanceTransaction
        - receivedPayment
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/ReceivedPaymentRelationship'
      - $ref: '#/components/schemas/PaymentAdvanceTransactionRelationship'
    RepaidPaymentAdvanceTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RepaidPaymentAdvanceTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Repaid Payment Advance Transaction
      type: object
    ChargebackRelationship:
      properties:
        chargeback:
          $ref: '#/components/schemas/Chargeback_Relationship'
      type: object
    ChargebackTransactionRelationships:
      allOf:
      - required:
        - account
        - chargeback
        - counterpartyAccount
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
      - $ref: '#/components/schemas/ChargebackRelationship'
    ChargebackTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ChargebackTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ChargebackTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Chargeback
      type: object
    RewardRelationship:
      properties:
        reward:
          $ref: '#/components/schemas/Reward_Relationship'
      type: object
    ReceiverAccountRelationship:
      properties:
        receiverAccount:
          $ref: '#/components/schemas/Receiver_Account_Relationship'
      type: object
    RewardTransactionRelationships:
      allOf:
      - required:
        - account
        - receiverAccount
        - reward
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/RewardRelationship'
      - $ref: '#/components/schemas/ReceiverAccountRelationship'
    RewardTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RewardTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RewardTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Reward
      type: object
    NegativeBalanceCoverageTransactionRelationships:
      allOf:
      - required:
        - account
        - receiverAccount
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/ReceiverAccountRelationship'
    NegativeBalanceCoverageTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/NegativeBalanceCoverageTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Negative Balance Coverage
      type: object
    AccountLowBalanceClosureTransactionRelationships:
      allOf:
      - required:
        - account
        - receiverAccount
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/ReceiverAccountRelationship'
    AccountLowBalanceClosureTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/AccountLowBalanceClosureTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AccountLowBalanceClosureTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Account Low Balance Closure
      type: object
    BankRepaymentTransactionRelationships:
      allOf:
      - required:
        - account
        - receivingAccount
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/ReceivingAccountRelationship'
    BankRepaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/BankRepaymentTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/BankRepaymentTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Bank Repayment Transaction
      type: object
    CashDepositTransactionRelationships:
      allOf:
      - title: Cash Deposit Transcation Relationships
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
    CashDepositTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CashDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CashDepositTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Cash Deposit Transaction
      type: object
    RepaymentRelationship:
      properties:
        repayment:
          $ref: '#/components/schemas/Repayment_Relationship'
      type: object
    CustomerRepaymentTransactionRelationships:
      allOf:
      - required:
        - account
        - repayment
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/RepaymentRelationship'
    CustomerRepaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CustomerRepaymentTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Customer Repayment Transaction
      type: object
    CustomerRepaymentReturnedTransactionRelationships:
      allOf:
      - required:
        - account
        - repayment
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/RepaymentRelationship'
    CustomerRepaymentReturnedTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CustomerRepaymentReturnedTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Customer Repayment Returned Transaction
      type: object
    CheckPaymentRelationship:
      properties:
        checkPayment:
          $ref: '#/components/schemas/Check_Payment_Relationship'
      type: object
    CheckPaymentTransactionRelationships:
      allOf:
      - required:
        - account
        - checkPayment
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CheckPaymentRelationship'
    CheckPaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CheckDepositTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CheckPaymentTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Check Payment Transaction
      type: object
    ReturnedCheckPaymentTransactionRelationships:
      allOf:
      - required:
        - account
        - checkPayment
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/CheckPaymentRelationship'
    ReturnedCheckPaymentTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/ReturnedCheckPaymentTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/ReturnedCheckPaymentTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Returned Check Payment Transaction
      type: object
    CardReversalTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/CardReversalTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CardReversalTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Card Reversal Transaction
      type: object
    FeeReversalTransactionRelationships:
      allOf:
      - required:
        - account
        - relatedTransaction
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/RelatedTransactionRelationship'
    FeeReversalTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/FeeReversalTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: FeeReversal
      type: object
    OriginalTransactionRelationship:
      properties:
        originalTransaction:
          $ref: '#/components/schemas/Original_Transaction_Relationship'
      type: object
    PushToCardReversalTransactionRelationships:
      allOf:
      - required:
        - account
        - org
        - originalTransaction
        type: object
      - $ref: '#/components/schemas/DefaultTransactionRelationships'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/OriginalTransactionRelationship'
    PushToCardReversalTransaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/FeeTransaction_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/PushToCardReversalTransactionRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Card Reversal Transaction
      type: object
    UpdateTransactionTags:
      additionalProperties: false
      properties:
        type:
          default: transaction
          enum:
          - transaction
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateTransactionTags_attributes'
      required:
      - attributes
      - type
      title: Update Transaction
      type: object
    UpdateTransactionRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    UpdateBookTransaction:
      additionalProperties: false
      properties:
        type:
          default: bookTransaction
          enum:
          - bookTransaction
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBookTransaction_attributes'
        relationships:
          $ref: '#/components/schemas/UpdateTransactionRelationships'
      required:
      - attributes
      - type
      title: Update Book Transaction
      type: object
    UpdateChargebackTransaction:
      additionalProperties: false
      properties:
        type:
          default: chargebackTransaction
          enum:
          - chargebackTransaction
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateBookTransaction_attributes'
        relationships:
          $ref: '#/components/schemas/UpdateTransactionRelationships'
      required:
      - attributes
      - type
      title: Update Chargeback Transaction
      type: object
    UpdateTransactionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateTransactionRequest_data'
      required:
      - data
      title: Update Transaction
      type: object
    Description:
      maxLength: 1024
      type: string
    DisputeRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - customer
        - transaction
        title: Dispute Relationships
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
    Dispute:
      additionalProperties: false
      properties:
        type:
          default: dispute
          enum:
          - dispute
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Dispute_attributes'
        relationships:
          $ref: '#/components/schemas/DisputeRelationships'
      required:
      - id
      - relationships
      - type
      title: Dispute Document
      type: object
    Repayment:
      discriminator:
        mapping:
          achRepayment: '#/components/schemas/AchRepayment'
          bookRepayment: '#/components/schemas/BookRepayment'
          capitalPartnerAchRepayment: '#/components/schemas/CapitalPartnerAchRepayment'
          capitalPartnerBookRepayment: '#/components/schemas/CapitalPartnerBookRepayment'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - achRepayment
          - bookRepayment
          - capitalPartnerAchRepayment
          - capitalPartnerBookRepayment
          type: string
      title: Repayment Resource
      type: object
    AchRepaymentStatus:
      enum:
      - Pending
      - PendingReview
      - Clearing
      - Returned
      - Sent
      - Rejected
      - Canceled
      type: string
    RecurringRepaymentRelationship:
      properties:
        recurringRepayment:
          $ref: '#/components/schemas/Recurring_Repayment_Relationship'
      type: object
    AchRepaymentRelationships:
      allOf:
      - required:
        - account
        - counterparty
        - creditAccount
        - org
        - payment
        - recurringPayment
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/RecurringRepaymentRelationship'
    AchRepayment:
      allOf:
      - $ref: '#/components/schemas/Repayment'
      - properties:
          attributes:
            $ref: '#/components/schemas/AchRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/AchRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
    BookRepaymentStatus:
      enum:
      - Sent
      - Rejected
      type: string
    BookRepaymentRelationships:
      allOf:
      - required:
        - account
        - counterpartyAccount
        - creditAccount
        - org
        - payment
        - recurringPayment
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/RecurringRepaymentRelationship'
    BookRepayment:
      allOf:
      - $ref: '#/components/schemas/Repayment'
      - properties:
          attributes:
            $ref: '#/components/schemas/BookRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/BookRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
    CapitalPartnerAchRepaymentRelationships:
      allOf:
      - required:
        - counterparty
        - creditAccount
        - org
        - payment
        - recurringPayment
        type: object
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/RecurringRepaymentRelationship'
    CapitalPartnerAchRepayment:
      allOf:
      - $ref: '#/components/schemas/Repayment'
      - properties:
          attributes:
            $ref: '#/components/schemas/AchRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CapitalPartnerAchRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
    CapitalPartnerBookRepaymentRelationships:
      allOf:
      - required:
        - counterpartyAccount
        - creditAccount
        - org
        - payment
        - recurringPayment
        type: object
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/OrgRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
      - $ref: '#/components/schemas/PaymentRelationship'
      - $ref: '#/components/schemas/RecurringRepaymentRelationship'
    CapitalPartnerBookRepayment:
      allOf:
      - $ref: '#/components/schemas/Repayment'
      - properties:
          attributes:
            $ref: '#/components/schemas/BookRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/CapitalPartnerBookRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
    CreateBookRepaymentRelationships:
      allOf:
      - required:
        - account
        - counterpartyAccount
        - creditAccount
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
    CreateBookRepayment:
      additionalProperties: false
      properties:
        type:
          default: bookRepayment
          enum:
          - bookRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBookRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateBookRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateCapitalPartnerBookRepaymentRelationships:
      allOf:
      - required:
        - counterpartyAccount
        - creditAccount
        type: object
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
    CreateCapitalPartnerBookRepayment:
      additionalProperties: false
      properties:
        type:
          default: capitalPartnerBookRepayment
          enum:
          - capitalPartnerBookRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateBookRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCapitalPartnerBookRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateAchRepaymentRelationships:
      allOf:
      - required:
        - account
        - counterparty
        - creditAccount
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
    CreateAchRepayment:
      additionalProperties: false
      properties:
        type:
          default: achRepayment
          enum:
          - achRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateCapitalPartnerAchRepaymentRelationships:
      allOf:
      - required:
        - counterparty
        - creditAccount
        type: object
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
    CreateCapitalPartnerAchRepayment:
      additionalProperties: false
      properties:
        type:
          default: capitalPartnerAchRepayment
          enum:
          - capitalPartnerAchRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCapitalPartnerAchRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateRepaymentRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateRepaymentRequest_data'
      required:
      - data
      type: object
    UnitRepaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/Repayment'
      title: Unit Repayment Response
      type: object
    RecurringRepayment:
      discriminator:
        mapping:
          RecurringAchRepayment: '#/components/schemas/RecurringAchRepayment'
          RecurringBookRepayment: '#/components/schemas/RecurringBookRepayment'
          RecurringCapitalPartnerAchRepayment: '#/components/schemas/RecurringCapitalPartnerAchRepayment'
          RecurringCapitalPartnerBookRepayment: '#/components/schemas/RecurringCapitalPartnerBookRepayment'
        propertyName: type
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - recurringAchRepayment
          - recurringBookRepayment
          - recurringCapitalPartnerAchRepayment
          - recurrinCapitalPartnerBookRepayment
          type: string
      title: Recurring Repayment
      type: object
    RecurringRepaymentStatus:
      enum:
      - Active
      - Disabled
      type: string
    RecurringRepaymentRelationshipsBase:
      additionalProperties: false
      properties:
        creditAccount:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_creditAccount'
        counterparty:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_counterparty'
        customer:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_customer'
        org:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_org'
      required:
      - counterparty
      - creditAccount
      - org
      type: object
    RecurringAchRepaymentRelationships:
      allOf:
      - $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase'
      - additionalProperties: false
        properties:
          account:
            $ref: '#/components/schemas/RecurringAchRepaymentRelationships_allOf_account'
        required:
        - account
        type: object
    RecurringAchRepayment:
      allOf:
      - $ref: '#/components/schemas/RecurringRepayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringAchRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringAchRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring ACH Repayment
    RecurringBookRepaymentRelationships:
      allOf:
      - $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase'
      - additionalProperties: false
        properties:
          account:
            $ref: '#/components/schemas/RecurringAchRepaymentRelationships_allOf_account'
        required:
        - account
        type: object
    RecurringBookRepayment:
      allOf:
      - $ref: '#/components/schemas/RecurringRepayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringBookRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringBookRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Book Repayment
    RecurringCapitalPartnerAchRepaymentRelationships:
      allOf:
      - $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase'
      - title: Recurring Capital Partner Ach Repayment Relationships
    RecurringCapitalPartnerAchRepayment:
      allOf:
      - $ref: '#/components/schemas/RecurringRepayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringCapitalPartnerAchRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringCapitalPartnerAchRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Capital Partner ACH Repayment
    RecurringCapitalPartnerBookRepaymentRelationships:
      allOf:
      - $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase'
      - title: Recurring Capital Partner Book Repayment Relationships
    RecurringCapitalPartnerBookRepayment:
      allOf:
      - $ref: '#/components/schemas/RecurringRepayment'
      - additionalProperties: false
        properties:
          attributes:
            $ref: '#/components/schemas/RecurringBookRepayment_allOf_attributes'
          relationships:
            $ref: '#/components/schemas/RecurringCapitalPartnerBookRepaymentRelationships'
        required:
        - attributes
        - relationships
        type: object
      title: Recurring Capital Partner Book Repayment
    CreateRecurringAchRepaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - counterparty
        - creditAccount
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
    CreateRecurringAchRepayment:
      additionalProperties: false
      properties:
        type:
          default: recurringAchRepayment
          enum:
          - recurringAchRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringAchRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateRecurringAchRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring ACH Repayment
      type: object
    CreateRecurringBookRepaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        - counterpartyAccount
        - creditAccount
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
    CreateRecurringBookRepayment:
      additionalProperties: false
      properties:
        type:
          default: recurringBookRepayment
          enum:
          - recurringBookRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringBookRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateRecurringBookRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Recurring Book Repayment
      type: object
    CreateRecurringCapitalPartnerAchRepaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - counterparty
        - creditAccount
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyRelationship'
    CreateRecurringCapitalPartnerAchRepayment:
      additionalProperties: false
      properties:
        type:
          default: recurringCapitalPartnerAchRepayment
          enum:
          - recurringCapitalPartnerAchRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringAchRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateRecurringCapitalPartnerAchRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateRecurringCapitalPartnerBookRepaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - counterpartyAccount
        - creditAccount
        type: object
      - $ref: '#/components/schemas/CreditAccountRelationship'
      - $ref: '#/components/schemas/CounterpartyAccountRelationship'
    CreateRecurringCapitalPartnerBookRepayment:
      additionalProperties: false
      properties:
        type:
          default: recurringCapitalPartnerBookRepayment
          enum:
          - recurringCapitalPartnerBookRepayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRecurringBookRepayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateRecurringCapitalPartnerBookRepaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateRecurringRepaymentRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateRecurringRepaymentRequest_data'
      type: object
    UnitRecurringRepaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/RecurringRepayment'
      title: UnitRepaymentResponse
      type: object
    CheckPaymentCounterparty:
      additionalProperties: false
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        counterpartyMoved:
          type: boolean
      title: Check Payment Counterparty
      type: object
    ReturnReason:
      enum:
      - InsufficientFunds
      - AccountClosed
      - AlteredCheck
      - ForgedSignature
      - PostdatedCheck
      - StopPaymentOrder
      - UnauthorizedDebit
      - WrongAmount
      - DuplicatePayment
      - MissingSignature
      - IrregularEndorsement
      - Other
      type: string
    CheckPaymentRelationships:
      allOf:
      - required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
      - $ref: '#/components/schemas/TransactionRelationship'
    CheckPayment:
      additionalProperties: false
      properties:
        type:
          default: checkPayment
          enum:
          - checkPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/CheckPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CheckPaymentRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Check Payment Resource
      type: object
    CreateCheckPaymentRelationships:
      allOf:
      - required:
        - account
        - customer
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
    CreateCheckPaymentRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateCheckPaymentRequest_data'
      required:
      - data
      type: object
    UnitCheckPaymentResponse:
      properties:
        data:
          $ref: '#/components/schemas/CheckPayment'
      title: Unit Check Payment Response
      type: object
    CheckStopPaymentStatus:
      enum:
      - Active
      - Disabled
      type: string
    CheckStopPaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
      - properties:
          stoppedPayments:
            $ref: '#/components/schemas/CheckStopPaymentRelationships_allOf_stoppedPayments'
        type: object
    CheckStopPayment:
      properties:
        attributes:
          $ref: '#/components/schemas/CheckStopPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CheckStopPaymentRelationships'
      title: Check Stop Payment
      type: object
    AchStopPaymentDisableReason:
      enum:
      - Expired
      - Requested
      - PaymentStopped
      type: string
    AchStopPaymentRelationships:
      allOf:
      - additionalProperties: false
        required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
    AchStopPayment:
      properties:
        attributes:
          $ref: '#/components/schemas/AchStopPayment_attributes'
        relationships:
          $ref: '#/components/schemas/AchStopPaymentRelationships'
      title: ACH Stop Payment
      type: object
    StopPayment:
      discriminator:
        mapping:
          checkStopPayment: '#/components/schemas/CheckStopPayment'
          achStopPayment: '#/components/schemas/AchStopPayment'
        propertyName: type
      example:
        id: id
        type: checkStopPayment
      properties:
        type:
          enum:
          - checkStopPayment
          - achStopPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      title: Stop Payment Resource
      type: object
    StopPaymentListResponse:
      example:
        data:
        - id: id
          type: checkStopPayment
        - id: id
          type: checkStopPayment
      properties:
        data:
          items:
            $ref: '#/components/schemas/StopPayment'
          type: array
      type: object
    CreateCheckStopPaymentRelationships:
      allOf:
      - required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
      example:
        account:
          data:
            id: id
            type: account
    CreateCheckStopPayment:
      additionalProperties: false
      example:
        relationships:
          account:
            data:
              id: id
              type: account
        attributes:
          amount: 1
          checkNumber: checkNumber
          idempotencyKey: idempotencyKey
          tags:
            key: tags
        type: checkStopPayment
      properties:
        type:
          default: checkStopPayment
          enum:
          - checkStopPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCheckStopPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCheckStopPaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create Check Stop Payment
      type: object
    CreateAchStopPaymentRelationships:
      allOf:
      - required:
        - account
        type: object
      - $ref: '#/components/schemas/AccountRelationship'
    CreateAchStopPayment:
      additionalProperties: false
      properties:
        type:
          default: achStopPayment
          enum:
          - achStopPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAchStopPayment_attributes'
        relationships:
          $ref: '#/components/schemas/CreateAchStopPaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      title: Create ACH Stop Payment
      type: object
    CreateStopPaymentRequest:
      additionalProperties: false
      example:
        data:
          relationships:
            account:
              data:
                id: id
                type: account
          attributes:
            amount: 1
            checkNumber: checkNumber
            idempotencyKey: idempotencyKey
            tags:
              key: tags
          type: checkStopPayment
      properties:
        data:
          $ref: '#/components/schemas/CreateStopPaymentRequest_data'
      required:
      - data
      type: object
    StopPaymentResponse:
      example:
        data:
          id: id
          type: checkStopPayment
      properties:
        data:
          $ref: '#/components/schemas/StopPayment'
      type: object
    UpdateAchStopPayment:
      additionalProperties: false
      example:
        expiration: 2000-01-23
        tags:
          key: tags
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        expiration:
          format: date
          type: string
      title: Update Ach Stop Payment
      type: object
    UpdateStopPaymentRequest:
      additionalProperties: false
      example:
        data:
          expiration: 2000-01-23
          tags:
            key: tags
      properties:
        data:
          $ref: '#/components/schemas/UpdateAchStopPayment'
      required:
      - data
      title: Update Stop Payment
      type: object
    Cancel_Application_Request_data_attributes:
      properties:
        reason:
          type: string
      type: object
    Cancel_Application_Request_data:
      properties:
        type:
          enum:
          - cancelApplication
          type: string
        attributes:
          $ref: '#/components/schemas/Cancel_Application_Request_data_attributes'
      type: object
    Cancel_Application_Request:
      properties:
        data:
          $ref: '#/components/schemas/Cancel_Application_Request_data'
      title: Cancel Application Request
      type: object
    Unit_Cancel_Application_Response:
      properties:
        data:
          $ref: '#/components/schemas/Application'
        included:
          items:
            $ref: '#/components/schemas/ApplicationDocument'
          type: array
      title: Unit Cancel Application Response
      type: object
    getApplicationsList_filter_parameter:
      properties:
        query:
          type: string
        status:
          items:
            enum:
            - AwaitingDocuments
            - PendingReview
            - Pending
            - Approved
            - Denied
            - Canceled
            type: string
          type: array
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_List_Applications_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Application'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit List Applications Response
      type: object
    Unit_Create_Application_Response:
      properties:
        data:
          $ref: '#/components/schemas/Application'
        included:
          items:
            $ref: '#/components/schemas/ApplicationDocument'
          type: array
      title: Unit Create Application Response
      type: object
    getApplicationForms_filter_parameter:
      properties:
        query:
          type: string
        status:
          items:
            enum:
            - Pending
            - Approved
            type: string
          type: array
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Application_Forms_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApplicationForm'
          type: array
      title: Unit Application Forms List Response
      type: object
    Unit_Application_Form_Response:
      properties:
        data:
          $ref: '#/components/schemas/ApplicationForm'
      title: Unit Application Form Response
      type: object
    Unit_List_Documents_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApplicationDocument'
          type: array
      title: Unit List Documents Response
      type: object
    Verify_Document:
      properties:
        jobId:
          type: string
      title: Verify Document
      type: object
    Unit_Application_Form_Response_With_Included:
      properties:
        data:
          $ref: '#/components/schemas/ApplicationForm'
        included:
          $ref: '#/components/schemas/Application'
      title: Unit Application Form Response With Included
      type: object
    getAccountsList_filter_parameter:
      properties:
        customerId:
          type: string
        status:
          items:
            enum:
            - Open
            - Frozen
            - Closed
            type: string
          type: array
        type:
          items:
            enum:
            - deposit
            - credit
            type: string
          type: array
        fromBalance:
          type: number
        toBalance:
          type: number
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Accounts_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        included:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Accounts List Response
      type: object
    Unit_Get_Account_Limits_Response:
      properties:
        data:
          $ref: '#/components/schemas/Limits'
      title: Unit Get Account Limits Response
      type: object
    Freeze_Account_Request:
      properties:
        data:
          $ref: '#/components/schemas/FreezeAccountRequest'
      title: Freeze Account Request
      type: object
    Close_Account_Request:
      properties:
        data:
          $ref: '#/components/schemas/CloseAccountRequest'
      title: Close Account Request
      type: object
    Unit_Get_Account_End_Of_Day_List_Response:
      properties:
        data:
          $ref: '#/components/schemas/AccountEndOfDay'
      title: Unit Get Account End Of Day List Response
      type: object
    getCustomersList_filter_parameter:
      properties:
        query:
          type: string
        status:
          items:
            enum:
            - Active
            - Archived
            type: string
          type: array
        email:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Customers_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Customers List Response
      type: object
    getPaymentsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        counterpartyAccountId:
          type: string
        status:
          items:
            enum:
            - Rejected
            - Pending
            - Canceled
            - Pending Review
            - Clearing
            - Sent
            - Returned
            type: string
          type: array
        type:
          items:
            enum:
            - AchPayment
            - BookPayment
            - WirePayment
            type: string
          type: array
        direction:
          items:
            enum:
            - Debit
            - Credit
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        recurringPaymentId:
          type: integer
        feature:
          items:
            enum:
            - SameDay
            - RecurringPayment
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Payments_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Payment'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Payments List Response
      type: object
    Unit_Payment_Response_With_Included:
      properties:
        data:
          $ref: '#/components/schemas/Payment'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: Unit Payment Response With Included
      type: object
    Unit_Received_Payment_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReceivedPayment'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Received Payment List Response
      type: object
    Unit_Received_Payment_Response_With_Included:
      properties:
        data:
          $ref: '#/components/schemas/ReceivedPayment'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: Unit Received Payment Response With Included
      type: object
    getCounterpartiesList_filter_parameter:
      properties:
        customerId:
          type: string
        accountNumber:
          type: string
        routingNumber:
          type: string
        permissions:
          items:
            enum:
            - CreditOnly
            - DebitOnly
            - CreditAndDebit
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Counterparties_List_Response:
      properties:
        data:
          $ref: '#/components/schemas/Counterparty'
      title: Unit Counterparties List Response
      type: object
    Unit_Counterparty_Response:
      properties:
        data:
          $ref: '#/components/schemas/Counterparty'
      title: Unit Counterparty Response
      type: object
    Unit_Counterparty_Response_1:
      properties:
        data:
          $ref: '#/components/schemas/CounterpartyBalance'
      title: Unit Counterparty Response
      type: object
    getRecurringPaymentsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            type: string
          type: array
        type:
          items:
            enum:
            - recurringCreditAchPayment
            - recurringDebitAchPayment
            - recurringCreditBookPayment
            type: string
          type: array
        fromStartTime:
          type: string
        toStartTime:
          type: string
        fromEndTime:
          type: string
        toEndTime:
          type: string
      type: object
    Unit_Recurring_Payment_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RecurringPayment'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Recurring Payment List Response
      type: object
    getCardsList_filter_parameter:
      properties:
        status:
          items:
            enum:
            - Inactive
            - Active
            - Stolen
            - Lost
            - Frozen
            - ClosedByCustomer
            - SuspectedFraud
            type: string
          type: array
        accountId:
          type: string
        customerId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Card_Response_Cards_List:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Card'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource'
          type: array
      title: Unit Card Response Cards List
      type: object
    Unit_Cards_List_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit Cards List Response
      type: object
    Unit_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource'
          type: array
      title: Unit Card Response
      type: object
    Unit_Update_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit Update Card Response
      type: object
    Unit_Report_Stolen_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit Report Stolen Card Response
      type: object
    Unit_Report_Lost_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit Report Lost Card Response
      type: object
    Unit_Close_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit Close Card Response
      type: object
    Unit__Freeze_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit  Freeze Card Response
      type: object
    Unit__Unfreeze_Card_Response:
      properties:
        data:
          $ref: '#/components/schemas/Card'
      title: Unit  Unfreeze Card Response
      type: object
    Unit_Card_Limits_Response:
      properties:
        data:
          $ref: '#/components/schemas/schemas-Limits'
      title: Unit Card Limits Response
      type: object
    getAuthorizationsList_filter_parameter:
      properties:
        accountId:
          type: string
        accountType:
          type: string
        customerId:
          type: string
        cardId:
          type: string
        includeNonAuthorized:
          type: boolean
        merchantCategoryCode:
          items:
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        status:
          items:
            enum:
            - Authorized
            - Completed
            - Canceled
            - Declined
            type: string
          type: array
      type: object
    Unit_List_Authorizations_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Authorization'
          type: array
      title: Unit List Authorizations Response
      type: object
    Unit_Authorization_Response:
      properties:
        data:
          $ref: '#/components/schemas/Authorization'
      title: Unit Authorization Response
      type: object
    getAuthorizationRequestsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        merchantCategoryCode:
          items:
            type: string
          type: array
        fromAmount:
          type: integer
        toAmount:
          type: integer
      type: object
    Unit_List_Authorization_Requests_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AuthorizationRequest'
          type: array
      title: Unit List Authorization Requests Response
      type: object
    Unit_Authorization_Requests_Response:
      properties:
        data:
          $ref: '#/components/schemas/AuthorizationRequest'
      title: Unit Authorization Requests Response
      type: object
    Approve_Authorization_Request:
      properties:
        data:
          $ref: '#/components/schemas/ApproveAuthorizationRequest'
      title: Approve Authorization Request
      type: object
    Unit_Authorization_Request_Response:
      properties:
        data:
          $ref: '#/components/schemas/AuthorizationRequest'
      title: Unit Authorization Request Response
      type: object
    Decline_Authorization_Request:
      properties:
        data:
          $ref: '#/components/schemas/DeclineAuthorizationRequest'
      title: Decline Authorization Request
      type: object
    getStatementsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        period:
          type: string
      type: object
    Unit_Statements_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
      title: Unit Statements Response
      type: object
    getListRewards_filter_parameter:
      properties:
        transactionId:
          type: string
        rewardedTransactionId:
          type: string
        receivingAccountId:
          type: string
        customerId:
          type: string
        cardId:
          type: string
        since:
          type: string
        until:
          type: string
        status:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Unit_Rewards_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Reward'
          type: array
      title: Unit Rewards List Response
      type: object
    Unit_Reward_Response:
      properties:
        data:
          $ref: '#/components/schemas/Reward'
      title: Unit Reward Response
      type: object
    getEventsList_filter_parameter:
      properties:
        since:
          type: string
        until:
          type: string
        type:
          items:
            type: string
          type: array
      type: object
    Unit_Event_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Event'
          type: array
      title: Unit Event List Response
      type: object
    Unit_Event_Response:
      properties:
        data:
          $ref: '#/components/schemas/Event'
      title: Unit Event Response
      type: object
    Unit_Institution_Response:
      properties:
        data:
          $ref: '#/components/schemas/Institution'
      title: Unit Institution Response
      type: object
    Unit_Fee_Response:
      properties:
        data:
          $ref: '#/components/schemas/Fee'
      title: Unit Fee Response
      type: object
    getCheckDepositsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        status:
          items:
            enum:
            - AwaitingImages
            - AwaitingFrontImage
            - AwaitingBackImage
            - Pending
            - PendingReview
            - Rejected
            - Clearing
            - Sent
            - Canceled
            - Returned
            - AwaitingCustomerConfirmation
            type: string
          type: array
      type: object
    Unit_List_Check_Deposits_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CheckDeposit'
          type: array
      title: Unit List Check Deposits Response
      type: object
    Unit_List_Check_Deposits_Response_1:
      properties:
        data:
          $ref: '#/components/schemas/CheckDeposit'
      title: Unit List Check Deposits Response
      type: object
    Unit_Check_Deposit_Response:
      properties:
        data:
          $ref: '#/components/schemas/CheckDeposit'
      title: Unit Check Deposit Response
      type: object
    Unit_Update_Check_Deposit_Response:
      properties:
        data:
          $ref: '#/components/schemas/CheckDeposit'
      title: Unit Update Check Deposit Response
      type: object
    Unit_Confirm_Check_Deposit_Response:
      properties:
        data:
          $ref: '#/components/schemas/CheckDeposit'
      title: Unit Confirm Check Deposit Response
      type: object
    Unit_Front_Check_Deposit_Response:
      properties:
        data:
          type: string
      title: Unit Front Check Deposit Response
      type: object
    Unit_Back_Check_Deposit_Response:
      properties:
        data:
          type: string
      title: Unit Back Check Deposit Response
      type: object
    Unit_Org_Api_Tokens_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApiToken'
          type: array
      title: Unit Org Api Tokens List Response
      type: object
    Unit_Api_Token_Response:
      properties:
        data:
          $ref: '#/components/schemas/ApiToken'
      title: Unit Api Token Response
      type: object
    Unit_Customer_Token_Response:
      properties:
        data:
          $ref: '#/components/schemas/CustomerToken'
      title: Unit Customer Token Response
      type: object
    Unit_Customer_Token_Verification_Response:
      properties:
        data:
          $ref: '#/components/schemas/CustomerTokenVerification'
      title: Unit Customer Token Verification Response
      type: object
    getWebhooksList_filter_parameter:
      properties:
        since:
          type: string
        until:
          type: string
        fromId:
          type: integer
        toId:
          type: integer
      type: object
    Unit_Webhooks_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      title: Unit Webhooks List Response
      type: object
    Create_Webhook_data_attributes:
      additionalProperties: false
      properties:
        label:
          type: string
        url:
          type: string
        token:
          type: string
        contentType:
          enum:
          - Json
          - JsonAPI
          type: string
        deliveryMode:
          type: string
        includeResources:
          type: boolean
        subscriptionType:
          enum:
          - All
          - OnlyAuthorizationRequest
          type: string
      required:
      - contentType
      - deliveryMode
      - label
      - token
      - url
      type: object
    Create_Webhook_data:
      properties:
        type:
          default: webhook
          type: string
        attributes:
          $ref: '#/components/schemas/Create_Webhook_data_attributes'
      type: object
    Create_Webhook:
      properties:
        data:
          $ref: '#/components/schemas/Create_Webhook_data'
      title: Create Webhook
      type: object
    getAtmLocationsList_filter_parameter:
      properties:
        coordinates:
          type: object
        searchRadius:
          type: integer
        postalCode:
          type: string
        address:
          type: object
      type: object
    Unit_Transaction_Response_With_Included_Resource:
      properties:
        data:
          $ref: '#/components/schemas/Transaction'
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
      title: Unit Transaction Response With Included Resource
      type: object
    Unit_Transaction_Response:
      properties:
        data:
          $ref: '#/components/schemas/Transaction'
      title: Unit Transaction Response
      type: object
    getTransactionsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        query:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        since:
          type: string
        until:
          type: string
        cardId:
          type: string
        excludeFees:
          type: boolean
        type:
          items:
            type: string
          type: array
        direction:
          items:
            enum:
            - Debit
            - Credit
            type: string
          type: array
        fromAmount:
          type: integer
        toAmount:
          type: integer
        accountType:
          type: string
      type: object
    Unit_Transactions_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        included:
          items:
            $ref: '#/components/schemas/IncludedResource_inner'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Transactions List Response
      type: object
    getDisputesList_filter_parameter:
      properties:
        query:
          type: string
      type: object
    Unit_Dispute_Response:
      properties:
        data:
          $ref: '#/components/schemas/Dispute'
      title: Unit Dispute Response
      type: object
    getRepaymentsList_filter_parameter:
      properties:
        accountId:
          type: string
        creditAccountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Pending
            - PendingReview
            - Returned
            - Sent
            - Rejected
            type: string
          type: array
        type:
          items:
            enum:
            - AchRepayment
            - BookRepayment
            type: string
          type: array
      type: object
    Unit_Repayments_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Repayment'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Repayments List Response
      type: object
    getRecurringRepaymentsList_filter_parameter:
      properties:
        creditAccountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Active
            - Disabled
            type: string
          type: array
        fromStartTime:
          format: date
          type: string
        toStartTime:
          format: date
          type: string
      type: object
    Unit_Recurring_Repayments_List_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RecurringRepayment'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      title: Unit Recurring Repayments List Response
      type: object
    getCheckPaymentsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - New
            - Pending
            - Canceled
            - Rejected
            - InDelivery
            - InProduction
            - Delivered
            - ReturnedToSender
            - Pending
            - Processed
            - PendingReview
            - MarkedForReturn
            - Returned
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        checkNumber:
          type: string
      type: object
    Unit_List_Check_Payments_Response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CheckPayment'
          type: array
      title: Unit List Check Payments Response
      type: object
    Approve_Check_Payment_Request_data:
      properties:
        type:
          default: additionalVerification
          enum:
          - additionalVerification
          type: string
      type: object
    Approve_Check_Payment_Request:
      properties:
        data:
          $ref: '#/components/schemas/Approve_Check_Payment_Request_data'
      title: Approve Check Payment Request
      type: object
    Return_Check_Payment_Request_data_attributes:
      properties:
        reason:
          $ref: '#/components/schemas/ReturnReason'
      type: object
    Return_Check_Payment_Request_data:
      properties:
        type:
          default: checkPaymentReturn
          enum:
          - checkPaymentReturn
          type: string
        attributes:
          $ref: '#/components/schemas/Return_Check_Payment_Request_data_attributes'
      type: object
    Return_Check_Payment_Request:
      properties:
        data:
          $ref: '#/components/schemas/Return_Check_Payment_Request_data'
      title: Return Check Payment Request
      type: object
    getStopPaymentsList_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Active
            - Disabled
            type: string
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        checkNumber:
          type: string
      type: object
    Customer_Relationship_data:
      properties:
        type:
          enum:
          - customer
          - businessCustomer
          - individualCustomer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Customer_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Customer_Relationship_data'
      required:
      - data
      title: Customer Relationship
      type: object
    Documents_Relationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: document
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    Documents_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Documents_Relationship_data_inner'
          type: array
      title: Documents Relationship
      type: object
    Trustees_Relationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: trustee
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    Trustees_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Trustees_Relationship_data_inner'
          type: array
      title: Trustees Relationship
      type: object
    Beneficiaries_Relationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: beneficiary
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    Beneficiaries_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Beneficiaries_Relationship_data_inner'
          type: array
      title: Beneficiaries Relationship
      type: object
    Beneficial_Owners_Relationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: beneficialOwner
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    Beneficial_Owners_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Beneficial_Owners_Relationship_data_inner'
          type: array
      title: Beneficial Owners Relationship
      type: object
    Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          type: string
      required:
      - id
      - type
      type: object
    IndividualApplication_allOf_attributes_evaluationScores:
      type: object
    IndividualApplication_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        message:
          type: string
        evaluationOutcome:
          type: string
        evaluationId:
          type: string
        evaluationEntityId:
          type: string
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        dba:
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        ip:
          type: string
        soleProprietorship:
          type: boolean
        decisionMethod:
          enum:
          - Manually
          - Automatically
          type: string
        decisionUserId:
          type: string
        decisionReason:
          type: string
        decisionDateTime:
          format: date-time
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        evaluationScores:
          type: object
        ipLocationDetails:
          type: object
        phoneLocationDetails:
          type: object
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        jwtSubject:
          nullable: true
          type: string
        archived:
          type: boolean
        powerOfAttorneyAgent:
          $ref: '#/components/schemas/PowerOfAttorneyAgent'
        industry:
          $ref: '#/components/schemas/Industry'
        idTheftScore:
          type: integer
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
        annualRevenue:
          $ref: '#/components/schemas/SoleProprietorshipAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/SoleProprietorshipNumberOfEmployees'
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
        website:
          type: string
      required:
      - createdAt
      - fullName
      - status
      type: object
    BusinessApplication_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        message:
          type: string
        evaluationOutcome:
          type: string
        evaluationId:
          type: string
        evaluationEntityId:
          type: string
        name:
          type: string
        dba:
          nullable: true
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        entityType:
          $ref: '#/components/schemas/EntityType'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          pattern: "^((A[LKSZR])|(C[AOT])|(D[EC])|(F[ML])|(G[AU])|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EHDAINSOT])|(N[EVHJMYCD])|(MP)|(O[HKR])|(P[WAR])|(RI)|(S[CD])|(T[NX])|(UT)|(V[TIA])|(W[AVIY]))$"
          type: string
        purpose:
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/Contact'
        officer:
          $ref: '#/components/schemas/Officer'
        ip:
          type: string
        website:
          type: string
        beneficialOwners:
          items:
            $ref: '#/components/schemas/BeneficialOwner'
          type: array
        decisionMethod:
          enum:
          - Manually
          - Automatically
          type: string
        decisionUserId:
          type: string
        decisionReason:
          type: string
        decisionDateTime:
          format: date-time
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        evaluationFlags:
          items:
            type: string
          type: array
        ipLocationDetails:
          type: object
        phoneLocationDetails:
          type: object
        archived:
          type: boolean
        industry:
          $ref: '#/components/schemas/Industry'
        annualRevenue:
          $ref: '#/components/schemas/BusinessAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/BusinessNumberOfEmployees'
        cashFlow:
          $ref: '#/components/schemas/CashFlow'
        yearOfIncorporation:
          pattern: "^\\d{4}$"
          type: string
        countriesOfOperation:
          items:
            $ref: '#/components/schemas/Country'
          minItems: 1
          type: array
        stockSymbol:
          type: string
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
      required:
      - beneficialOwners
      - contact
      - createdAt
      - entityType
      - name
      - officer
      - stateOfIncorporation
      - status
      type: object
    IncludedResource_inner:
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
        relationships:
          type: object
      type: object
    UpdateBusinessApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        annualRevenue:
          $ref: '#/components/schemas/BusinessAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/BusinessNumberOfEmployees'
        cashFlow:
          $ref: '#/components/schemas/CashFlow'
        yearOfIncorporation:
          pattern: "^\\d{4}$"
          type: string
        countriesOfOperation:
          items:
            $ref: '#/components/schemas/Country'
          minItems: 1
          type: array
        stockSymbol:
          type: string
        website:
          type: string
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
      type: object
    UpdateBusinessApplicationOfficer_attributes_officer:
      properties:
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      type: object
    UpdateBusinessApplicationOfficer_attributes:
      additionalProperties: false
      properties:
        officer:
          $ref: '#/components/schemas/UpdateBusinessApplicationOfficer_attributes_officer'
      type: object
    Application_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - businessApplication
          - individualApplication
          - application
          type: string
      required:
      - id
      - type
      type: object
    Application_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Application_Relationship_data'
      required:
      - data
      title: Application Relationship
      type: object
    UpdateBusinessApplicationBeneficialOwner_attributes:
      additionalProperties: false
      properties:
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
        relationships:
          $ref: '#/components/schemas/ApplicationRelationship'
      type: object
    UpdateSoleProprietorApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        annualRevenue:
          $ref: '#/components/schemas/SoleProprietorshipAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/SoleProprietorshipNumberOfEmployees'
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
        website:
          type: string
      type: object
    UpdateIndividualApplication_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      type: object
    UpdateApplicationRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateBusinessApplication'
      - $ref: '#/components/schemas/UpdateBusinessApplicationOfficer'
      - $ref: '#/components/schemas/UpdateBusinessApplicationBeneficialOwner'
      - $ref: '#/components/schemas/UpdateSoleProprietorApplication'
      - $ref: '#/components/schemas/UpdateIndividualApplication'
    ApplicationDocument_attributes:
      additionalProperties: false
      properties:
        documentType:
          type: string
        status:
          type: string
        description:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        matriculaConsular:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          type: string
        dateOfBirth:
          format: date
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        reasonCode:
          type: string
        reason:
          type: string
        evaluationId:
          type: string
        frontDocumentId:
          type: string
        backDocumentId:
          type: string
        frontDocumentStoreId:
          type: string
        backDocumentStoreId:
          type: string
      required:
      - status
      type: object
    UnitError_inner_source:
      properties:
        pointer:
          type: string
      type: object
    UnitError_inner:
      properties:
        status:
          type: string
        title:
          type: string
        code:
          type: string
        detail:
          type: string
        details:
          type: string
        source:
          $ref: '#/components/schemas/UnitError_inner_source'
        meta:
          type: object
      type: object
    PaginationMeta_pagination:
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      type: object
    CreateIndividualApplication_attributes:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          nullable: true
          pattern: "^\\d{9}|\\d{4}"
          type: string
        passport:
          nullable: true
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        ip:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/DeviceFingerprint'
          maxItems: 1
          type: array
        jwtSubject:
          nullable: true
          type: string
        powerOfAttorneyAgent:
          $ref: '#/components/schemas/CreatePowerOfAttorneyAgent'
        industry:
          $ref: '#/components/schemas/Industry'
        EvaluationParams:
          $ref: '#/components/schemas/EvaluationParams'
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateSoleProprietorApplication_attributes:
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          nullable: true
          pattern: "^\\d{9}|\\d{4}"
          type: string
        passport:
          nullable: true
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        dba:
          nullable: true
          type: string
        ein:
          nullable: true
          pattern: "^\\d{9}$"
          type: string
        ip:
          type: string
        soleProprietorship:
          default: false
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/DeviceFingerprint'
          maxItems: 1
          type: array
        jwtSubject:
          nullable: true
          type: string
        powerOfAttorneyAgent:
          $ref: '#/components/schemas/CreatePowerOfAttorneyAgent'
        industry:
          $ref: '#/components/schemas/Industry'
        EvaluationParams:
          $ref: '#/components/schemas/EvaluationParams'
        occupation:
          $ref: '#/components/schemas/Occupation'
        annualIncome:
          $ref: '#/components/schemas/AnnualIncome'
        sourceOfIncome:
          $ref: '#/components/schemas/SourceOfIncome'
        annualRevenue:
          $ref: '#/components/schemas/SoleProprietorshipAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/SoleProprietorshipNumberOfEmployees'
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
        website:
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateBusinessApplication_attributes:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        dba:
          maxLength: 255
          minLength: 1
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        entityType:
          $ref: '#/components/schemas/EntityType'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          maxLength: 2
          minLength: 2
          type: string
        purpose:
          maxLength: 1024
          minLength: 1
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/Contact'
        officer:
          $ref: '#/components/schemas/CreateOfficer'
        ip:
          type: string
        website:
          type: string
        beneficialOwners:
          items:
            $ref: '#/components/schemas/CreateBeneficialOwner'
          type: array
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        deviceFingerprints:
          items:
            $ref: '#/components/schemas/DeviceFingerprint'
          maxItems: 1
          type: array
        industry:
          $ref: '#/components/schemas/Industry'
        annualRevenue:
          $ref: '#/components/schemas/BusinessAnnualRevenue'
        numberOfEmployees:
          $ref: '#/components/schemas/BusinessNumberOfEmployees'
        cashFlow:
          $ref: '#/components/schemas/CashFlow'
        yearOfIncorporation:
          pattern: "^\\d{4}$"
          type: string
        countriesOfOperation:
          items:
            $ref: '#/components/schemas/Country'
          minItems: 1
          type: array
        stockSymbol:
          maxLength: 5
          minLength: 1
          type: string
        businessVertical:
          $ref: '#/components/schemas/BusinessVertical'
      required:
      - address
      - beneficialOwners
      - contact
      - ein
      - entityType
      - name
      - officer
      - phone
      - stateOfIncorporation
      type: object
    CreateApplicationRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateIndividualApplication'
      - $ref: '#/components/schemas/CreateSoleProprietorApplication'
      - $ref: '#/components/schemas/CreateBusinessApplication'
    ApplicationFormAdditionalDisclosures_inner:
      properties:
        title:
          type: string
        url:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
      type: object
    ApplicationForm_attributes:
      additionalProperties: false
      properties:
        email:
          format: email
          type: string
        url:
          type: string
        stage:
          enum:
          - ChooseBusinessOrIndividual
          - EnterIndividualInformation
          - IndividualPhoneVerification
          - IndividualApplicationCreated
          - EnterBusinessInformation
          - EnterBusinessAdditionalInformation
          - EnterOfficerInformation
          - BusinessPhoneVerification
          - EnterBeneficialOwnersInformation
          - businessApplicationCreated
          - EnterSoleProprietorshipInformation
          - EnterSoleProprietorshipBusinessInformation
          - SoleProprietorshipPhoneVerification
          - SoleProprietorshipApplicationCreated
          type: string
        applicantDetails:
          $ref: '#/components/schemas/ApplicationFormPrefill'
        settingsOverride:
          $ref: '#/components/schemas/ApplicationFormSettingsOverride'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        allowedApplicationTypes:
          items:
            enum:
            - Individual
            - Business
            - SoleProprietorship
            type: string
          type: array
      required:
      - url
      type: object
    CreateApplicationFormRequest_data_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        applicantDetails:
          $ref: '#/components/schemas/ApplicationFormPrefill'
        settingsOverride:
          $ref: '#/components/schemas/ApplicationFormSettingsOverride'
        requireIdVerification:
          $ref: '#/components/schemas/RequireIdVerification'
        allowedApplicationTypes:
          items:
            enum:
            - Individual
            - Business
            - SoleProprietorship
            type: string
          type: array
        lang:
          enum:
          - en
          - es
          type: string
        hideApplicationProgressTracker:
          type: boolean
      type: object
    CreateApplicationFormRequest_data_relationships:
      allOf:
      - additionalProperties: false
        required:
        - application
        title: Create Application Form Relationships
        type: object
      - $ref: '#/components/schemas/ApplicationRelationship'
    CreateApplicationFormRequest_data:
      additionalProperties: false
      properties:
        type:
          default: applicationForm
          enum:
          - applicationForm
          type: string
        attributes:
          $ref: '#/components/schemas/CreateApplicationFormRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateApplicationFormRequest_data_relationships'
      required:
      - type
      type: object
    DepositAccount_allOf_attributes_secondaryAccountNumber:
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{10,12}$"
          type: string
      required:
      - accountNumber
      - routingNumber
      type: object
    DepositAccount_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        depositProduct:
          type: string
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{10,12}$"
          type: string
        secondaryAccountNumber:
          $ref: '#/components/schemas/DepositAccount_allOf_attributes_secondaryAccountNumber'
        currency:
          default: USD
          type: string
        balance:
          type: integer
        overdraftLimit:
          minimum: 0
          type: integer
        hold:
          type: integer
        available:
          type: integer
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        status:
          enum:
          - Open
          - Closed
          - Frozen
          type: string
        closeReason:
          enum:
          - ByCustomer
          - Fraud
          - NegativeBalance
          - ByBank
          - BreachOfTermsAndConditions
          - NoAccountActivity
          - ProgramChange
          type: string
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          type: string
        closeReasonText:
          maxLength: 255
          type: string
        freezeReason:
          type: string
        maskedAccountNumber:
          pattern: "^\\*{6,8}\\d{4}$"
          type: string
        isOverdrawnWithinLimit:
          type: boolean
        dacaStatus:
          enum:
          - Activated
          - Entered
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - available
      - balance
      - createdAt
      - currency
      - depositProduct
      - hold
      - name
      - routingNumber
      - status
      - tags
      type: object
    DepositAccount_allOf_relationships:
      allOf:
      - additionalProperties: true
        title: Deposit Account Relationships
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
    CreditAccount_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        creditTerms:
          type: string
        currency:
          default: USD
          type: string
        balance:
          type: integer
        hold:
          type: integer
        available:
          type: integer
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        status:
          enum:
          - Open
          - Closed
          - Frozen
          type: string
        closeReason:
          enum:
          - ByCustomer
          - Fraud
          - Overdue
          - NegativeBalance
          - ByBank
          - BreachOfTermsAndConditions
          - NoAccountActivity
          - ProgramChange
          type: string
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          type: string
        closeReasonText:
          maxLength: 255
          type: string
        freezeReason:
          type: string
        creditLimit:
          minimum: 0
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
      - available
      - balance
      - createdAt
      - creditLimit
      - creditTerms
      - currency
      - hold
      - name
      - status
      - tags
      type: object
    CreditAccount_allOf_relationships:
      allOf:
      - additionalProperties: true
        required:
        - customer
        title: Credit Account Relationships
        type: object
      - $ref: '#/components/schemas/CustomerRelationship'
    Org_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: org
          type: string
      required:
      - id
      - type
      type: object
    Org_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Org_Relationship_data'
      required:
      - data
      title: Org Relationship
      type: object
    IndividualCustomer_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        fullName:
          $ref: '#/components/schemas/FullName'
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        matriculaConsular:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          format: date
          type: string
        ein:
          type: string
        dba:
          type: string
        soleProprietorship:
          default: false
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        maskedSSN:
          pattern: "^\\*{5}\\d{4}$"
          type: string
        maskedPassport:
          type: string
        maskedMatriculaConsular:
          type: string
        authorizedUsers:
          items:
            $ref: '#/components/schemas/AuthorizedUser'
          type: array
        jwtSubject:
          nullable: true
          type: string
        status:
          enum:
          - Active
          - Archived
          type: string
        archiveReason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      required:
      - createdAt
      - fullName
      - status
      type: object
    BusinessCustomer_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        dba:
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        entityType:
          $ref: '#/components/schemas/EntityType'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          type: string
        purpose:
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/Contact'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        riskRate:
          enum:
          - low
          - medium
          - high
          type: string
        authorizedUsers:
          items:
            $ref: '#/components/schemas/AuthorizedUser'
          type: array
        status:
          enum:
          - Active
          - Archived
          type: string
        archiveReason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      required:
      - contact
      - entityType
      - name
      - stateOfIncorporation
      - status
      type: object
    CreateCreditAccount_attributes:
      additionalProperties: false
      properties:
        creditTerms:
          type: string
        creditLimit:
          type: integer
        tags:
          nullable: true
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - creditLimit
      - creditTerms
      type: object
    Customers_Relationship_data_inner:
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: customer
          type: string
      type: object
    Customers_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customers_Relationship_data_inner'
          type: array
      required:
      - data
      title: Customers Relationship
      type: object
    CreateDepositAccount_attributes:
      additionalProperties: false
      properties:
        depositProduct:
          type: string
        tags:
          nullable: true
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - depositProduct
      type: object
    CreateDepositAccount_relationships:
      allOf:
      - $ref: '#/components/schemas/CustomerRelationship'
      - $ref: '#/components/schemas/CustomersRelationship'
    CreateAccountRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateCreditAccount'
      - $ref: '#/components/schemas/CreateDepositAccount'
    UpdateDepositAccount_attributes:
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        depositProduct:
          type: string
      type: object
    UpdateCreditAccount_attributes:
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        creditLimit:
          type: integer
      type: object
    UpdateAccountRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateDepositAccount'
      - $ref: '#/components/schemas/UpdateCreditAccount'
    Limits_attributes_card_limits:
      properties:
        dailyWithdrawal:
          type: number
        dailyDeposit:
          type: number
        dailyPurchase:
          type: number
        dailyCardTransaction:
          type: number
      type: object
    Limits_attributes_card_totalsDaily:
      properties:
        withdrawal:
          type: number
        deposit:
          type: number
        purchase:
          type: number
        cardTransaction:
          type: number
      type: object
    Limits_attributes_card:
      properties:
        limits:
          $ref: '#/components/schemas/Limits_attributes_card_limits'
        totalsDaily:
          $ref: '#/components/schemas/Limits_attributes_card_totalsDaily'
      type: object
    Limits_attributes:
      properties:
        card:
          $ref: '#/components/schemas/Limits_attributes_card'
      type: object
    FreezeAccountRequest_attributes:
      properties:
        reason:
          enum:
          - Fraud
          - Other
          type: string
        reasonText:
          nullable: true
          type: string
      type: object
    CloseAccountRequest_attributes:
      properties:
        reason:
          default: ByCustomer
          enum:
          - ByCustomer
          - Fraud
          type: string
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          nullable: true
          type: string
      type: object
    Account_Relationship_data:
      additionalProperties: false
      example:
        id: id
        type: account
      properties:
        type:
          enum:
          - account
          - depositAccount
          - creditAccount
          - batchAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Account_Relationship:
      additionalProperties: false
      example:
        data:
          id: id
          type: account
      properties:
        data:
          $ref: '#/components/schemas/Account_Relationship_data'
      required:
      - data
      title: Account Relationship
      type: object
    UnitRepaymentInformationResponse_data_attributes:
      additionalProperties: false
      properties:
        remainingAmountDue:
          type: integer
        remainingAmountOverdue:
          type: integer
        initiatedRepayments:
          type: integer
        statementPeriodStart:
          format: date
          type: string
        statementPeriodEnd:
          format: date
          type: string
        nextRepaymentDueDate:
          format: date
          type: string
      required:
      - initiatedRepayments
      - nextRepaymentDueDate
      - remainingAmountDue
      - remainingAmountOverdue
      - statementPeriodEnd
      - statementPeriodStart
      type: object
    UnitRepaymentInformationResponse_data:
      additionalProperties: false
      properties:
        type:
          default: creditAccountRepaymentInformation
          enum:
          - creditAccountRepaymentInformation
          type: string
        attributes:
          $ref: '#/components/schemas/UnitRepaymentInformationResponse_data_attributes'
      required:
      - attributes
      - type
      type: object
    UpdateIndividualCustomer_attributes:
      additionalProperties: false
      properties:
        email:
          format: email
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
        dba:
          nullable: true
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        authorizedUsers:
          items:
            $ref: '#/components/schemas/AuthorizedUser'
          nullable: true
          type: array
        jwtSubject:
          nullable: true
          type: string
      type: object
    UpdateBusinessCustomer_attributes:
      additionalProperties: false
      properties:
        dba:
          nullable: true
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        address:
          $ref: '#/components/schemas/Address'
        contact:
          $ref: '#/components/schemas/ResponseContact'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        authorizedUsers:
          items:
            $ref: '#/components/schemas/AuthorizedUser'
          nullable: true
          type: array
      type: object
    UpdateCustomerRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateIndividualCustomer'
      - $ref: '#/components/schemas/UpdateBusinessCustomer'
    ArchiveCustomerRequest_data_attributes:
      properties:
        reason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      type: object
    ArchiveCustomerRequest_data:
      properties:
        type:
          default: archiveCustomer
          enum:
          - archiveCustomer
          type: string
        attributes:
          $ref: '#/components/schemas/ArchiveCustomerRequest_data_attributes'
      type: object
    Counterparty_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: counterparty
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Counterparty_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Counterparty_Relationship_data'
      required:
      - data
      title: Counterparty Relationship
      type: object
    Transaction_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: transaction
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Transaction Relationship
      type: object
    Recurring_Payment_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: recurringPayment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Recurring_Payment_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Recurring_Payment_Relationship_data'
      required:
      - data
      title: Recurring Payment Relationship
      type: object
    AchPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        description:
          maxLength: 50
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        settlementDate:
          format: date
          type: string
        reason:
          type: string
        expectedCompletionDate:
          format: date
          type: string
        secCode:
          type: string
        traceNumber:
          type: string
        sameDay:
          type: boolean
        counterpartyVerificationMethod:
          type: string
        clearingDaysOverride:
          type: integer
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
    Counterparty_Account_Relationship_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - account
          - depositAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Counterparty_Account_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Counterparty_Account_Relationship_data'
      required:
      - data
      title: Counterparty Account Relationship
      type: object
    Counterparty_Customer_Relationship_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - customer
          - businessCustomer
          - individualCustomer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Counterparty_Customer_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Counterparty_Customer_Relationship_data'
      required:
      - data
      title: Counterparty Customer Relationship
      type: object
    BookPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        description:
          maxLength: 80
          minLength: 1
          type: string
        status:
          enum:
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        transactionSummaryOverride:
          type: string
        reason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
    WirePayment_allOf_attributes_imadOmad:
      properties:
        imad:
          type: string
        omad:
          type: string
      type: object
    WirePayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        direction:
          enum:
          - Credit
          type: string
        description:
          maxLength: 50
          minLength: 1
          type: string
        counterparty:
          $ref: '#/components/schemas/WirePaymentCounterparty'
        status:
          enum:
          - Pending
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        settlementDate:
          format: date
          type: string
        reason:
          type: string
        imadOmad:
          $ref: '#/components/schemas/WirePayment_allOf_attributes_imadOmad'
      required:
      - amount
      - createdAt
      - description
      - direction
      - status
      type: object
    CreateAchPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        addenda:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        sameDay:
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        secCode:
          enum:
          - WEB
          - CCD
          - PPD
          type: string
      required:
      - amount
      - counterparty
      - description
      - direction
      type: object
    CreateAchPaymentCounterparty_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        addenda:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        sameDay:
          type: boolean
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        verifyCounterpartyBalance:
          default: false
          type: boolean
        secCode:
          enum:
          - WEB
          - CCD
          - PPD
          type: string
      required:
      - amount
      - description
      - direction
      type: object
    CreateAchPaymentPlaid_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        addenda:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        plaidProcessorToken:
          pattern: ^processor-.*$
          type: string
        counterpartyName:
          type: string
        sameDay:
          type: boolean
        verifyCounterpartyBalance:
          default: false
          type: boolean
        secCode:
          enum:
          - WEB
          - CCD
          - PPD
          type: string
      required:
      - amount
      - description
      - direction
      - plaidProcessorToken
      type: object
    CreateBookPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        description:
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        transactionSummaryOverride:
          type: string
      required:
      - amount
      - description
      type: object
    CreateWirePayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        direction:
          enum:
          - Credit
          type: string
        description:
          type: string
        counterparty:
          $ref: '#/components/schemas/WirePaymentCounterparty'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - counterparty
      - description
      type: object
    CreatePushToCardPayment_attributes_configuration:
      properties:
        astra:
          $ref: '#/components/schemas/Astra'
      type: object
    CreatePushToCardPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          type: integer
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        description:
          type: string
        configuration:
          $ref: '#/components/schemas/CreatePushToCardPayment_attributes_configuration'
      required:
      - amount
      - configuration
      - description
      type: object
    CreatePaymentRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateAchPayment'
      - $ref: '#/components/schemas/CreateAchPaymentCounterparty'
      - $ref: '#/components/schemas/CreateAchPaymentPlaid'
      - $ref: '#/components/schemas/CreateBookPayment'
      - $ref: '#/components/schemas/CreateWirePayment'
      - $ref: '#/components/schemas/CreatePushToCardPayment'
    UpdateAchPayment_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      type: object
    UpdatePaymentRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateAchPayment'
      - $ref: '#/components/schemas/UpdateBookPayment'
    Receive_Payment_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Receive Payment Transaction Relationship
      type: object
    Payment_Advance_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Payment Advance Transaction Relationship
      type: object
    Repay_Payment_Advance_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Repay Payment Advance Transaction Relationship
      type: object
    ReceivedPayment_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        status:
          enum:
          - Pending
          - Advanced
          - Completed
          - Returned
          type: string
        amount:
          minimum: 1
          type: integer
        completionDate:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        wasAdvanced:
          type: boolean
        isAdvanceable:
          type: boolean
        isAdvaceable:
          type: boolean
        companyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        description:
          type: string
        addenda:
          type: string
        traceNumber:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        returnReason:
          type: string
        receivingEntityName:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - companyName
      - completionDate
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - secCode
      - status
      - traceNumber
      - wasAdvanced
      type: object
    UpdateReceivedPaymentRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateAchReceivedPayment'
    Counterparty_attributes:
      additionalProperties: false
      properties:
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{1,17}$"
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        bank:
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        createdAt:
          format: date-time
          type: string
      required:
      - accountNumber
      - accountType
      - createdAt
      - name
      - permissions
      - routingNumber
      - type
      type: object
    CreateAchCounterparty_attributes:
      additionalProperties: false
      properties:
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - accountNumber
      - accountType
      - name
      - routingNumber
      - type
      type: object
    CreatePlaidCounterparty_attributes:
      additionalProperties: false
      properties:
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          type: string
        verifyName:
          default: false
          type: boolean
        plaidProcessorToken:
          maxLength: 60
          minLength: 40
          pattern: ^processor-.*$
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - plaidProcessorToken
      - type
      type: object
    CreateCounterpartyRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateAchCounterparty'
      - $ref: '#/components/schemas/CreatePlaidCounterparty'
    UpdateCounterparty_attributes:
      additionalProperties: false
      properties:
        plaidProcessorToken:
          maxLength: 60
          minLength: 40
          pattern: ^processor-.*$
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        verifyName:
          default: false
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      type: object
    UpdateCounterpartyRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateCounterparty'
    CounterpartyBalance_attributes:
      additionalProperties: false
      properties:
        balance:
          type: number
        available:
          type: number
      required:
      - balance
      type: object
    Credit_Account_Relationship_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - creditAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Credit_Account_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Credit_Account_Relationship_data'
      required:
      - data
      title: Credit Account Relationship
      type: object
    RecurringCreditAchPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - Active
          - Completed
          - Disabled
          type: string
        schedule:
          $ref: '#/components/schemas/ResponseSchedule'
        numberOfPayments:
          type: integer
      required:
      - amount
      - createdAt
      - description
      - numberOfPayments
      - schedule
      - status
      type: object
    RecurringDebitAchPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        status:
          enum:
          - Pending
          - Active
          - Completed
          - Disabled
          type: string
        schedule:
          $ref: '#/components/schemas/ResponseSchedule'
        numberOfPayments:
          type: integer
        verifyCounterpartyBalance:
          default: false
          type: boolean
        sameDay:
          default: false
          type: boolean
      required:
      - amount
      - createdAt
      - description
      - numberOfPayments
      - schedule
      - status
      type: object
    RecurringCreditBookPayment_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 80
          minLength: 1
          type: string
        status:
          enum:
          - Pending
          - Active
          - Completed
          - Disabled
          type: string
        schedule:
          $ref: '#/components/schemas/ResponseSchedule'
        numberOfPayments:
          type: integer
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - numberOfPayments
      - schedule
      - status
      - updatedAt
      type: object
    CreateRecurringCreditAchPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        schedule:
          $ref: '#/components/schemas/Schedule'
      required:
      - amount
      - description
      - schedule
      type: object
    CreateRecurringDebitAchPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        sameDay:
          default: false
          type: boolean
        verifyCounterpartyBalance:
          default: false
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        schedule:
          $ref: '#/components/schemas/Schedule'
        clearingDaysOverride:
          minimum: 0
          type: integer
      required:
      - amount
      - description
      - schedule
      type: object
    CreateRecurringCreditBookPayment_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        transactionSummaryOverride:
          maxLength: 100
          minLength: 1
          type: string
        schedule:
          $ref: '#/components/schemas/Schedule'
      required:
      - amount
      - description
      - schedule
      type: object
    CreateRecurringPaymentRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateRecurringCreditAchPayment'
      - $ref: '#/components/schemas/CreateRecurringDebitAchPayment'
      - $ref: '#/components/schemas/CreateRecurringCreditBookPayment'
    BusinessDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        nextExpirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Address'
        address:
          $ref: '#/components/schemas/Address'
        fullName:
          $ref: '#/components/schemas/FullName'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/PhysicalCardStatus'
        design:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - address
      - createdAt
      - dateOfBirth
      - email
      - expirationDate
      - fullName
      - last4Digits
      - phone
      type: object
    IndividualDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        nextExpirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Address'
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/PhysicalCardStatus'
        design:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - createdAt
      - expirationDate
      - last4Digits
      - status
      type: object
    BusinessVirtualDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        nextExpirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        address:
          $ref: '#/components/schemas/Address'
        fullName:
          $ref: '#/components/schemas/FullName'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/VirtualCardStatus'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - address
      - createdAt
      - dateOfBirth
      - email
      - expirationDate
      - fullName
      - last4Digits
      - phone
      type: object
    IndividualVirtualDebitCard_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        last4Digits:
          pattern: "^\\d{4}$"
          type: string
        expirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        nextExpirationDate:
          pattern: "^\\d{4}[-](1[012]|0[1-9])$"
          type: string
        bin:
          pattern: "^\\d{9}$"
          type: string
        status:
          $ref: '#/components/schemas/VirtualCardStatus'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        freezeReason:
          type: string
      required:
      - createdAt
      - expirationDate
      - last4Digits
      - status
      type: object
    CreateIndividualDebitCardRequest_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/Address'
        design:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        bin:
          $ref: '#/components/schemas/Bin'
        cardQualifier:
          pattern: "^(\\d{3})|([ ]{3})$"
          type: string
        cardDesignId:
          maxLength: 16
          type: string
        additionalEmbossedText:
          maxLength: 26
          type: string
        activeForOnlineUse:
          type: boolean
        printOnlyBusinessName:
          type: boolean
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      type: object
    CreateBusinessDebitCardRequest_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/Address'
        address:
          $ref: '#/components/schemas/Address'
        fullName:
          $ref: '#/components/schemas/FullName'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        design:
          type: string
        additionalEmbossedText:
          maxLength: 26
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        activeForOnlineUse:
          type: boolean
        printOnlyBusinessName:
          type: boolean
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateIndividualVirtualDebitCardRequest_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        bin:
          $ref: '#/components/schemas/Bin'
        cardQualifier:
          pattern: "^\\d{3}$"
          type: string
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      type: object
    CreateBusinessVirtualDebitCardRequest_attributes:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/Address'
        fullName:
          $ref: '#/components/schemas/FullName'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          format: email
          type: string
        dateOfBirth:
          format: date
          type: string
        nationality:
          pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$
          type: string
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        expiryDate:
          pattern: "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
          type: string
      required:
      - address
      - dateOfBirth
      - email
      - fullName
      - phone
      type: object
    CreateCardRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateIndividualDebitCardRequest'
      - $ref: '#/components/schemas/CreateBusinessDebitCardRequest'
      - $ref: '#/components/schemas/CreateBusinessCreditCardRequest'
      - $ref: '#/components/schemas/CreateIndividualVirtualDebitCardRequest'
      - $ref: '#/components/schemas/CreateBusinessVirtualDebitCardRequest'
      - $ref: '#/components/schemas/CreateBusinessVirtualCreditCardRequest'
    UpdateIndividualDebitCard_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/Address'
        design:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    UpdateIndividualVirtualDebitCard_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    UpdateBusinessDebitCard_attributes:
      additionalProperties: false
      properties:
        shippingAddress:
          $ref: '#/components/schemas/Address'
        address:
          $ref: '#/components/schemas/Address'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          format: email
          type: string
        design:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    UpdateBusinessVirtualDebitCard_attributes:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/Address'
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          format: email
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        defaultFundingAccountId:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    UpdateCardRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateIndividualDebitCard'
      - $ref: '#/components/schemas/UpdateIndividualVirtualDebitCard'
      - $ref: '#/components/schemas/UpdateBusinessDebitCard'
      - $ref: '#/components/schemas/UpdateBusinessVirtualDebitCard'
      - $ref: '#/components/schemas/UpdateBusinessCreditCard'
      - $ref: '#/components/schemas/UpdateBusinessVirtualCreditCard'
    UnitPinStatusResponse_attributes:
      properties:
        status:
          enum:
          - Set
          - NotSet
          type: string
      type: object
    schemas_Limits_data_attributes:
      additionalProperties: false
      properties:
        limits:
          $ref: '#/components/schemas/CardLevelLimits'
        dailyTotals:
          $ref: '#/components/schemas/CardTotals'
        monthlyTotals:
          $ref: '#/components/schemas/CardTotals'
      required:
      - dailyTotals
      - monthlyTotals
      type: object
    schemas_Limits_data:
      additionalProperties: false
      properties:
        type:
          default: limits
          enum:
          - limits
          type: string
        attributes:
          $ref: '#/components/schemas/schemas_Limits_data_attributes'
      required:
      - attributes
      - type
      type: object
    Card_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: card
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Card_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Card_Relationship_data'
      required:
      - data
      title: Card Relationship
      type: object
    Authorization_Request_Relationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: authorizationRequest
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    Authorization_Request_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Authorization_Request_Relationship_data_inner'
          type: array
      title: Authorization Request Relationship
      type: object
    Authorization_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        cardLast4Digits:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant'
        recurring:
          type: boolean
        status:
          type: string
        declineReason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        summary:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/CardVerificationData'
        cardNetwork:
          type: string
        cashWithdrawalAmount:
          type: integer
      required:
      - amount
      - cardLast4Digits
      - createdAt
      - merchant
      - recurring
      - status
      type: object
    Funding_Account_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Funding_Account_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Funding_Account_Relationship_data'
      required:
      - data
      title: Funding Account Relationship
      type: object
    PurchaseAuthorization_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          type: string
        partialApprovalAllowed:
          type: boolean
        approvedAmount:
          type: integer
        declineReason:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant'
        recurring:
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        healthcareAmounts:
          $ref: '#/components/schemas/HealthcareAmounts'
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/CardVerificationData'
        ecommerce:
          type: boolean
        cardPresent:
          type: boolean
        cardNetwork:
          type: string
        cashWithdrawalAmount:
          type: integer
      required:
      - amount
      - createdAt
      - merchant
      - partialApprovalAllowed
      - recurring
      - status
      type: object
    CardTransactionAuthorization_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          type: string
        partialApprovalAllowed:
          type: boolean
        approvedAmount:
          type: integer
        declineReason:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant'
        recurring:
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/CardVerificationData'
        cardNetwork:
          type: string
      required:
      - amount
      - createdAt
      - merchant
      - partialApprovalAllowed
      - recurring
      - status
      type: object
    AtmAuthorization_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          type: string
        partialApprovalAllowed:
          type: boolean
        approvedAmount:
          type: integer
        declineReason:
          type: string
        direction:
          type: string
        atmName:
          type: string
        atmLocation:
          type: string
        surcharge:
          type: integer
        internationalServiceFee:
          nullable: true
          type: number
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        cardNetwork:
          type: string
      required:
      - amount
      - atmName
      - createdAt
      - direction
      - partialApprovalAllowed
      - status
      - surcharge
      type: object
    ApproveAuthorizationRequest_attributes:
      properties:
        amount:
          type: integer
        fundingAccount:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      type: object
    DeclineAuthorizationRequest_attributes:
      properties:
        reason:
          enum:
          - AccountClosed
          - CardExceedsAmountLimit
          - DoNotHonor
          - InsufficientFunds
          - InvalidMerchant
          - ReferToCardIssuer
          - RestrictedCard
          - TransactionNotPermittedToCardholder
          type: string
      type: object
    Statement_attributes:
      properties:
        period:
          type: string
      type: object
    Receiving_Account_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - account
          - depositAccount
          - creditAccount
          type: string
      required:
      - id
      - type
      type: object
    Receiving_Account_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Receiving_Account_Relationship_data'
      required:
      - data
      title: Receiving Account Relationship
      type: object
    Rewarded_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Rewarded Transaction Relationship
      type: object
    Reward_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        status:
          enum:
          - Rejected
          - Sent
          type: string
        rejectReason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - status
      - tags
      type: object
    CreateRewardRequest_data_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    CreateRewardRequest_data:
      additionalProperties: false
      properties:
        type:
          default: reward
          enum:
          - reward
          type: string
        attributes:
          $ref: '#/components/schemas/CreateRewardRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateRewardRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    Institution_attributes:
      additionalProperties: false
      properties:
        routingNumber:
          type: string
        name:
          type: string
        address:
          type: string
        isWireSupported:
          type: boolean
        isACHSupported:
          type: boolean
      required:
      - isACHSupported
      - isWireSupported
      - name
      - routingNumber
      type: object
    CreateFeeRequest_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - amount
      - description
      type: object
    Fee_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    StatusEvent_status:
      properties:
        type:
          $ref: '#/components/schemas/CheckDepositStatus'
      type: object
    CheckDeposit_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        settlementDate:
          format: date
          type: string
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          minLength: 1
          type: string
        status:
          enum:
          - AwaitingImages
          - AwaitingFrontImage
          - AwaitingBackImage
          - Pending
          - PendingReview
          - AwaitingCustomerConfirmation
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        reason:
          nullable: true
          type: string
        statusCreatedAt:
          format: date-time
          type: string
        statusSetBy:
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/StatusEvent'
          type: array
        reasonText:
          type: string
        checkNumber:
          type: string
        vendor:
          type: string
        counterparty:
          $ref: '#/components/schemas/CheckDepositCounterparty'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - description
      - status
      type: object
    CreateCheckDepositRequest_data_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        description:
          maxLength: 50
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - description
      type: object
    CreateCheckDepositRequest_data:
      properties:
        type:
          default: checkDeposit
          enum:
          - checkDeposit
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCheckDepositRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCheckDepositRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    UpdateCheckDeposit_attributes:
      additionalProperties: false
      properties:
        amount:
          minimum: 1
          type: integer
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      type: object
    ApiToken_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        expiration:
          format: date-time
          type: string
        token:
          type: string
        sourceIp:
          type: string
      required:
      - createdAt
      type: object
    CreateApiTokenRequest_data_attributes_resources_inner:
      properties:
        type:
          enum:
          - card
          - account
          type: string
        ids:
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
      type: object
    CreateApiTokenRequest_data_attributes:
      additionalProperties: false
      properties:
        scope:
          type: string
        description:
          type: string
        expiration:
          format: date-time
          type: string
        sourceIp:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/CreateApiTokenRequest_data_attributes_resources_inner'
          minItems: 1
          type: array
      required:
      - description
      - expiration
      type: object
    CreateApiTokenRequest_data:
      additionalProperties: false
      properties:
        type:
          default: apiToken
          enum:
          - apiToken
          type: string
        attributes:
          $ref: '#/components/schemas/CreateApiTokenRequest_data_attributes'
      required:
      - attributes
      - type
      type: object
    CreateCustomerTokenRequest_data_attributes:
      properties:
        scope:
          type: string
        verificationToken:
          type: string
        jwtToken:
          type: string
        expiresIn:
          type: integer
        verificationCode:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/CreateApiTokenRequest_data_attributes_resources_inner'
          minItems: 1
          type: array
        upgradableScope:
          type: string
      type: object
    CreateCustomerTokenRequest_data:
      properties:
        type:
          default: customerToken
          enum:
          - customerToken
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCustomerTokenRequest_data_attributes'
      type: object
    CustomerToken_attributes:
      properties:
        token:
          type: string
        expiresIn:
          type: integer
      type: object
    CreateCustomerTokenVerificationRequest_data_attributes:
      additionalProperties: false
      properties:
        channel:
          enum:
          - sms
          - call
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        appHash:
          maxLength: 11
          minLength: 11
          type: string
        language:
          enum:
          - en
          - af
          - ar
          - ca
          - zh
          - zh-CN
          - zh-HK
          - hr
          - cs
          - da
          - nl
          - en-GB
          - et
          - fi
          - fr
          - de
          - el
          - he
          - hi
          - hu
          - id
          - it
          - ja
          - kn
          - ko
          - ms
          - mr
          - nb
          - pl
          - pt-BR
          - pt
          - ro
          - ru
          - sk
          - es
          - sv
          - tl
          - te
          - th
          - tr
          - vi
          type: string
      required:
      - channel
      type: object
    CreateCustomerTokenVerificationRequest_data:
      additionalProperties: false
      properties:
        type:
          default: customerTokenVerification
          enum:
          - customerTokenVerification
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCustomerTokenVerificationRequest_data_attributes'
      required:
      - attributes
      - type
      type: object
    CustomerTokenVerification_attributes:
      properties:
        verificationToken:
          type: string
      type: object
    Webhook_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        label:
          type: string
        url:
          type: string
        status:
          type: string
        contentType:
          enum:
          - Json
          - JsonAPI
          type: string
        deliveryMode:
          enum:
          - AtMostOnce
          - AtLeastOnce
          type: string
        token:
          type: string
        subscriptionType:
          type: string
      type: object
    UpdateWebhookRequest_data_attributes:
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      type: object
    UpdateWebhookRequest_data:
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateWebhookRequest_data_attributes'
      type: object
    AtmLocation_attributes:
      properties:
        network:
          type: string
        locationName:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        address:
          $ref: '#/components/schemas/Address'
        distance:
          type: integer
        surchargeFree:
          type: boolean
        acceptDeposits:
          type: boolean
      type: object
    Payment_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - payment
          - achPayment
          - cardPayment
          - checkPayment
          - recurringPayment
          - paymentAdvance
          - repayPaymentAdvance
          - receivePayment
          - rewardedTransaction
          type: string
      required:
      - id
      - type
      type: object
    Payment_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Payment_Relationship_data'
      required:
      - data
      title: Payment Relationship
      type: object
    OriginatedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        addenda:
          type: string
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        secCode:
          type: string
        traceNumber:
          type: string
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - description
      - direction
      - summary
      type: object
    ReceivedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        addenda:
          type: string
        companyName:
          type: string
        counterpartyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        traceNumber:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - summary
      type: object
    ReturnedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        companyName:
          type: string
        counterpartyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        reason:
          type: string
        achReason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - counterpartyName
      - counterpartyRoutingNumber
      - createdAt
      - direction
      - reason
      - summary
      type: object
    Returned_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Returned Transaction Relationship
      type: object
    ReturnedReceivedAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        companyName:
          type: string
        reason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - createdAt
      - direction
      - reason
      - summary
      type: object
    DishonoredAchTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        companyName:
          type: string
        counterpartyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        traceNumber:
          type: string
        reason:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - companyName
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - summary
      type: object
    Authorization_Relationship_data_inner:
      additionalProperties: false
      properties:
        type:
          default: authorization
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      type: object
    Authorization_Relationship:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Authorization_Relationship_data_inner'
          type: array
      title: Authorization Relationship
      type: object
    PurchaseTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        recurring:
          type: boolean
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        interchange:
          nullable: true
          type: string
        ecommerce:
          type: boolean
        cardPresent:
          type: boolean
        internationalServiceFee:
          nullable: true
          type: integer
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/CardVerificationData'
        cardNetwork:
          type: string
      required:
      - amount
      - balance
      - cardLast4Digits
      - cardPresent
      - createdAt
      - direction
      - ecommerce
      - merchant
      - recurring
      - summary
      type: object
    BookTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - direction
      - summary
      type: object
    AtmTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        atmName:
          type: string
        atmLocation:
          type: string
        surcharge:
          type: integer
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        interchange:
          nullable: true
          type: string
        internationalServiceFee:
          nullable: true
          type: integer
        cardNetwork:
          type: string
      required:
      - amount
      - atmName
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - summary
      - surcharge
      type: object
    FeeTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
    CardTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        networkTransactionId:
          type: string
        interchange:
          nullable: true
          type: string
        internationalServiceFee:
          nullable: true
          type: integer
        merchant:
          $ref: '#/components/schemas/Merchant'
        recurring:
          type: boolean
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/CardVerificationData'
        cardNetwork:
          type: string
      required:
      - amount
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - merchant
      - recurring
      - summary
      type: object
    ReleaseTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        senderName:
          type: string
        description:
          type: string
        senderAccountNumber:
          maxLength: 17
          type: string
        senderAddress:
          $ref: '#/components/schemas/Address'
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - direction
      - summary
      type: object
    WireTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        description:
          type: string
        senderReference:
          type: string
        referenceForBeneficiary:
          type: string
        originatorToBeneficiaryInformation:
          type: string
        beneficiaryInformation:
          type: string
        beneficiaryAdviceInformation:
          type: string
        imadOmad:
          $ref: '#/components/schemas/WirePayment_allOf_attributes_imadOmad'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - counterparty
      - createdAt
      - direction
      - summary
      type: object
    AdjustmentTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        description:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
    Disputed_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Relationship_data'
      required:
      - data
      title: Disputed Transaction Relationship
      type: object
    DisputeTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        reason:
          type: string
        disputeId:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - disputeId
      - reason
      - summary
      type: object
    Check_Deposit_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: checkDeposit
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Check_Deposit_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Check_Deposit_Relationship_data'
      required:
      - data
      title: Check Deposit Relationship
      type: object
    CheckDepositTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
    ReturnedCheckDepositTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        balance:
          type: integer
        summary:
          type: string
        reason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
    Received_Payment_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: receivedPayment
          type: string
      required:
      - id
      - type
      type: object
    Received_Payment_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Received_Payment_Relationship_data'
      required:
      - data
      title: Received Payment Relationship
      type: object
    Chargeback_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: chargeback
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Chargeback_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Chargeback_Relationship_data'
      required:
      - data
      title: Chargeback Relationship
      type: object
    ChargebackTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        counterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - summary
      type: object
    Reward_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: reward
          type: string
      required:
      - id
      - type
      type: object
    Reward_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Reward_Relationship_data'
      required:
      - data
      title: Reward Relationship
      type: object
    Receiver_Account_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - account
          type: string
      required:
      - id
      - type
      type: object
    Receiver_Account_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Receiver_Account_Relationship_data'
      required:
      - data
      title: Receiver Account Relationship
      type: object
    RewardTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        receiverCounterparty:
          $ref: '#/components/schemas/PaymentCounterparty'
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - receiverCounterparty
      - summary
      type: object
    AccountLowBalanceClosureTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - summary
      type: object
    BankRepaymentTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        paidForDate:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - paidForDate
      - summary
      type: object
    CashDepositTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        recurring:
          type: boolean
      required:
      - amount
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - merchant
      - recurring
      - summary
      type: object
    Repayment_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: repayment
          type: string
      required:
      - id
      - type
      type: object
    Repayment_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Repayment_Relationship_data'
      required:
      - data
      title: Repayment Relationship
      type: object
    Check_Payment_Relationship_data:
      additionalProperties: false
      properties:
        type:
          default: payment
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    Check_Payment_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Check_Payment_Relationship_data'
      required:
      - data
      title: Check Payment Relationship
      type: object
    ReturnedCheckPaymentTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        direction:
          enum:
          - Credit
          - Debit
          type: string
        balance:
          type: integer
        summary:
          type: string
        reason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - createdAt
      - direction
      - reason
      - summary
      type: object
    CardReversalTransaction_allOf_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        direction:
          enum:
          - Credit
          - Debit
          type: string
        amount:
          type: integer
        balance:
          type: integer
        summary:
          type: string
        cardLast4Digits:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - balance
      - cardLast4Digits
      - createdAt
      - direction
      - summary
      type: object
    Original_Transaction_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          default: originalTransaction
          type: string
      required:
      - id
      - type
      type: object
    Original_Transaction_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Original_Transaction_Relationship_data'
      required:
      - data
      title: Original Transaction Relationship
      type: object
    UpdateTransactionTags_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - tags
      type: object
    UpdateBookTransaction_attributes:
      additionalProperties: false
      properties:
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        summary:
          type: string
      type: object
    UpdateTransactionRequest_data:
      oneOf:
      - $ref: '#/components/schemas/UpdateTransactionTags'
      - $ref: '#/components/schemas/UpdateBookTransaction'
      - $ref: '#/components/schemas/UpdateChargebackTransaction'
    Dispute_attributes_statusHistory_inner:
      additionalProperties: false
      properties:
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    Dispute_attributes:
      additionalProperties: false
      properties:
        source:
          enum:
          - DebitCard
          - ACH
          type: string
        externalId:
          maxLength: 255
          type: string
        link:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        description:
          maxLength: 1024
          type: string
        amount:
          type: integer
        status:
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/Dispute_attributes_statusHistory_inner'
          type: array
        createdAt:
          format: date-time
          type: string
        decisionReason:
          type: string
      required:
      - amount
      - createdAt
      - description
      - externalId
      - source
      - status
      type: object
    Recurring_Repayment_Relationship_data:
      additionalProperties: false
      properties:
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        type:
          enum:
          - recurringRepayment
          type: string
      required:
      - id
      - type
      type: object
    Recurring_Repayment_Relationship:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Recurring_Repayment_Relationship_data'
      required:
      - data
      title: Recurring Repayment Relationship
      type: object
    AchRepayment_allOf_attributes:
      properties:
        createdAt:
          type: string
        updatedAt:
          type: string
        amount:
          type: number
        status:
          $ref: '#/components/schemas/AchRepaymentStatus'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - status
      - updatedAt
      type: object
    BookRepayment_allOf_attributes:
      properties:
        createdAt:
          type: string
        updatedAt:
          type: string
        amount:
          type: number
        status:
          $ref: '#/components/schemas/BookRepaymentStatus'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - createdAt
      - status
      - updatedAt
      type: object
    CreateBookRepayment_attributes:
      additionalProperties: false
      properties:
        description:
          type: string
        amount:
          type: number
        transactionSummaryOverride:
          type: string
      required:
      - amount
      - description
      type: object
    CreateAchRepayment_attributes:
      additionalProperties: false
      properties:
        description:
          type: string
        amount:
          type: number
        addenda:
          type: string
        sameDay:
          type: boolean
        secCode:
          type: string
      required:
      - amount
      - description
      type: object
    CreateRepaymentRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateBookRepayment'
      - $ref: '#/components/schemas/CreateCapitalPartnerBookRepayment'
      - $ref: '#/components/schemas/CreateAchRepayment'
      - $ref: '#/components/schemas/CreateCapitalPartnerAchRepayment'
    RecurringRepaymentRelationshipsBase_creditAccount_data:
      additionalProperties: false
      properties:
        type:
          default: creditAccount
          enum:
          - creditAccount
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    RecurringRepaymentRelationshipsBase_creditAccount:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_creditAccount_data'
      required:
      - data
      type: object
    RecurringRepaymentRelationshipsBase_counterparty_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - counterparty
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    RecurringRepaymentRelationshipsBase_counterparty:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_counterparty_data'
      required:
      - data
      type: object
    RecurringRepaymentRelationshipsBase_customer_data:
      additionalProperties: false
      properties:
        type:
          enum:
          - businessCustomer
          - individualCustomer
          - customer
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    RecurringRepaymentRelationshipsBase_customer:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_customer_data'
      required:
      - data
      type: object
    RecurringRepaymentRelationshipsBase_org_data:
      additionalProperties: false
      properties:
        type:
          default: org
          enum:
          - org
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    RecurringRepaymentRelationshipsBase_org:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/RecurringRepaymentRelationshipsBase_org_data'
      required:
      - data
      type: object
    RecurringAchRepaymentRelationships_allOf_account_data:
      properties:
        type:
          enum:
          - depositAccount
          - account
          type: string
        id:
          pattern: "^[1-9]\\d*$"
          type: string
      required:
      - id
      - type
      type: object
    RecurringAchRepaymentRelationships_allOf_account:
      properties:
        data:
          $ref: '#/components/schemas/RecurringAchRepaymentRelationships_allOf_account_data'
      required:
      - data
      type: object
    RecurringAchRepayment_allOf_attributes:
      properties:
        createdAt:
          format: date
          type: string
        updatedAt:
          format: date
          type: string
        schedule:
          $ref: '#/components/schemas/ResponseSchedule'
        description:
          maxLength: 50
          type: string
        addenda:
          maxLength: 80
          type: string
        sameDay:
          default: false
          type: boolean
        secCode:
          type: string
        numberOfRepayments:
          type: integer
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        status:
          $ref: '#/components/schemas/RecurringRepaymentStatus'
      required:
      - createdAt
      - description
      - numberOfRepayments
      - schedule
      - status
      - updatedAt
      type: object
    RecurringBookRepayment_allOf_attributes:
      properties:
        createdAt:
          format: date
          type: string
        updatedAt:
          format: date
          type: string
        schedule:
          $ref: '#/components/schemas/ResponseSchedule'
        description:
          maxLength: 50
          type: string
        transactionSummaryOverride:
          maxLength: 100
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        numberOfRepayments:
          type: integer
        status:
          $ref: '#/components/schemas/RecurringRepaymentStatus'
      required:
      - createdAt
      - description
      - numberOfRepayments
      - schedule
      - status
      - updatedAt
      type: object
    RecurringCapitalPartnerAchRepayment_allOf_attributes:
      properties:
        createdAt:
          format: date
          type: string
        updatedAt:
          format: date
          type: string
        schedule:
          $ref: '#/components/schemas/ResponseSchedule'
        description:
          maxLength: 50
          type: string
        addenda:
          maxLength: 80
          type: string
        sameDay:
          default: false
          type: boolean
        secCode:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        numberOfRepayments:
          type: integer
        status:
          $ref: '#/components/schemas/RecurringRepaymentStatus'
      required:
      - createdAt
      - description
      - numberOfRepayments
      - schedule
      - status
      - updatedAt
      type: object
    CreateRecurringAchRepayment_attributes:
      additionalProperties: false
      properties:
        description:
          maxLength: 10
          minLength: 1
          type: string
        addenda:
          maxLength: 80
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        sameDay:
          type: boolean
        secCode:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - description
      type: object
    CreateRecurringBookRepayment_attributes:
      additionalProperties: false
      properties:
        description:
          maxLength: 80
          minLength: 1
          type: string
        transactionSummaryOverride:
          maxLength: 100
          minLength: 1
          type: string
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - description
      type: object
    CreateRecurringRepaymentRequest_data:
      discriminator:
        mapping:
          CreateRecurringAchRepayment: '#/components/schemas/CreateRecurringAchRepayment'
          CreateRecurringBookRepayment: '#/components/schemas/CreateRecurringBookRepayment'
          CreateRecurringCapitalPartnerAchRepayment: '#/components/schemas/CreateRecurringCapitalPartnerAchRepayment'
          CreateRecurringCapitalPartnerBookRepayment: '#/components/schemas/CreateRecurringCapitalPartnerBookRepayment'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/CreateRecurringAchRepayment'
      - $ref: '#/components/schemas/CreateRecurringBookRepayment'
      - $ref: '#/components/schemas/CreateRecurringCapitalPartnerAchRepayment'
      - $ref: '#/components/schemas/CreateRecurringCapitalPartnerBookRepayment'
    CheckPayment_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        returnCutoffTime:
          format: date-time
          type: string
        status:
          enum:
          - MarkedForReturn
          - Returned
          - Processed
          - PendingReview
          type: string
        memo:
          type: string
        deliveryStatus:
          enum:
          - Mailed
          - InLocalArea
          - Delivered
          - Rerouted
          - ReturnedToSender
          type: string
        sendAt:
          format: date-time
          type: string
        counterparty:
          $ref: '#/components/schemas/CheckPaymentCounterparty'
        trackedAt:
          format: date-time
          type: string
        postalCode:
          type: string
        expectedDelivery:
          format: date
          type: string
        originated:
          type: boolean
        expirationDate:
          format: date
          type: string
        rejectReason:
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        description:
          type: string
        returnReason:
          $ref: '#/components/schemas/ReturnReason'
        pendingReviewReasons:
          items:
            enum:
            - NameMissMatch
            - SoftLimit
            type: string
          type: array
        checkNumber:
          type: string
        onUsAuxiliary:
          type: string
        onUs:
          type: string
        counterpartyRoutingNumber:
          type: string
        additionalVerificationStatus:
          enum:
          - Required
          - NotRequired
          - Approved
          type: string
      required:
      - amount
      - createdAt
      - originated
      - status
      - updatedAt
      type: object
    CreateCheckPaymentRequest_data_attributes_counterparty:
      additionalProperties: false
      properties:
        name:
          maxLength: 40
          type: string
        address:
          $ref: '#/components/schemas/Address'
        counterpartyMoved:
          type: boolean
      required:
      - address
      - name
      type: object
    CreateCheckPaymentRequest_data_attributes:
      additionalProperties: false
      properties:
        counterparty:
          $ref: '#/components/schemas/CreateCheckPaymentRequest_data_attributes_counterparty'
        amount:
          minimum: 1
          type: integer
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        sendDate:
          format: date
          type: string
        memo:
          type: string
        description:
          maxLength: 50
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - amount
      - counterparty
      - description
      - idempotencyKey
      type: object
    CreateCheckPaymentRequest_data:
      additionalProperties: false
      properties:
        type:
          default: checkPayment
          enum:
          - checkPayment
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCheckPaymentRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateCheckPaymentRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CheckStopPaymentRelationships_allOf_stoppedPayments:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CheckPayment'
          type: array
      type: object
    CheckStopPayment_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          type: integer
        status:
          $ref: '#/components/schemas/CheckStopPaymentStatus'
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        checkNumber:
          type: string
      required:
      - checkNumber
      - createdAt
      - status
      - tags
      - updatedAt
      type: object
    AchStopPayment_attributes:
      additionalProperties: false
      properties:
        createdAt:
          format: date
          type: string
        updatedAt:
          format: date
          type: string
        minAmount:
          type: integer
        originatorName:
          items:
            type: string
          type: array
        direction:
          default: debit
          type: string
        expiration:
          format: date
          type: string
        isMultiUse:
          type: boolean
        description:
          type: string
        disableReason:
          $ref: '#/components/schemas/AchStopPaymentDisableReason'
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
      required:
      - createdAt
      - description
      - direction
      - expiration
      - isMultiUse
      - tags
      - updatedAt
      type: object
    CreateCheckStopPayment_attributes:
      additionalProperties: false
      example:
        amount: 1
        checkNumber: checkNumber
        idempotencyKey: idempotencyKey
        tags:
          key: tags
      properties:
        amount:
          minimum: 1
          type: integer
        checkNumber:
          maxLength: 12
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - checkNumber
      type: object
    CreateAchStopPayment_attributes:
      properties:
        minAmount:
          type: integer
        originatorName:
          items:
            type: string
          type: array
        direction:
          default: debit
          type: string
        expiration:
          format: date
          type: string
        isMultiUse:
          type: boolean
        description:
          maxLength: 255
          type: string
        tags:
          additionalProperties:
            maxLength: 255
            minLength: 1
            type: string
          maxProperties: 15
          type: object
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - description
      - direction
      type: object
    CreateStopPaymentRequest_data:
      oneOf:
      - $ref: '#/components/schemas/CreateCheckStopPayment'
      - $ref: '#/components/schemas/CreateAchStopPayment'
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

