/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.CardLevelLimits;
import org.openapitools.client.model.Phone;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PatchBusinessVirtualDebitCardAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PatchBusinessVirtualDebitCardAttributes {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private Address address;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private Phone phone;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Object tags;

  public static final String SERIALIZED_NAME_LIMITS = "limits";
  @SerializedName(SERIALIZED_NAME_LIMITS)
  private CardLevelLimits limits;

  public static final String SERIALIZED_NAME_DEFAULT_FUNDING_ACCOUNT_ID = "defaultFundingAccountId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_FUNDING_ACCOUNT_ID)
  private String defaultFundingAccountId;

  public PatchBusinessVirtualDebitCardAttributes() {
  }

  public PatchBusinessVirtualDebitCardAttributes address(Address address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  public Address getAddress() {
    return address;
  }


  public void setAddress(Address address) {
    this.address = address;
  }


  public PatchBusinessVirtualDebitCardAttributes phone(Phone phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  public Phone getPhone() {
    return phone;
  }


  public void setPhone(Phone phone) {
    this.phone = phone;
  }


  public PatchBusinessVirtualDebitCardAttributes email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public PatchBusinessVirtualDebitCardAttributes tags(Object tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public Object getTags() {
    return tags;
  }


  public void setTags(Object tags) {
    this.tags = tags;
  }


  public PatchBusinessVirtualDebitCardAttributes limits(CardLevelLimits limits) {
    
    this.limits = limits;
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @javax.annotation.Nullable
  public CardLevelLimits getLimits() {
    return limits;
  }


  public void setLimits(CardLevelLimits limits) {
    this.limits = limits;
  }


  public PatchBusinessVirtualDebitCardAttributes defaultFundingAccountId(String defaultFundingAccountId) {
    
    this.defaultFundingAccountId = defaultFundingAccountId;
    return this;
  }

   /**
   * Get defaultFundingAccountId
   * @return defaultFundingAccountId
  **/
  @javax.annotation.Nullable
  public String getDefaultFundingAccountId() {
    return defaultFundingAccountId;
  }


  public void setDefaultFundingAccountId(String defaultFundingAccountId) {
    this.defaultFundingAccountId = defaultFundingAccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchBusinessVirtualDebitCardAttributes patchBusinessVirtualDebitCardAttributes = (PatchBusinessVirtualDebitCardAttributes) o;
    return Objects.equals(this.address, patchBusinessVirtualDebitCardAttributes.address) &&
        Objects.equals(this.phone, patchBusinessVirtualDebitCardAttributes.phone) &&
        Objects.equals(this.email, patchBusinessVirtualDebitCardAttributes.email) &&
        Objects.equals(this.tags, patchBusinessVirtualDebitCardAttributes.tags) &&
        Objects.equals(this.limits, patchBusinessVirtualDebitCardAttributes.limits) &&
        Objects.equals(this.defaultFundingAccountId, patchBusinessVirtualDebitCardAttributes.defaultFundingAccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, phone, email, tags, limits, defaultFundingAccountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchBusinessVirtualDebitCardAttributes {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    defaultFundingAccountId: ").append(toIndentedString(defaultFundingAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("phone");
    openapiFields.add("email");
    openapiFields.add("tags");
    openapiFields.add("limits");
    openapiFields.add("defaultFundingAccountId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PatchBusinessVirtualDebitCardAttributes
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PatchBusinessVirtualDebitCardAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PatchBusinessVirtualDebitCardAttributes is not found in the empty JSON string", PatchBusinessVirtualDebitCardAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PatchBusinessVirtualDebitCardAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PatchBusinessVirtualDebitCardAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("address"));
      }
      // validate the optional field `phone`
      if (jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) {
        Phone.validateJsonElement(jsonObj.get("phone"));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `limits`
      if (jsonObj.get("limits") != null && !jsonObj.get("limits").isJsonNull()) {
        CardLevelLimits.validateJsonElement(jsonObj.get("limits"));
      }
      if ((jsonObj.get("defaultFundingAccountId") != null && !jsonObj.get("defaultFundingAccountId").isJsonNull()) && !jsonObj.get("defaultFundingAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultFundingAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultFundingAccountId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PatchBusinessVirtualDebitCardAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PatchBusinessVirtualDebitCardAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PatchBusinessVirtualDebitCardAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PatchBusinessVirtualDebitCardAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<PatchBusinessVirtualDebitCardAttributes>() {
           @Override
           public void write(JsonWriter out, PatchBusinessVirtualDebitCardAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PatchBusinessVirtualDebitCardAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PatchBusinessVirtualDebitCardAttributes given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PatchBusinessVirtualDebitCardAttributes
  * @throws IOException if the JSON string is invalid with respect to PatchBusinessVirtualDebitCardAttributes
  */
  public static PatchBusinessVirtualDebitCardAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PatchBusinessVirtualDebitCardAttributes.class);
  }

 /**
  * Convert an instance of PatchBusinessVirtualDebitCardAttributes to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

