/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import unit.java.sdk.ApiClient;
/**
 * AtmAuthorizationAllOfAttributes
 */
@JsonPropertyOrder({
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_CREATED_AT,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_AMOUNT,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_STATUS,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_PARTIAL_APPROVAL_ALLOWED,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_APPROVED_AMOUNT,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_DECLINE_REASON,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_DIRECTION,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_ATM_NAME,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_ATM_LOCATION,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_SURCHARGE,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_INTERNATIONAL_SERVICE_FEE,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_TAGS,
  AtmAuthorizationAllOfAttributes.JSON_PROPERTY_CARD_NETWORK
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class AtmAuthorizationAllOfAttributes {
  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Long amount;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_PARTIAL_APPROVAL_ALLOWED = "partialApprovalAllowed";
  private Boolean partialApprovalAllowed;

  public static final String JSON_PROPERTY_APPROVED_AMOUNT = "approvedAmount";
  private Long approvedAmount;

  public static final String JSON_PROPERTY_DECLINE_REASON = "declineReason";
  private String declineReason;

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private String direction;

  public static final String JSON_PROPERTY_ATM_NAME = "atmName";
  private String atmName;

  public static final String JSON_PROPERTY_ATM_LOCATION = "atmLocation";
  private String atmLocation;

  public static final String JSON_PROPERTY_SURCHARGE = "surcharge";
  private Long surcharge;

  public static final String JSON_PROPERTY_INTERNATIONAL_SERVICE_FEE = "internationalServiceFee";
  private JsonNullable<BigDecimal> internationalServiceFee = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Map<String, String> tags = new HashMap<>();

  public static final String JSON_PROPERTY_CARD_NETWORK = "cardNetwork";
  private String cardNetwork;

  public AtmAuthorizationAllOfAttributes() { 
  }

  public AtmAuthorizationAllOfAttributes createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public AtmAuthorizationAllOfAttributes amount(Long amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Long amount) {
    this.amount = amount;
  }


  public AtmAuthorizationAllOfAttributes status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public AtmAuthorizationAllOfAttributes partialApprovalAllowed(Boolean partialApprovalAllowed) {
    this.partialApprovalAllowed = partialApprovalAllowed;
    return this;
  }

  /**
   * Get partialApprovalAllowed
   * @return partialApprovalAllowed
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTIAL_APPROVAL_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getPartialApprovalAllowed() {
    return partialApprovalAllowed;
  }


  @JsonProperty(JSON_PROPERTY_PARTIAL_APPROVAL_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartialApprovalAllowed(Boolean partialApprovalAllowed) {
    this.partialApprovalAllowed = partialApprovalAllowed;
  }


  public AtmAuthorizationAllOfAttributes approvedAmount(Long approvedAmount) {
    this.approvedAmount = approvedAmount;
    return this;
  }

  /**
   * Get approvedAmount
   * @return approvedAmount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPROVED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getApprovedAmount() {
    return approvedAmount;
  }


  @JsonProperty(JSON_PROPERTY_APPROVED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovedAmount(Long approvedAmount) {
    this.approvedAmount = approvedAmount;
  }


  public AtmAuthorizationAllOfAttributes declineReason(String declineReason) {
    this.declineReason = declineReason;
    return this;
  }

  /**
   * Get declineReason
   * @return declineReason
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECLINE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDeclineReason() {
    return declineReason;
  }


  @JsonProperty(JSON_PROPERTY_DECLINE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclineReason(String declineReason) {
    this.declineReason = declineReason;
  }


  public AtmAuthorizationAllOfAttributes direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDirection(String direction) {
    this.direction = direction;
  }


  public AtmAuthorizationAllOfAttributes atmName(String atmName) {
    this.atmName = atmName;
    return this;
  }

  /**
   * Get atmName
   * @return atmName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATM_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAtmName() {
    return atmName;
  }


  @JsonProperty(JSON_PROPERTY_ATM_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAtmName(String atmName) {
    this.atmName = atmName;
  }


  public AtmAuthorizationAllOfAttributes atmLocation(String atmLocation) {
    this.atmLocation = atmLocation;
    return this;
  }

  /**
   * Get atmLocation
   * @return atmLocation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATM_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAtmLocation() {
    return atmLocation;
  }


  @JsonProperty(JSON_PROPERTY_ATM_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtmLocation(String atmLocation) {
    this.atmLocation = atmLocation;
  }


  public AtmAuthorizationAllOfAttributes surcharge(Long surcharge) {
    this.surcharge = surcharge;
    return this;
  }

  /**
   * Get surcharge
   * @return surcharge
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SURCHARGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getSurcharge() {
    return surcharge;
  }


  @JsonProperty(JSON_PROPERTY_SURCHARGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSurcharge(Long surcharge) {
    this.surcharge = surcharge;
  }


  public AtmAuthorizationAllOfAttributes internationalServiceFee(BigDecimal internationalServiceFee) {
    this.internationalServiceFee = JsonNullable.<BigDecimal>of(internationalServiceFee);
    return this;
  }

  /**
   * Get internationalServiceFee
   * @return internationalServiceFee
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public BigDecimal getInternationalServiceFee() {
        return internationalServiceFee.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNATIONAL_SERVICE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getInternationalServiceFee_JsonNullable() {
    return internationalServiceFee;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNATIONAL_SERVICE_FEE)
  public void setInternationalServiceFee_JsonNullable(JsonNullable<BigDecimal> internationalServiceFee) {
    this.internationalServiceFee = internationalServiceFee;
  }

  public void setInternationalServiceFee(BigDecimal internationalServiceFee) {
    this.internationalServiceFee = JsonNullable.<BigDecimal>of(internationalServiceFee);
  }


  public AtmAuthorizationAllOfAttributes tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public AtmAuthorizationAllOfAttributes putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public AtmAuthorizationAllOfAttributes cardNetwork(String cardNetwork) {
    this.cardNetwork = cardNetwork;
    return this;
  }

  /**
   * Get cardNetwork
   * @return cardNetwork
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCardNetwork() {
    return cardNetwork;
  }


  @JsonProperty(JSON_PROPERTY_CARD_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardNetwork(String cardNetwork) {
    this.cardNetwork = cardNetwork;
  }


  /**
   * Return true if this AtmAuthorization_allOf_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AtmAuthorizationAllOfAttributes atmAuthorizationAllOfAttributes = (AtmAuthorizationAllOfAttributes) o;
    return Objects.equals(this.createdAt, atmAuthorizationAllOfAttributes.createdAt) &&
        Objects.equals(this.amount, atmAuthorizationAllOfAttributes.amount) &&
        Objects.equals(this.status, atmAuthorizationAllOfAttributes.status) &&
        Objects.equals(this.partialApprovalAllowed, atmAuthorizationAllOfAttributes.partialApprovalAllowed) &&
        Objects.equals(this.approvedAmount, atmAuthorizationAllOfAttributes.approvedAmount) &&
        Objects.equals(this.declineReason, atmAuthorizationAllOfAttributes.declineReason) &&
        Objects.equals(this.direction, atmAuthorizationAllOfAttributes.direction) &&
        Objects.equals(this.atmName, atmAuthorizationAllOfAttributes.atmName) &&
        Objects.equals(this.atmLocation, atmAuthorizationAllOfAttributes.atmLocation) &&
        Objects.equals(this.surcharge, atmAuthorizationAllOfAttributes.surcharge) &&
        equalsNullable(this.internationalServiceFee, atmAuthorizationAllOfAttributes.internationalServiceFee) &&
        Objects.equals(this.tags, atmAuthorizationAllOfAttributes.tags) &&
        Objects.equals(this.cardNetwork, atmAuthorizationAllOfAttributes.cardNetwork);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, amount, status, partialApprovalAllowed, approvedAmount, declineReason, direction, atmName, atmLocation, surcharge, hashCodeNullable(internationalServiceFee), tags, cardNetwork);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AtmAuthorizationAllOfAttributes {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    partialApprovalAllowed: ").append(toIndentedString(partialApprovalAllowed)).append("\n");
    sb.append("    approvedAmount: ").append(toIndentedString(approvedAmount)).append("\n");
    sb.append("    declineReason: ").append(toIndentedString(declineReason)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    atmName: ").append(toIndentedString(atmName)).append("\n");
    sb.append("    atmLocation: ").append(toIndentedString(atmLocation)).append("\n");
    sb.append("    surcharge: ").append(toIndentedString(surcharge)).append("\n");
    sb.append("    internationalServiceFee: ").append(toIndentedString(internationalServiceFee)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    cardNetwork: ").append(toIndentedString(cardNetwork)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `createdAt` to the URL query string
    if (getCreatedAt() != null) {
      joiner.add(String.format("%screatedAt%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCreatedAt()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `amount` to the URL query string
    if (getAmount() != null) {
      joiner.add(String.format("%samount%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAmount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `partialApprovalAllowed` to the URL query string
    if (getPartialApprovalAllowed() != null) {
      joiner.add(String.format("%spartialApprovalAllowed%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPartialApprovalAllowed()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `approvedAmount` to the URL query string
    if (getApprovedAmount() != null) {
      joiner.add(String.format("%sapprovedAmount%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getApprovedAmount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `declineReason` to the URL query string
    if (getDeclineReason() != null) {
      joiner.add(String.format("%sdeclineReason%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDeclineReason()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `direction` to the URL query string
    if (getDirection() != null) {
      joiner.add(String.format("%sdirection%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDirection()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `atmName` to the URL query string
    if (getAtmName() != null) {
      joiner.add(String.format("%satmName%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAtmName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `atmLocation` to the URL query string
    if (getAtmLocation() != null) {
      joiner.add(String.format("%satmLocation%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAtmLocation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `surcharge` to the URL query string
    if (getSurcharge() != null) {
      joiner.add(String.format("%ssurcharge%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSurcharge()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `internationalServiceFee` to the URL query string
    if (getInternationalServiceFee() != null) {
      joiner.add(String.format("%sinternationalServiceFee%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInternationalServiceFee()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (String _key : getTags().keySet()) {
        joiner.add(String.format("%stags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getTags().get(_key), URLEncoder.encode(ApiClient.valueToString(getTags().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `cardNetwork` to the URL query string
    if (getCardNetwork() != null) {
      joiner.add(String.format("%scardNetwork%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardNetwork()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

