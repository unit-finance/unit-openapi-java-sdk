/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import unit.java.sdk.model.Address;
import unit.java.sdk.model.Coordinates;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AtmLocationAttributes
 */
@JsonPropertyOrder({
  AtmLocationAttributes.JSON_PROPERTY_NETWORK,
  AtmLocationAttributes.JSON_PROPERTY_LOCATION_NAME,
  AtmLocationAttributes.JSON_PROPERTY_COORDINATES,
  AtmLocationAttributes.JSON_PROPERTY_ADDRESS,
  AtmLocationAttributes.JSON_PROPERTY_DISTANCE,
  AtmLocationAttributes.JSON_PROPERTY_SURCHARGE_FREE,
  AtmLocationAttributes.JSON_PROPERTY_ACCEPT_DEPOSITS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AtmLocationAttributes {
  public static final String JSON_PROPERTY_NETWORK = "network";
  private String network;

  public static final String JSON_PROPERTY_LOCATION_NAME = "locationName";
  private String locationName;

  public static final String JSON_PROPERTY_COORDINATES = "coordinates";
  private Coordinates coordinates;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private Address address;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  private Integer distance;

  public static final String JSON_PROPERTY_SURCHARGE_FREE = "surchargeFree";
  private Boolean surchargeFree;

  public static final String JSON_PROPERTY_ACCEPT_DEPOSITS = "acceptDeposits";
  private Boolean acceptDeposits;

  public AtmLocationAttributes() { 
  }

  public AtmLocationAttributes network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetwork() {
    return network;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetwork(String network) {
    this.network = network;
  }


  public AtmLocationAttributes locationName(String locationName) {
    this.locationName = locationName;
    return this;
  }

   /**
   * Get locationName
   * @return locationName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocationName() {
    return locationName;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }


  public AtmLocationAttributes coordinates(Coordinates coordinates) {
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Coordinates getCoordinates() {
    return coordinates;
  }


  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoordinates(Coordinates coordinates) {
    this.coordinates = coordinates;
  }


  public AtmLocationAttributes address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Address getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(Address address) {
    this.address = address;
  }


  public AtmLocationAttributes distance(Integer distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDistance() {
    return distance;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistance(Integer distance) {
    this.distance = distance;
  }


  public AtmLocationAttributes surchargeFree(Boolean surchargeFree) {
    this.surchargeFree = surchargeFree;
    return this;
  }

   /**
   * Get surchargeFree
   * @return surchargeFree
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SURCHARGE_FREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSurchargeFree() {
    return surchargeFree;
  }


  @JsonProperty(JSON_PROPERTY_SURCHARGE_FREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSurchargeFree(Boolean surchargeFree) {
    this.surchargeFree = surchargeFree;
  }


  public AtmLocationAttributes acceptDeposits(Boolean acceptDeposits) {
    this.acceptDeposits = acceptDeposits;
    return this;
  }

   /**
   * Get acceptDeposits
   * @return acceptDeposits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCEPT_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAcceptDeposits() {
    return acceptDeposits;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPT_DEPOSITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcceptDeposits(Boolean acceptDeposits) {
    this.acceptDeposits = acceptDeposits;
  }


  /**
   * Return true if this atm_location_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AtmLocationAttributes atmLocationAttributes = (AtmLocationAttributes) o;
    return Objects.equals(this.network, atmLocationAttributes.network) &&
        Objects.equals(this.locationName, atmLocationAttributes.locationName) &&
        Objects.equals(this.coordinates, atmLocationAttributes.coordinates) &&
        Objects.equals(this.address, atmLocationAttributes.address) &&
        Objects.equals(this.distance, atmLocationAttributes.distance) &&
        Objects.equals(this.surchargeFree, atmLocationAttributes.surchargeFree) &&
        Objects.equals(this.acceptDeposits, atmLocationAttributes.acceptDeposits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, locationName, coordinates, address, distance, surchargeFree, acceptDeposits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AtmLocationAttributes {\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    surchargeFree: ").append(toIndentedString(surchargeFree)).append("\n");
    sb.append("    acceptDeposits: ").append(toIndentedString(acceptDeposits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `network` to the URL query string
    if (getNetwork() != null) {
      joiner.add(String.format("%snetwork%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNetwork()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `locationName` to the URL query string
    if (getLocationName() != null) {
      joiner.add(String.format("%slocationName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLocationName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `coordinates` to the URL query string
    if (getCoordinates() != null) {
      joiner.add(getCoordinates().toUrlQueryString(prefix + "coordinates" + suffix));
    }

    // add `address` to the URL query string
    if (getAddress() != null) {
      joiner.add(getAddress().toUrlQueryString(prefix + "address" + suffix));
    }

    // add `distance` to the URL query string
    if (getDistance() != null) {
      joiner.add(String.format("%sdistance%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDistance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `surchargeFree` to the URL query string
    if (getSurchargeFree() != null) {
      joiner.add(String.format("%ssurchargeFree%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSurchargeFree()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `acceptDeposits` to the URL query string
    if (getAcceptDeposits() != null) {
      joiner.add(String.format("%sacceptDeposits%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAcceptDeposits()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

