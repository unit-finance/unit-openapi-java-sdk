/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import unit.java.sdk.model.BeneficialOwnersRelationship;
import unit.java.sdk.model.CustomerRelationship;
import unit.java.sdk.model.DocumentsRelationship;
import unit.java.sdk.model.OrgRelationship;
import unit.java.sdk.model.Relationship;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import unit.java.sdk.ApiClient;
/**
 * BusinessApplicationRelationships
 */
@JsonPropertyOrder({
  BusinessApplicationRelationships.JSON_PROPERTY_CUSTOMER,
  BusinessApplicationRelationships.JSON_PROPERTY_DOCUMENTS,
  BusinessApplicationRelationships.JSON_PROPERTY_BENEFICIAL_OWNERS,
  BusinessApplicationRelationships.JSON_PROPERTY_ORG,
  BusinessApplicationRelationships.JSON_PROPERTY_APPLICATION_FORM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class BusinessApplicationRelationships {
  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CustomerRelationship customer;

  public static final String JSON_PROPERTY_DOCUMENTS = "documents";
  private DocumentsRelationship documents;

  public static final String JSON_PROPERTY_BENEFICIAL_OWNERS = "beneficialOwners";
  private BeneficialOwnersRelationship beneficialOwners;

  public static final String JSON_PROPERTY_ORG = "org";
  private OrgRelationship org;

  public static final String JSON_PROPERTY_APPLICATION_FORM = "applicationForm";
  private Relationship applicationForm;

  public BusinessApplicationRelationships() { 
  }

  public BusinessApplicationRelationships customer(CustomerRelationship customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CustomerRelationship getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomer(CustomerRelationship customer) {
    this.customer = customer;
  }


  public BusinessApplicationRelationships documents(DocumentsRelationship documents) {
    this.documents = documents;
    return this;
  }

  /**
   * Get documents
   * @return documents
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DocumentsRelationship getDocuments() {
    return documents;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocuments(DocumentsRelationship documents) {
    this.documents = documents;
  }


  public BusinessApplicationRelationships beneficialOwners(BeneficialOwnersRelationship beneficialOwners) {
    this.beneficialOwners = beneficialOwners;
    return this;
  }

  /**
   * Get beneficialOwners
   * @return beneficialOwners
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIAL_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BeneficialOwnersRelationship getBeneficialOwners() {
    return beneficialOwners;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIAL_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficialOwners(BeneficialOwnersRelationship beneficialOwners) {
    this.beneficialOwners = beneficialOwners;
  }


  public BusinessApplicationRelationships org(OrgRelationship org) {
    this.org = org;
    return this;
  }

  /**
   * Get org
   * @return org
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OrgRelationship getOrg() {
    return org;
  }


  @JsonProperty(JSON_PROPERTY_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrg(OrgRelationship org) {
    this.org = org;
  }


  public BusinessApplicationRelationships applicationForm(Relationship applicationForm) {
    this.applicationForm = applicationForm;
    return this;
  }

  /**
   * Get applicationForm
   * @return applicationForm
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATION_FORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Relationship getApplicationForm() {
    return applicationForm;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_FORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationForm(Relationship applicationForm) {
    this.applicationForm = applicationForm;
  }


  /**
   * Return true if this BusinessApplicationRelationships object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessApplicationRelationships businessApplicationRelationships = (BusinessApplicationRelationships) o;
    return Objects.equals(this.customer, businessApplicationRelationships.customer) &&
        Objects.equals(this.documents, businessApplicationRelationships.documents) &&
        Objects.equals(this.beneficialOwners, businessApplicationRelationships.beneficialOwners) &&
        Objects.equals(this.org, businessApplicationRelationships.org) &&
        Objects.equals(this.applicationForm, businessApplicationRelationships.applicationForm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customer, documents, beneficialOwners, org, applicationForm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessApplicationRelationships {\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    beneficialOwners: ").append(toIndentedString(beneficialOwners)).append("\n");
    sb.append("    org: ").append(toIndentedString(org)).append("\n");
    sb.append("    applicationForm: ").append(toIndentedString(applicationForm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `customer` to the URL query string
    if (getCustomer() != null) {
      joiner.add(getCustomer().toUrlQueryString(prefix + "customer" + suffix));
    }

    // add `documents` to the URL query string
    if (getDocuments() != null) {
      joiner.add(getDocuments().toUrlQueryString(prefix + "documents" + suffix));
    }

    // add `beneficialOwners` to the URL query string
    if (getBeneficialOwners() != null) {
      joiner.add(getBeneficialOwners().toUrlQueryString(prefix + "beneficialOwners" + suffix));
    }

    // add `org` to the URL query string
    if (getOrg() != null) {
      joiner.add(getOrg().toUrlQueryString(prefix + "org" + suffix));
    }

    // add `applicationForm` to the URL query string
    if (getApplicationForm() != null) {
      joiner.add(getApplicationForm().toUrlQueryString(prefix + "applicationForm" + suffix));
    }

    return joiner.toString();
  }
}

