/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import unit.java.sdk.model.CreateApiTokenRequestDataAttributesResourcesInner;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import unit.java.sdk.ApiClient;
/**
 * CreateCustomerTokenRequestDataAttributes
 */
@JsonPropertyOrder({
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_SCOPE,
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_VERIFICATION_TOKEN,
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_JWT_TOKEN,
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_EXPIRES_IN,
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_VERIFICATION_CODE,
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_RESOURCES,
  CreateCustomerTokenRequestDataAttributes.JSON_PROPERTY_UPGRADABLE_SCOPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class CreateCustomerTokenRequestDataAttributes {
  public static final String JSON_PROPERTY_SCOPE = "scope";
  private String scope;

  public static final String JSON_PROPERTY_VERIFICATION_TOKEN = "verificationToken";
  private String verificationToken;

  public static final String JSON_PROPERTY_JWT_TOKEN = "jwtToken";
  private String jwtToken;

  public static final String JSON_PROPERTY_EXPIRES_IN = "expiresIn";
  private Integer expiresIn;

  public static final String JSON_PROPERTY_VERIFICATION_CODE = "verificationCode";
  private String verificationCode;

  public static final String JSON_PROPERTY_RESOURCES = "resources";
  private List<CreateApiTokenRequestDataAttributesResourcesInner> resources = new ArrayList<>();

  public static final String JSON_PROPERTY_UPGRADABLE_SCOPE = "upgradableScope";
  private String upgradableScope;

  public CreateCustomerTokenRequestDataAttributes() { 
  }

  public CreateCustomerTokenRequestDataAttributes scope(String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Get scope
   * @return scope
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getScope() {
    return scope;
  }


  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScope(String scope) {
    this.scope = scope;
  }


  public CreateCustomerTokenRequestDataAttributes verificationToken(String verificationToken) {
    this.verificationToken = verificationToken;
    return this;
  }

  /**
   * Get verificationToken
   * @return verificationToken
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getVerificationToken() {
    return verificationToken;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationToken(String verificationToken) {
    this.verificationToken = verificationToken;
  }


  public CreateCustomerTokenRequestDataAttributes jwtToken(String jwtToken) {
    this.jwtToken = jwtToken;
    return this;
  }

  /**
   * Get jwtToken
   * @return jwtToken
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JWT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getJwtToken() {
    return jwtToken;
  }


  @JsonProperty(JSON_PROPERTY_JWT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJwtToken(String jwtToken) {
    this.jwtToken = jwtToken;
  }


  public CreateCustomerTokenRequestDataAttributes expiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  /**
   * Get expiresIn
   * @return expiresIn
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getExpiresIn() {
    return expiresIn;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
  }


  public CreateCustomerTokenRequestDataAttributes verificationCode(String verificationCode) {
    this.verificationCode = verificationCode;
    return this;
  }

  /**
   * Get verificationCode
   * @return verificationCode
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getVerificationCode() {
    return verificationCode;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationCode(String verificationCode) {
    this.verificationCode = verificationCode;
  }


  public CreateCustomerTokenRequestDataAttributes resources(List<CreateApiTokenRequestDataAttributesResourcesInner> resources) {
    this.resources = resources;
    return this;
  }

  public CreateCustomerTokenRequestDataAttributes addResourcesItem(CreateApiTokenRequestDataAttributesResourcesInner resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<CreateApiTokenRequestDataAttributesResourcesInner> getResources() {
    return resources;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResources(List<CreateApiTokenRequestDataAttributesResourcesInner> resources) {
    this.resources = resources;
  }


  public CreateCustomerTokenRequestDataAttributes upgradableScope(String upgradableScope) {
    this.upgradableScope = upgradableScope;
    return this;
  }

  /**
   * Get upgradableScope
   * @return upgradableScope
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPGRADABLE_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUpgradableScope() {
    return upgradableScope;
  }


  @JsonProperty(JSON_PROPERTY_UPGRADABLE_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpgradableScope(String upgradableScope) {
    this.upgradableScope = upgradableScope;
  }


  /**
   * Return true if this CreateCustomerTokenRequest_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomerTokenRequestDataAttributes createCustomerTokenRequestDataAttributes = (CreateCustomerTokenRequestDataAttributes) o;
    return Objects.equals(this.scope, createCustomerTokenRequestDataAttributes.scope) &&
        Objects.equals(this.verificationToken, createCustomerTokenRequestDataAttributes.verificationToken) &&
        Objects.equals(this.jwtToken, createCustomerTokenRequestDataAttributes.jwtToken) &&
        Objects.equals(this.expiresIn, createCustomerTokenRequestDataAttributes.expiresIn) &&
        Objects.equals(this.verificationCode, createCustomerTokenRequestDataAttributes.verificationCode) &&
        Objects.equals(this.resources, createCustomerTokenRequestDataAttributes.resources) &&
        Objects.equals(this.upgradableScope, createCustomerTokenRequestDataAttributes.upgradableScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scope, verificationToken, jwtToken, expiresIn, verificationCode, resources, upgradableScope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomerTokenRequestDataAttributes {\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    verificationToken: ").append(toIndentedString(verificationToken)).append("\n");
    sb.append("    jwtToken: ").append(toIndentedString(jwtToken)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    verificationCode: ").append(toIndentedString(verificationCode)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    upgradableScope: ").append(toIndentedString(upgradableScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `scope` to the URL query string
    if (getScope() != null) {
      joiner.add(String.format("%sscope%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getScope()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `verificationToken` to the URL query string
    if (getVerificationToken() != null) {
      joiner.add(String.format("%sverificationToken%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVerificationToken()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `jwtToken` to the URL query string
    if (getJwtToken() != null) {
      joiner.add(String.format("%sjwtToken%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getJwtToken()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `expiresIn` to the URL query string
    if (getExpiresIn() != null) {
      joiner.add(String.format("%sexpiresIn%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getExpiresIn()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `verificationCode` to the URL query string
    if (getVerificationCode() != null) {
      joiner.add(String.format("%sverificationCode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVerificationCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `resources` to the URL query string
    if (getResources() != null) {
      for (int i = 0; i < getResources().size(); i++) {
        if (getResources().get(i) != null) {
          joiner.add(getResources().get(i).toUrlQueryString(String.format("%sresources%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `upgradableScope` to the URL query string
    if (getUpgradableScope() != null) {
      joiner.add(String.format("%supgradableScope%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getUpgradableScope()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

