/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import unit.java.sdk.model.Phone;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * CreateCustomerTokenVerificationDataAttributes
 */
@JsonPropertyOrder({
  CreateCustomerTokenVerificationDataAttributes.JSON_PROPERTY_CHANNEL,
  CreateCustomerTokenVerificationDataAttributes.JSON_PROPERTY_PHONE,
  CreateCustomerTokenVerificationDataAttributes.JSON_PROPERTY_APP_HASH,
  CreateCustomerTokenVerificationDataAttributes.JSON_PROPERTY_LANGUAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateCustomerTokenVerificationDataAttributes {
  /**
   * Gets or Sets channel
   */
  public enum ChannelEnum {
    SMS("sms"),
    
    CALL("call");

    private String value;

    ChannelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChannelEnum fromValue(String value) {
      for (ChannelEnum b : ChannelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHANNEL = "channel";
  private ChannelEnum channel;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private Phone phone;

  public static final String JSON_PROPERTY_APP_HASH = "appHash";
  private String appHash;

  /**
   * Gets or Sets language
   */
  public enum LanguageEnum {
    EN("en"),
    
    AF("af"),
    
    AR("ar"),
    
    CA("ca"),
    
    ZH("zh"),
    
    ZH_CN("zh-CN"),
    
    ZH_HK("zh-HK"),
    
    HR("hr"),
    
    CS("cs"),
    
    DA("da"),
    
    NL("nl"),
    
    EN_GB("en-GB"),
    
    ET("et"),
    
    FI("fi"),
    
    FR("fr"),
    
    DE("de"),
    
    EL("el"),
    
    HE("he"),
    
    HI("hi"),
    
    HU("hu"),
    
    ID("id"),
    
    IT("it"),
    
    JA("ja"),
    
    KN("kn"),
    
    KO("ko"),
    
    MS("ms"),
    
    MR("mr"),
    
    NB("nb"),
    
    PL("pl"),
    
    PT_BR("pt-BR"),
    
    PT("pt"),
    
    RO("ro"),
    
    RU("ru"),
    
    SK("sk"),
    
    ES("es"),
    
    SV("sv"),
    
    TL("tl"),
    
    TE("te"),
    
    TH("th"),
    
    TR("tr"),
    
    VI("vi");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private LanguageEnum language;

  public CreateCustomerTokenVerificationDataAttributes() { 
  }

  public CreateCustomerTokenVerificationDataAttributes channel(ChannelEnum channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ChannelEnum getChannel() {
    return channel;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannel(ChannelEnum channel) {
    this.channel = channel;
  }


  public CreateCustomerTokenVerificationDataAttributes phone(Phone phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Phone getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(Phone phone) {
    this.phone = phone;
  }


  public CreateCustomerTokenVerificationDataAttributes appHash(String appHash) {
    this.appHash = appHash;
    return this;
  }

   /**
   * Get appHash
   * @return appHash
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppHash() {
    return appHash;
  }


  @JsonProperty(JSON_PROPERTY_APP_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppHash(String appHash) {
    this.appHash = appHash;
  }


  public CreateCustomerTokenVerificationDataAttributes language(LanguageEnum language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LanguageEnum getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  /**
   * Return true if this createCustomerTokenVerification_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomerTokenVerificationDataAttributes createCustomerTokenVerificationDataAttributes = (CreateCustomerTokenVerificationDataAttributes) o;
    return Objects.equals(this.channel, createCustomerTokenVerificationDataAttributes.channel) &&
        Objects.equals(this.phone, createCustomerTokenVerificationDataAttributes.phone) &&
        Objects.equals(this.appHash, createCustomerTokenVerificationDataAttributes.appHash) &&
        Objects.equals(this.language, createCustomerTokenVerificationDataAttributes.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channel, phone, appHash, language);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomerTokenVerificationDataAttributes {\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    appHash: ").append(toIndentedString(appHash)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `channel` to the URL query string
    if (getChannel() != null) {
      joiner.add(String.format("%schannel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getChannel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `phone` to the URL query string
    if (getPhone() != null) {
      joiner.add(getPhone().toUrlQueryString(prefix + "phone" + suffix));
    }

    // add `appHash` to the URL query string
    if (getAppHash() != null) {
      joiner.add(String.format("%sappHash%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAppHash()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `language` to the URL query string
    if (getLanguage() != null) {
      joiner.add(String.format("%slanguage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLanguage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

