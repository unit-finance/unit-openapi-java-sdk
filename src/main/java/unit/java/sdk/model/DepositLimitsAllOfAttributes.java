/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import unit.java.sdk.model.DepositLimitsAllOfAttributesAch;
import unit.java.sdk.model.DepositLimitsAllOfAttributesCard;
import unit.java.sdk.model.DepositLimitsAllOfAttributesCheckDeposit;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DepositLimitsAllOfAttributes
 */
@JsonPropertyOrder({
  DepositLimitsAllOfAttributes.JSON_PROPERTY_ACH,
  DepositLimitsAllOfAttributes.JSON_PROPERTY_CARD,
  DepositLimitsAllOfAttributes.JSON_PROPERTY_CHECK_DEPOSIT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DepositLimitsAllOfAttributes {
  public static final String JSON_PROPERTY_ACH = "ach";
  private DepositLimitsAllOfAttributesAch ach;

  public static final String JSON_PROPERTY_CARD = "card";
  private DepositLimitsAllOfAttributesCard card;

  public static final String JSON_PROPERTY_CHECK_DEPOSIT = "checkDeposit";
  private DepositLimitsAllOfAttributesCheckDeposit checkDeposit;

  public DepositLimitsAllOfAttributes() { 
  }

  public DepositLimitsAllOfAttributes ach(DepositLimitsAllOfAttributesAch ach) {
    this.ach = ach;
    return this;
  }

   /**
   * Get ach
   * @return ach
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DepositLimitsAllOfAttributesAch getAch() {
    return ach;
  }


  @JsonProperty(JSON_PROPERTY_ACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAch(DepositLimitsAllOfAttributesAch ach) {
    this.ach = ach;
  }


  public DepositLimitsAllOfAttributes card(DepositLimitsAllOfAttributesCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DepositLimitsAllOfAttributesCard getCard() {
    return card;
  }


  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCard(DepositLimitsAllOfAttributesCard card) {
    this.card = card;
  }


  public DepositLimitsAllOfAttributes checkDeposit(DepositLimitsAllOfAttributesCheckDeposit checkDeposit) {
    this.checkDeposit = checkDeposit;
    return this;
  }

   /**
   * Get checkDeposit
   * @return checkDeposit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHECK_DEPOSIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DepositLimitsAllOfAttributesCheckDeposit getCheckDeposit() {
    return checkDeposit;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_DEPOSIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCheckDeposit(DepositLimitsAllOfAttributesCheckDeposit checkDeposit) {
    this.checkDeposit = checkDeposit;
  }


  /**
   * Return true if this DepositLimits_allOf_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositLimitsAllOfAttributes depositLimitsAllOfAttributes = (DepositLimitsAllOfAttributes) o;
    return Objects.equals(this.ach, depositLimitsAllOfAttributes.ach) &&
        Objects.equals(this.card, depositLimitsAllOfAttributes.card) &&
        Objects.equals(this.checkDeposit, depositLimitsAllOfAttributes.checkDeposit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ach, card, checkDeposit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositLimitsAllOfAttributes {\n");
    sb.append("    ach: ").append(toIndentedString(ach)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    checkDeposit: ").append(toIndentedString(checkDeposit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ach` to the URL query string
    if (getAch() != null) {
      joiner.add(getAch().toUrlQueryString(prefix + "ach" + suffix));
    }

    // add `card` to the URL query string
    if (getCard() != null) {
      joiner.add(getCard().toUrlQueryString(prefix + "card" + suffix));
    }

    // add `checkDeposit` to the URL query string
    if (getCheckDeposit() != null) {
      joiner.add(getCheckDeposit().toUrlQueryString(prefix + "checkDeposit" + suffix));
    }

    return joiner.toString();
  }
}

