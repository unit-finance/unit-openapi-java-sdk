/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DepositLimitsAllOfAttributesAchLimits
 */
@JsonPropertyOrder({
  DepositLimitsAllOfAttributesAchLimits.JSON_PROPERTY_DAILY_DEBIT,
  DepositLimitsAllOfAttributesAchLimits.JSON_PROPERTY_DAILY_CREDIT,
  DepositLimitsAllOfAttributesAchLimits.JSON_PROPERTY_MONTHLY_DEBIT,
  DepositLimitsAllOfAttributesAchLimits.JSON_PROPERTY_MONTHLY_DEBIT_SOFT,
  DepositLimitsAllOfAttributesAchLimits.JSON_PROPERTY_DAILY_DEBIT_SOFT,
  DepositLimitsAllOfAttributesAchLimits.JSON_PROPERTY_MONTHLY_CREDIT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DepositLimitsAllOfAttributesAchLimits {
  public static final String JSON_PROPERTY_DAILY_DEBIT = "dailyDebit";
  private BigDecimal dailyDebit;

  public static final String JSON_PROPERTY_DAILY_CREDIT = "dailyCredit";
  private BigDecimal dailyCredit;

  public static final String JSON_PROPERTY_MONTHLY_DEBIT = "monthlyDebit";
  private BigDecimal monthlyDebit;

  public static final String JSON_PROPERTY_MONTHLY_DEBIT_SOFT = "monthlyDebitSoft";
  private BigDecimal monthlyDebitSoft;

  public static final String JSON_PROPERTY_DAILY_DEBIT_SOFT = "dailyDebitSoft";
  private BigDecimal dailyDebitSoft;

  public static final String JSON_PROPERTY_MONTHLY_CREDIT = "monthlyCredit";
  private BigDecimal monthlyCredit;

  public DepositLimitsAllOfAttributesAchLimits() { 
  }

  public DepositLimitsAllOfAttributesAchLimits dailyDebit(BigDecimal dailyDebit) {
    this.dailyDebit = dailyDebit;
    return this;
  }

   /**
   * Get dailyDebit
   * @return dailyDebit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAILY_DEBIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDailyDebit() {
    return dailyDebit;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_DEBIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDailyDebit(BigDecimal dailyDebit) {
    this.dailyDebit = dailyDebit;
  }


  public DepositLimitsAllOfAttributesAchLimits dailyCredit(BigDecimal dailyCredit) {
    this.dailyCredit = dailyCredit;
    return this;
  }

   /**
   * Get dailyCredit
   * @return dailyCredit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAILY_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDailyCredit() {
    return dailyCredit;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDailyCredit(BigDecimal dailyCredit) {
    this.dailyCredit = dailyCredit;
  }


  public DepositLimitsAllOfAttributesAchLimits monthlyDebit(BigDecimal monthlyDebit) {
    this.monthlyDebit = monthlyDebit;
    return this;
  }

   /**
   * Get monthlyDebit
   * @return monthlyDebit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTHLY_DEBIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMonthlyDebit() {
    return monthlyDebit;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY_DEBIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonthlyDebit(BigDecimal monthlyDebit) {
    this.monthlyDebit = monthlyDebit;
  }


  public DepositLimitsAllOfAttributesAchLimits monthlyDebitSoft(BigDecimal monthlyDebitSoft) {
    this.monthlyDebitSoft = monthlyDebitSoft;
    return this;
  }

   /**
   * Get monthlyDebitSoft
   * @return monthlyDebitSoft
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTHLY_DEBIT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMonthlyDebitSoft() {
    return monthlyDebitSoft;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY_DEBIT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonthlyDebitSoft(BigDecimal monthlyDebitSoft) {
    this.monthlyDebitSoft = monthlyDebitSoft;
  }


  public DepositLimitsAllOfAttributesAchLimits dailyDebitSoft(BigDecimal dailyDebitSoft) {
    this.dailyDebitSoft = dailyDebitSoft;
    return this;
  }

   /**
   * Get dailyDebitSoft
   * @return dailyDebitSoft
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAILY_DEBIT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getDailyDebitSoft() {
    return dailyDebitSoft;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_DEBIT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDailyDebitSoft(BigDecimal dailyDebitSoft) {
    this.dailyDebitSoft = dailyDebitSoft;
  }


  public DepositLimitsAllOfAttributesAchLimits monthlyCredit(BigDecimal monthlyCredit) {
    this.monthlyCredit = monthlyCredit;
    return this;
  }

   /**
   * Get monthlyCredit
   * @return monthlyCredit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTHLY_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMonthlyCredit() {
    return monthlyCredit;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY_CREDIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonthlyCredit(BigDecimal monthlyCredit) {
    this.monthlyCredit = monthlyCredit;
  }


  /**
   * Return true if this DepositLimits_allOf_attributes_ach_limits object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositLimitsAllOfAttributesAchLimits depositLimitsAllOfAttributesAchLimits = (DepositLimitsAllOfAttributesAchLimits) o;
    return Objects.equals(this.dailyDebit, depositLimitsAllOfAttributesAchLimits.dailyDebit) &&
        Objects.equals(this.dailyCredit, depositLimitsAllOfAttributesAchLimits.dailyCredit) &&
        Objects.equals(this.monthlyDebit, depositLimitsAllOfAttributesAchLimits.monthlyDebit) &&
        Objects.equals(this.monthlyDebitSoft, depositLimitsAllOfAttributesAchLimits.monthlyDebitSoft) &&
        Objects.equals(this.dailyDebitSoft, depositLimitsAllOfAttributesAchLimits.dailyDebitSoft) &&
        Objects.equals(this.monthlyCredit, depositLimitsAllOfAttributesAchLimits.monthlyCredit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailyDebit, dailyCredit, monthlyDebit, monthlyDebitSoft, dailyDebitSoft, monthlyCredit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositLimitsAllOfAttributesAchLimits {\n");
    sb.append("    dailyDebit: ").append(toIndentedString(dailyDebit)).append("\n");
    sb.append("    dailyCredit: ").append(toIndentedString(dailyCredit)).append("\n");
    sb.append("    monthlyDebit: ").append(toIndentedString(monthlyDebit)).append("\n");
    sb.append("    monthlyDebitSoft: ").append(toIndentedString(monthlyDebitSoft)).append("\n");
    sb.append("    dailyDebitSoft: ").append(toIndentedString(dailyDebitSoft)).append("\n");
    sb.append("    monthlyCredit: ").append(toIndentedString(monthlyCredit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `dailyDebit` to the URL query string
    if (getDailyDebit() != null) {
      joiner.add(String.format("%sdailyDebit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDailyDebit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dailyCredit` to the URL query string
    if (getDailyCredit() != null) {
      joiner.add(String.format("%sdailyCredit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDailyCredit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `monthlyDebit` to the URL query string
    if (getMonthlyDebit() != null) {
      joiner.add(String.format("%smonthlyDebit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMonthlyDebit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `monthlyDebitSoft` to the URL query string
    if (getMonthlyDebitSoft() != null) {
      joiner.add(String.format("%smonthlyDebitSoft%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMonthlyDebitSoft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dailyDebitSoft` to the URL query string
    if (getDailyDebitSoft() != null) {
      joiner.add(String.format("%sdailyDebitSoft%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDailyDebitSoft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `monthlyCredit` to the URL query string
    if (getMonthlyCredit() != null) {
      joiner.add(String.format("%smonthlyCredit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMonthlyCredit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

