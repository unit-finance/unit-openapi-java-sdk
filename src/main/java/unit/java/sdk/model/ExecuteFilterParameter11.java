/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ExecuteFilterParameter11
 */
@JsonPropertyOrder({
  ExecuteFilterParameter11.JSON_PROPERTY_TRANSACTION_ID,
  ExecuteFilterParameter11.JSON_PROPERTY_REWARDED_TRANSACTION_ID,
  ExecuteFilterParameter11.JSON_PROPERTY_RECEIVING_ACCOUNT_ID,
  ExecuteFilterParameter11.JSON_PROPERTY_CUSTOMER_ID,
  ExecuteFilterParameter11.JSON_PROPERTY_CARD_ID,
  ExecuteFilterParameter11.JSON_PROPERTY_SINCE,
  ExecuteFilterParameter11.JSON_PROPERTY_UNTIL,
  ExecuteFilterParameter11.JSON_PROPERTY_STATUS,
  ExecuteFilterParameter11.JSON_PROPERTY_TAGS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExecuteFilterParameter11 {
  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public static final String JSON_PROPERTY_REWARDED_TRANSACTION_ID = "rewardedTransactionId";
  private String rewardedTransactionId;

  public static final String JSON_PROPERTY_RECEIVING_ACCOUNT_ID = "receivingAccountId";
  private String receivingAccountId;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_CARD_ID = "cardId";
  private String cardId;

  public static final String JSON_PROPERTY_SINCE = "since";
  private String since;

  public static final String JSON_PROPERTY_UNTIL = "until";
  private String until;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Map<String, String> tags = new HashMap<>();

  public ExecuteFilterParameter11() { 
  }

  public ExecuteFilterParameter11 transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public ExecuteFilterParameter11 rewardedTransactionId(String rewardedTransactionId) {
    this.rewardedTransactionId = rewardedTransactionId;
    return this;
  }

   /**
   * Get rewardedTransactionId
   * @return rewardedTransactionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REWARDED_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRewardedTransactionId() {
    return rewardedTransactionId;
  }


  @JsonProperty(JSON_PROPERTY_REWARDED_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRewardedTransactionId(String rewardedTransactionId) {
    this.rewardedTransactionId = rewardedTransactionId;
  }


  public ExecuteFilterParameter11 receivingAccountId(String receivingAccountId) {
    this.receivingAccountId = receivingAccountId;
    return this;
  }

   /**
   * Get receivingAccountId
   * @return receivingAccountId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECEIVING_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReceivingAccountId() {
    return receivingAccountId;
  }


  @JsonProperty(JSON_PROPERTY_RECEIVING_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReceivingAccountId(String receivingAccountId) {
    this.receivingAccountId = receivingAccountId;
  }


  public ExecuteFilterParameter11 customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ExecuteFilterParameter11 cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * Get cardId
   * @return cardId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardId() {
    return cardId;
  }


  @JsonProperty(JSON_PROPERTY_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardId(String cardId) {
    this.cardId = cardId;
  }


  public ExecuteFilterParameter11 since(String since) {
    this.since = since;
    return this;
  }

   /**
   * Get since
   * @return since
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSince() {
    return since;
  }


  @JsonProperty(JSON_PROPERTY_SINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSince(String since) {
    this.since = since;
  }


  public ExecuteFilterParameter11 until(String until) {
    this.until = until;
    return this;
  }

   /**
   * Get until
   * @return until
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUntil() {
    return until;
  }


  @JsonProperty(JSON_PROPERTY_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUntil(String until) {
    this.until = until;
  }


  public ExecuteFilterParameter11 status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public ExecuteFilterParameter11 tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public ExecuteFilterParameter11 putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  /**
   * Return true if this execute_filter_parameter_11 object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecuteFilterParameter11 executeFilterParameter11 = (ExecuteFilterParameter11) o;
    return Objects.equals(this.transactionId, executeFilterParameter11.transactionId) &&
        Objects.equals(this.rewardedTransactionId, executeFilterParameter11.rewardedTransactionId) &&
        Objects.equals(this.receivingAccountId, executeFilterParameter11.receivingAccountId) &&
        Objects.equals(this.customerId, executeFilterParameter11.customerId) &&
        Objects.equals(this.cardId, executeFilterParameter11.cardId) &&
        Objects.equals(this.since, executeFilterParameter11.since) &&
        Objects.equals(this.until, executeFilterParameter11.until) &&
        Objects.equals(this.status, executeFilterParameter11.status) &&
        Objects.equals(this.tags, executeFilterParameter11.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, rewardedTransactionId, receivingAccountId, customerId, cardId, since, until, status, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecuteFilterParameter11 {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    rewardedTransactionId: ").append(toIndentedString(rewardedTransactionId)).append("\n");
    sb.append("    receivingAccountId: ").append(toIndentedString(receivingAccountId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    since: ").append(toIndentedString(since)).append("\n");
    sb.append("    until: ").append(toIndentedString(until)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `transactionId` to the URL query string
    if (getTransactionId() != null) {
      joiner.add(String.format("%stransactionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTransactionId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rewardedTransactionId` to the URL query string
    if (getRewardedTransactionId() != null) {
      joiner.add(String.format("%srewardedTransactionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRewardedTransactionId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `receivingAccountId` to the URL query string
    if (getReceivingAccountId() != null) {
      joiner.add(String.format("%sreceivingAccountId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReceivingAccountId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `customerId` to the URL query string
    if (getCustomerId() != null) {
      joiner.add(String.format("%scustomerId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCustomerId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cardId` to the URL query string
    if (getCardId() != null) {
      joiner.add(String.format("%scardId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCardId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `since` to the URL query string
    if (getSince() != null) {
      joiner.add(String.format("%ssince%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSince()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `until` to the URL query string
    if (getUntil() != null) {
      joiner.add(String.format("%suntil%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUntil()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (String _key : getTags().keySet()) {
        joiner.add(String.format("%stags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getTags().get(_key), URLEncoder.encode(String.valueOf(getTags().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

