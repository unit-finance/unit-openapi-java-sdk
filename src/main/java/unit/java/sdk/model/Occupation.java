/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets Occupation
 */
public enum Occupation {
  
  ARCHITECT_OR_ENGINEER("ArchitectOrEngineer"),
  
  BUSINESS_ANALYST_ACCOUNTANT_OR_FINANCIAL_ADVISOR("BusinessAnalystAccountantOrFinancialAdvisor"),
  
  COMMUNITY_AND_SOCIAL_SERVICES_WORKER("CommunityAndSocialServicesWorker"),
  
  CONSTRUCTION_MECHANIC_OR_MAINTENANCE_WORKER("ConstructionMechanicOrMaintenanceWorker"),
  
  DOCTOR("Doctor"),
  
  EDUCATOR("Educator"),
  
  ENTERTAINMENT_SPORTS_ARTS_OR_MEDIA("EntertainmentSportsArtsOrMedia"),
  
  EXECUTIVE_OR_MANAGER("ExecutiveOrManager"),
  
  FARMER_FISHERMAN_FORESTER("FarmerFishermanForester"),
  
  FOOD_SERVICE_WORKER("FoodServiceWorker"),
  
  GIG_WORKER("GigWorker"),
  
  HOSPITALITY_OFFICE_OR_ADMINISTRATIVE_SUPPORT_WORKER("HospitalityOfficeOrAdministrativeSupportWorker"),
  
  HOUSEHOLD_MANAGER("HouseholdManager"),
  
  JANITOR_HOUSEKEEPER_LANDSCAPER("JanitorHousekeeperLandscaper"),
  
  LAWYER("Lawyer"),
  
  MANUFACTURING_OR_PRODUCTION_WORKER("ManufacturingOrProductionWorker"),
  
  MILITARY_OR_PUBLIC_SAFETY("MilitaryOrPublicSafety"),
  
  NURSE_HEALTHCARE_TECHNICIAN_OR_HEALTHCARE_SUPPORT("NurseHealthcareTechnicianOrHealthcareSupport"),
  
  PERSONAL_CARE_OR_SERVICE_WORKER("PersonalCareOrServiceWorker"),
  
  PILOT_DRIVER_OPERATOR("PilotDriverOperator"),
  
  SALES_REPRESENTATIVE_BROKER_AGENT("SalesRepresentativeBrokerAgent"),
  
  SCIENTIST_OR_TECHNOLOGIST("ScientistOrTechnologist"),
  
  STUDENT("Student");

  private String value;

  Occupation(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static Occupation fromValue(String value) {
    for (Occupation b : Occupation.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

