/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import unit.java.sdk.model.ReceivedPaymentRelationshipsCustomer;
import unit.java.sdk.model.RecurringAchPaymentRelationshipsAccount;
import unit.java.sdk.model.RecurringAchPaymentRelationshipsCounterparty;
import unit.java.sdk.model.RecurringAchPaymentRelationshipsOrg;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RecurringAchPaymentRelationships
 */
@JsonPropertyOrder({
  RecurringAchPaymentRelationships.JSON_PROPERTY_ACCOUNT,
  RecurringAchPaymentRelationships.JSON_PROPERTY_COUNTERPARTY,
  RecurringAchPaymentRelationships.JSON_PROPERTY_CUSTOMER,
  RecurringAchPaymentRelationships.JSON_PROPERTY_ORG
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RecurringAchPaymentRelationships {
  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private RecurringAchPaymentRelationshipsAccount account;

  public static final String JSON_PROPERTY_COUNTERPARTY = "counterparty";
  private RecurringAchPaymentRelationshipsCounterparty counterparty;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private ReceivedPaymentRelationshipsCustomer customer;

  public static final String JSON_PROPERTY_ORG = "org";
  private RecurringAchPaymentRelationshipsOrg org;

  public RecurringAchPaymentRelationships() { 
  }

  public RecurringAchPaymentRelationships account(RecurringAchPaymentRelationshipsAccount account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecurringAchPaymentRelationshipsAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(RecurringAchPaymentRelationshipsAccount account) {
    this.account = account;
  }


  public RecurringAchPaymentRelationships counterparty(RecurringAchPaymentRelationshipsCounterparty counterparty) {
    this.counterparty = counterparty;
    return this;
  }

   /**
   * Get counterparty
   * @return counterparty
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTERPARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecurringAchPaymentRelationshipsCounterparty getCounterparty() {
    return counterparty;
  }


  @JsonProperty(JSON_PROPERTY_COUNTERPARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCounterparty(RecurringAchPaymentRelationshipsCounterparty counterparty) {
    this.counterparty = counterparty;
  }


  public RecurringAchPaymentRelationships customer(ReceivedPaymentRelationshipsCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReceivedPaymentRelationshipsCustomer getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomer(ReceivedPaymentRelationshipsCustomer customer) {
    this.customer = customer;
  }


  public RecurringAchPaymentRelationships org(RecurringAchPaymentRelationshipsOrg org) {
    this.org = org;
    return this;
  }

   /**
   * Get org
   * @return org
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecurringAchPaymentRelationshipsOrg getOrg() {
    return org;
  }


  @JsonProperty(JSON_PROPERTY_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrg(RecurringAchPaymentRelationshipsOrg org) {
    this.org = org;
  }


  /**
   * Return true if this recurringAchPaymentRelationships object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecurringAchPaymentRelationships recurringAchPaymentRelationships = (RecurringAchPaymentRelationships) o;
    return Objects.equals(this.account, recurringAchPaymentRelationships.account) &&
        Objects.equals(this.counterparty, recurringAchPaymentRelationships.counterparty) &&
        Objects.equals(this.customer, recurringAchPaymentRelationships.customer) &&
        Objects.equals(this.org, recurringAchPaymentRelationships.org);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, counterparty, customer, org);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecurringAchPaymentRelationships {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    counterparty: ").append(toIndentedString(counterparty)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    org: ").append(toIndentedString(org)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `account` to the URL query string
    if (getAccount() != null) {
      joiner.add(getAccount().toUrlQueryString(prefix + "account" + suffix));
    }

    // add `counterparty` to the URL query string
    if (getCounterparty() != null) {
      joiner.add(getCounterparty().toUrlQueryString(prefix + "counterparty" + suffix));
    }

    // add `customer` to the URL query string
    if (getCustomer() != null) {
      joiner.add(getCustomer().toUrlQueryString(prefix + "customer" + suffix));
    }

    // add `org` to the URL query string
    if (getOrg() != null) {
      joiner.add(getOrg().toUrlQueryString(prefix + "org" + suffix));
    }

    return joiner.toString();
  }
}

