/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import unit.java.sdk.ApiClient;
/**
 * TaxFormAttributes
 */
@JsonPropertyOrder({
  TaxFormAttributes.JSON_PROPERTY_FORM_TYPE,
  TaxFormAttributes.JSON_PROPERTY_TAX_YEAR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TaxFormAttributes {
  public static final String JSON_PROPERTY_FORM_TYPE = "formType";
  private String formType;

  public static final String JSON_PROPERTY_TAX_YEAR = "taxYear";
  private String taxYear;

  public TaxFormAttributes() { 
  }

  public TaxFormAttributes formType(String formType) {
    this.formType = formType;
    return this;
  }

  /**
   * Get formType
   * @return formType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FORM_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getFormType() {
    return formType;
  }


  @JsonProperty(JSON_PROPERTY_FORM_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFormType(String formType) {
    this.formType = formType;
  }


  public TaxFormAttributes taxYear(String taxYear) {
    this.taxYear = taxYear;
    return this;
  }

  /**
   * Get taxYear
   * @return taxYear
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAX_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getTaxYear() {
    return taxYear;
  }


  @JsonProperty(JSON_PROPERTY_TAX_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTaxYear(String taxYear) {
    this.taxYear = taxYear;
  }


  /**
   * Return true if this TaxForm_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxFormAttributes taxFormAttributes = (TaxFormAttributes) o;
    return Objects.equals(this.formType, taxFormAttributes.formType) &&
        Objects.equals(this.taxYear, taxFormAttributes.taxYear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(formType, taxYear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxFormAttributes {\n");
    sb.append("    formType: ").append(toIndentedString(formType)).append("\n");
    sb.append("    taxYear: ").append(toIndentedString(taxYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `formType` to the URL query string
    if (getFormType() != null) {
      joiner.add(String.format("%sformType%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getFormType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `taxYear` to the URL query string
    if (getTaxYear() != null) {
      joiner.add(String.format("%staxYear%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTaxYear()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

