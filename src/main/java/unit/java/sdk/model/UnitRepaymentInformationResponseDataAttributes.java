/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UnitRepaymentInformationResponseDataAttributes
 */
@JsonPropertyOrder({
  UnitRepaymentInformationResponseDataAttributes.JSON_PROPERTY_REMAINING_AMOUNT_DUE,
  UnitRepaymentInformationResponseDataAttributes.JSON_PROPERTY_REMAINING_AMOUNT_OVERDUE,
  UnitRepaymentInformationResponseDataAttributes.JSON_PROPERTY_INITIATED_REPAYMENTS,
  UnitRepaymentInformationResponseDataAttributes.JSON_PROPERTY_STATEMENT_PERIOD_START,
  UnitRepaymentInformationResponseDataAttributes.JSON_PROPERTY_STATEMENT_PERIOD_END,
  UnitRepaymentInformationResponseDataAttributes.JSON_PROPERTY_NEXT_REPAYMENT_DUE_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UnitRepaymentInformationResponseDataAttributes {
  public static final String JSON_PROPERTY_REMAINING_AMOUNT_DUE = "remainingAmountDue";
  private Integer remainingAmountDue;

  public static final String JSON_PROPERTY_REMAINING_AMOUNT_OVERDUE = "remainingAmountOverdue";
  private Integer remainingAmountOverdue;

  public static final String JSON_PROPERTY_INITIATED_REPAYMENTS = "initiatedRepayments";
  private Integer initiatedRepayments;

  public static final String JSON_PROPERTY_STATEMENT_PERIOD_START = "statementPeriodStart";
  private LocalDate statementPeriodStart;

  public static final String JSON_PROPERTY_STATEMENT_PERIOD_END = "statementPeriodEnd";
  private LocalDate statementPeriodEnd;

  public static final String JSON_PROPERTY_NEXT_REPAYMENT_DUE_DATE = "nextRepaymentDueDate";
  private LocalDate nextRepaymentDueDate;

  public UnitRepaymentInformationResponseDataAttributes() { 
  }

  public UnitRepaymentInformationResponseDataAttributes remainingAmountDue(Integer remainingAmountDue) {
    this.remainingAmountDue = remainingAmountDue;
    return this;
  }

   /**
   * Get remainingAmountDue
   * @return remainingAmountDue
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REMAINING_AMOUNT_DUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRemainingAmountDue() {
    return remainingAmountDue;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_AMOUNT_DUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRemainingAmountDue(Integer remainingAmountDue) {
    this.remainingAmountDue = remainingAmountDue;
  }


  public UnitRepaymentInformationResponseDataAttributes remainingAmountOverdue(Integer remainingAmountOverdue) {
    this.remainingAmountOverdue = remainingAmountOverdue;
    return this;
  }

   /**
   * Get remainingAmountOverdue
   * @return remainingAmountOverdue
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REMAINING_AMOUNT_OVERDUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRemainingAmountOverdue() {
    return remainingAmountOverdue;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_AMOUNT_OVERDUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRemainingAmountOverdue(Integer remainingAmountOverdue) {
    this.remainingAmountOverdue = remainingAmountOverdue;
  }


  public UnitRepaymentInformationResponseDataAttributes initiatedRepayments(Integer initiatedRepayments) {
    this.initiatedRepayments = initiatedRepayments;
    return this;
  }

   /**
   * Get initiatedRepayments
   * @return initiatedRepayments
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INITIATED_REPAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInitiatedRepayments() {
    return initiatedRepayments;
  }


  @JsonProperty(JSON_PROPERTY_INITIATED_REPAYMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInitiatedRepayments(Integer initiatedRepayments) {
    this.initiatedRepayments = initiatedRepayments;
  }


  public UnitRepaymentInformationResponseDataAttributes statementPeriodStart(LocalDate statementPeriodStart) {
    this.statementPeriodStart = statementPeriodStart;
    return this;
  }

   /**
   * Get statementPeriodStart
   * @return statementPeriodStart
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATEMENT_PERIOD_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getStatementPeriodStart() {
    return statementPeriodStart;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_PERIOD_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatementPeriodStart(LocalDate statementPeriodStart) {
    this.statementPeriodStart = statementPeriodStart;
  }


  public UnitRepaymentInformationResponseDataAttributes statementPeriodEnd(LocalDate statementPeriodEnd) {
    this.statementPeriodEnd = statementPeriodEnd;
    return this;
  }

   /**
   * Get statementPeriodEnd
   * @return statementPeriodEnd
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATEMENT_PERIOD_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getStatementPeriodEnd() {
    return statementPeriodEnd;
  }


  @JsonProperty(JSON_PROPERTY_STATEMENT_PERIOD_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatementPeriodEnd(LocalDate statementPeriodEnd) {
    this.statementPeriodEnd = statementPeriodEnd;
  }


  public UnitRepaymentInformationResponseDataAttributes nextRepaymentDueDate(LocalDate nextRepaymentDueDate) {
    this.nextRepaymentDueDate = nextRepaymentDueDate;
    return this;
  }

   /**
   * Get nextRepaymentDueDate
   * @return nextRepaymentDueDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEXT_REPAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getNextRepaymentDueDate() {
    return nextRepaymentDueDate;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_REPAYMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNextRepaymentDueDate(LocalDate nextRepaymentDueDate) {
    this.nextRepaymentDueDate = nextRepaymentDueDate;
  }


  /**
   * Return true if this UnitRepaymentInformationResponse_data_attributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnitRepaymentInformationResponseDataAttributes unitRepaymentInformationResponseDataAttributes = (UnitRepaymentInformationResponseDataAttributes) o;
    return Objects.equals(this.remainingAmountDue, unitRepaymentInformationResponseDataAttributes.remainingAmountDue) &&
        Objects.equals(this.remainingAmountOverdue, unitRepaymentInformationResponseDataAttributes.remainingAmountOverdue) &&
        Objects.equals(this.initiatedRepayments, unitRepaymentInformationResponseDataAttributes.initiatedRepayments) &&
        Objects.equals(this.statementPeriodStart, unitRepaymentInformationResponseDataAttributes.statementPeriodStart) &&
        Objects.equals(this.statementPeriodEnd, unitRepaymentInformationResponseDataAttributes.statementPeriodEnd) &&
        Objects.equals(this.nextRepaymentDueDate, unitRepaymentInformationResponseDataAttributes.nextRepaymentDueDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remainingAmountDue, remainingAmountOverdue, initiatedRepayments, statementPeriodStart, statementPeriodEnd, nextRepaymentDueDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnitRepaymentInformationResponseDataAttributes {\n");
    sb.append("    remainingAmountDue: ").append(toIndentedString(remainingAmountDue)).append("\n");
    sb.append("    remainingAmountOverdue: ").append(toIndentedString(remainingAmountOverdue)).append("\n");
    sb.append("    initiatedRepayments: ").append(toIndentedString(initiatedRepayments)).append("\n");
    sb.append("    statementPeriodStart: ").append(toIndentedString(statementPeriodStart)).append("\n");
    sb.append("    statementPeriodEnd: ").append(toIndentedString(statementPeriodEnd)).append("\n");
    sb.append("    nextRepaymentDueDate: ").append(toIndentedString(nextRepaymentDueDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `remainingAmountDue` to the URL query string
    if (getRemainingAmountDue() != null) {
      joiner.add(String.format("%sremainingAmountDue%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRemainingAmountDue()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `remainingAmountOverdue` to the URL query string
    if (getRemainingAmountOverdue() != null) {
      joiner.add(String.format("%sremainingAmountOverdue%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRemainingAmountOverdue()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `initiatedRepayments` to the URL query string
    if (getInitiatedRepayments() != null) {
      joiner.add(String.format("%sinitiatedRepayments%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInitiatedRepayments()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statementPeriodStart` to the URL query string
    if (getStatementPeriodStart() != null) {
      joiner.add(String.format("%sstatementPeriodStart%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatementPeriodStart()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statementPeriodEnd` to the URL query string
    if (getStatementPeriodEnd() != null) {
      joiner.add(String.format("%sstatementPeriodEnd%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatementPeriodEnd()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `nextRepaymentDueDate` to the URL query string
    if (getNextRepaymentDueDate() != null) {
      joiner.add(String.format("%snextRepaymentDueDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNextRepaymentDueDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

