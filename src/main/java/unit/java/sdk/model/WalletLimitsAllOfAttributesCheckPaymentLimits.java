/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import unit.java.sdk.ApiClient;
/**
 * WalletLimitsAllOfAttributesCheckPaymentLimits
 */
@JsonPropertyOrder({
  WalletLimitsAllOfAttributesCheckPaymentLimits.JSON_PROPERTY_DAILY_SENT,
  WalletLimitsAllOfAttributesCheckPaymentLimits.JSON_PROPERTY_MONTLY_SENT,
  WalletLimitsAllOfAttributesCheckPaymentLimits.JSON_PROPERTY_DAILY_SENT_SOFT,
  WalletLimitsAllOfAttributesCheckPaymentLimits.JSON_PROPERTY_MONTHLY_SENT_SOFT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class WalletLimitsAllOfAttributesCheckPaymentLimits {
  public static final String JSON_PROPERTY_DAILY_SENT = "dailySent";
  private BigDecimal dailySent;

  public static final String JSON_PROPERTY_MONTLY_SENT = "montlySent";
  private BigDecimal montlySent;

  public static final String JSON_PROPERTY_DAILY_SENT_SOFT = "dailySentSoft";
  private BigDecimal dailySentSoft;

  public static final String JSON_PROPERTY_MONTHLY_SENT_SOFT = "monthlySentSoft";
  private BigDecimal monthlySentSoft;

  public WalletLimitsAllOfAttributesCheckPaymentLimits() { 
  }

  public WalletLimitsAllOfAttributesCheckPaymentLimits dailySent(BigDecimal dailySent) {
    this.dailySent = dailySent;
    return this;
  }

  /**
   * Get dailySent
   * @return dailySent
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAILY_SENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BigDecimal getDailySent() {
    return dailySent;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_SENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDailySent(BigDecimal dailySent) {
    this.dailySent = dailySent;
  }


  public WalletLimitsAllOfAttributesCheckPaymentLimits montlySent(BigDecimal montlySent) {
    this.montlySent = montlySent;
    return this;
  }

  /**
   * Get montlySent
   * @return montlySent
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTLY_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getMontlySent() {
    return montlySent;
  }


  @JsonProperty(JSON_PROPERTY_MONTLY_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMontlySent(BigDecimal montlySent) {
    this.montlySent = montlySent;
  }


  public WalletLimitsAllOfAttributesCheckPaymentLimits dailySentSoft(BigDecimal dailySentSoft) {
    this.dailySentSoft = dailySentSoft;
    return this;
  }

  /**
   * Get dailySentSoft
   * @return dailySentSoft
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAILY_SENT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getDailySentSoft() {
    return dailySentSoft;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_SENT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDailySentSoft(BigDecimal dailySentSoft) {
    this.dailySentSoft = dailySentSoft;
  }


  public WalletLimitsAllOfAttributesCheckPaymentLimits monthlySentSoft(BigDecimal monthlySentSoft) {
    this.monthlySentSoft = monthlySentSoft;
    return this;
  }

  /**
   * Get monthlySentSoft
   * @return monthlySentSoft
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTHLY_SENT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getMonthlySentSoft() {
    return monthlySentSoft;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY_SENT_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonthlySentSoft(BigDecimal monthlySentSoft) {
    this.monthlySentSoft = monthlySentSoft;
  }


  /**
   * Return true if this WalletLimits_allOf_attributes_checkPayment_limits object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletLimitsAllOfAttributesCheckPaymentLimits walletLimitsAllOfAttributesCheckPaymentLimits = (WalletLimitsAllOfAttributesCheckPaymentLimits) o;
    return Objects.equals(this.dailySent, walletLimitsAllOfAttributesCheckPaymentLimits.dailySent) &&
        Objects.equals(this.montlySent, walletLimitsAllOfAttributesCheckPaymentLimits.montlySent) &&
        Objects.equals(this.dailySentSoft, walletLimitsAllOfAttributesCheckPaymentLimits.dailySentSoft) &&
        Objects.equals(this.monthlySentSoft, walletLimitsAllOfAttributesCheckPaymentLimits.monthlySentSoft);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailySent, montlySent, dailySentSoft, monthlySentSoft);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletLimitsAllOfAttributesCheckPaymentLimits {\n");
    sb.append("    dailySent: ").append(toIndentedString(dailySent)).append("\n");
    sb.append("    montlySent: ").append(toIndentedString(montlySent)).append("\n");
    sb.append("    dailySentSoft: ").append(toIndentedString(dailySentSoft)).append("\n");
    sb.append("    monthlySentSoft: ").append(toIndentedString(monthlySentSoft)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `dailySent` to the URL query string
    if (getDailySent() != null) {
      joiner.add(String.format("%sdailySent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDailySent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `montlySent` to the URL query string
    if (getMontlySent() != null) {
      joiner.add(String.format("%smontlySent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMontlySent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dailySentSoft` to the URL query string
    if (getDailySentSoft() != null) {
      joiner.add(String.format("%sdailySentSoft%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDailySentSoft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `monthlySentSoft` to the URL query string
    if (getMonthlySentSoft() != null) {
      joiner.add(String.format("%smonthlySentSoft%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMonthlySentSoft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

