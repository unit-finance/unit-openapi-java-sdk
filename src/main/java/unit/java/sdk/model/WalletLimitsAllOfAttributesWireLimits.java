/*
 * Unit OpenAPI specifications
 * An OpenAPI specifications for unit-sdk clients
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package unit.java.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import unit.java.sdk.ApiClient;
/**
 * WalletLimitsAllOfAttributesWireLimits
 */
@JsonPropertyOrder({
  WalletLimitsAllOfAttributesWireLimits.JSON_PROPERTY_DAILY_TRANSFER,
  WalletLimitsAllOfAttributesWireLimits.JSON_PROPERTY_MONTLY_TRANSFER,
  WalletLimitsAllOfAttributesWireLimits.JSON_PROPERTY_DAILY_TRANSFER_SOFT,
  WalletLimitsAllOfAttributesWireLimits.JSON_PROPERTY_MONTLY_TRANSFER_SOFT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class WalletLimitsAllOfAttributesWireLimits {
  public static final String JSON_PROPERTY_DAILY_TRANSFER = "dailyTransfer";
  private BigDecimal dailyTransfer;

  public static final String JSON_PROPERTY_MONTLY_TRANSFER = "montlyTransfer";
  private BigDecimal montlyTransfer;

  public static final String JSON_PROPERTY_DAILY_TRANSFER_SOFT = "dailyTransferSoft";
  private BigDecimal dailyTransferSoft;

  public static final String JSON_PROPERTY_MONTLY_TRANSFER_SOFT = "montlyTransferSoft";
  private BigDecimal montlyTransferSoft;

  public WalletLimitsAllOfAttributesWireLimits() { 
  }

  public WalletLimitsAllOfAttributesWireLimits dailyTransfer(BigDecimal dailyTransfer) {
    this.dailyTransfer = dailyTransfer;
    return this;
  }

  /**
   * Get dailyTransfer
   * @return dailyTransfer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DAILY_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BigDecimal getDailyTransfer() {
    return dailyTransfer;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDailyTransfer(BigDecimal dailyTransfer) {
    this.dailyTransfer = dailyTransfer;
  }


  public WalletLimitsAllOfAttributesWireLimits montlyTransfer(BigDecimal montlyTransfer) {
    this.montlyTransfer = montlyTransfer;
    return this;
  }

  /**
   * Get montlyTransfer
   * @return montlyTransfer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MONTLY_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BigDecimal getMontlyTransfer() {
    return montlyTransfer;
  }


  @JsonProperty(JSON_PROPERTY_MONTLY_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMontlyTransfer(BigDecimal montlyTransfer) {
    this.montlyTransfer = montlyTransfer;
  }


  public WalletLimitsAllOfAttributesWireLimits dailyTransferSoft(BigDecimal dailyTransferSoft) {
    this.dailyTransferSoft = dailyTransferSoft;
    return this;
  }

  /**
   * Get dailyTransferSoft
   * @return dailyTransferSoft
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAILY_TRANSFER_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getDailyTransferSoft() {
    return dailyTransferSoft;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_TRANSFER_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDailyTransferSoft(BigDecimal dailyTransferSoft) {
    this.dailyTransferSoft = dailyTransferSoft;
  }


  public WalletLimitsAllOfAttributesWireLimits montlyTransferSoft(BigDecimal montlyTransferSoft) {
    this.montlyTransferSoft = montlyTransferSoft;
    return this;
  }

  /**
   * Get montlyTransferSoft
   * @return montlyTransferSoft
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MONTLY_TRANSFER_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getMontlyTransferSoft() {
    return montlyTransferSoft;
  }


  @JsonProperty(JSON_PROPERTY_MONTLY_TRANSFER_SOFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMontlyTransferSoft(BigDecimal montlyTransferSoft) {
    this.montlyTransferSoft = montlyTransferSoft;
  }


  /**
   * Return true if this WalletLimits_allOf_attributes_wire_limits object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletLimitsAllOfAttributesWireLimits walletLimitsAllOfAttributesWireLimits = (WalletLimitsAllOfAttributesWireLimits) o;
    return Objects.equals(this.dailyTransfer, walletLimitsAllOfAttributesWireLimits.dailyTransfer) &&
        Objects.equals(this.montlyTransfer, walletLimitsAllOfAttributesWireLimits.montlyTransfer) &&
        Objects.equals(this.dailyTransferSoft, walletLimitsAllOfAttributesWireLimits.dailyTransferSoft) &&
        Objects.equals(this.montlyTransferSoft, walletLimitsAllOfAttributesWireLimits.montlyTransferSoft);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailyTransfer, montlyTransfer, dailyTransferSoft, montlyTransferSoft);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletLimitsAllOfAttributesWireLimits {\n");
    sb.append("    dailyTransfer: ").append(toIndentedString(dailyTransfer)).append("\n");
    sb.append("    montlyTransfer: ").append(toIndentedString(montlyTransfer)).append("\n");
    sb.append("    dailyTransferSoft: ").append(toIndentedString(dailyTransferSoft)).append("\n");
    sb.append("    montlyTransferSoft: ").append(toIndentedString(montlyTransferSoft)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `dailyTransfer` to the URL query string
    if (getDailyTransfer() != null) {
      joiner.add(String.format("%sdailyTransfer%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDailyTransfer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `montlyTransfer` to the URL query string
    if (getMontlyTransfer() != null) {
      joiner.add(String.format("%smontlyTransfer%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMontlyTransfer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dailyTransferSoft` to the URL query string
    if (getDailyTransferSoft() != null) {
      joiner.add(String.format("%sdailyTransferSoft%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDailyTransferSoft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `montlyTransferSoft` to the URL query string
    if (getMontlyTransferSoft() != null) {
      joiner.add(String.format("%smontlyTransferSoft%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMontlyTransferSoft()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

